{
	"names": {
		"$OBJNAME_0EF0": "Node Profile",
		"$EPCNAME_OPERATING_STATE": "Operating state",
		"$ELEMNAME_OPERATING_STATE": "Operating state",
		"$EPCNAME_VERSION_INFORMATION": "Version information",
		"$ELEMNAME_VERSION_INFORMATION": "Version information",
		"$EPCNAME_IDENTIFICATION_NUMBER": "Identification number",
		"$ELEMNAME_IDENTIFICATION_NUMBER": "Identification number",
		"$EPCNAME_ABNORMAL_OCCURRENCE_STATE": "Abnormal occurrence state",
		"$ELEMNAME_ABNORMAL_OCCURRENCE_STATE": "Abnormal occurrence state",
		"$EPCNAME_ABNORMAL_CONTENT": "Abnormal content",
		"$ELEMNAME_ABNORMAL_CONTENT": "Abnormal content",
		"$EPCNAME_MANUFACTURER_CODE": "Manufacturer code",
		"$ELEMNAME_MANUFACTURER_CODE": "Manufacturer code",
		"$EPCNAME_PLANT_CODE": "Plant Code",
		"$ELEMNAME_PLANT_CODE": "Plant Code",
		"$EPCNAME_PRODUCT_CODE": "Product code",
		"$ELEMNAME_PRODUCT_CODE": "Product code",
		"$EPCNAME_SERIAL_NUMBER": "Serial number",
		"$ELEMNAME_SERIAL_NUMBER": "Serial number",
		"$EPCNAME_MADE_DATE": "Made date",
		"$ELEMNAME_MADE_DATE": "Made date",
		"$EPCNAME_STATE_CHANGE_ANNOUNCEMENT_PROPERTY_MAP": "State change announcement property map",
		"$ELEMNAME_STATE_CHANGE_ANNOUNCEMENT_PROPERTY_MAP": "State change announcement property map",
		"$EPCNAME_SET_PROPERTY_MAP": "Set property map",
		"$ELEMNAME_SET_PROPERTY_MAP": "Set property map",
		"$EPCNAME_GET_PROPERTY_MAP": "Get property map",
		"$ELEMNAME_GET_PROPERTY_MAP": "Get property map",
		"$EPCNAME_INDIVIDUAL_IDENTIFICATION_INFORMATION": "Individual identification information",
		"$ELEMNAME_INDIVIDUAL_IDENTIFICATION_INFORMATION": "Individual identification information",
		"$EPCNAME_SELF_NODE_NUMBER_OF_INSTANCES": "Self-node number of instances",
		"$ELEMNAME_SELF_NODE_NUMBER_OF_INSTANCES": "Self-node number of instances",
		"$EPCNAME_THE_NUMBER_OF_THE_SELF_NODE_CLASS": "The number of the self-node class",
		"$ELEMNAME_THE_NUMBER_OF_THE_SELF_NODE_CLASS": "The number of the self-node class",
		"$EPCNAME_INSTANCE_LIST_NOTIFICATION": "Instance list notification",
		"$ELEMNAME_INSTANCE_THE_TOTAL_NUMBER": "Instance the total number",
		"$ELEMNAME_INSTANCE_LIST": "Instance list",
		"$EPCNAME_SELF_NODE_INSTANCE_LIST_S": "Self-node instance list S",
		"$EPCNAME_SELF_NODE_CLASS_LIST_S": "Self-node class list S",
		"$ELEMNAME_CLASS_TOTAL_NUMBER": "Class total number",
		"$ELEMNAME_CLASS_LIST": "Class List",
		"$OBJNAME_0000": "Superclass",
		"$EPCDOC_0000_80": "This property indicates the ON/OFF status.\nON=0x30, OFF=0x31\"",
		"$EPCNAME_INSTALLATION_LOCATION": "Installation location",
		"$EPCDOC_0000_81": "This property indicates the installation location\n\"See \"\"2.2 'Installation location' property.\"\"\"",
		"$ELEMNAME_INSTALLATION_LOCATION": "Installation location",
		"$EPCNAME_STANDARD_VERSION_INFORMATION": "Standard Version information",
		"$EPCDOC_0000_82": "This property indicates the version number of the corresponding standard.\nFirst byte: Fixed at 0x00 (for future reserved). Second byte: Fixed at 0x00 (for future reserved). Third byte: Indicates the order of release in the ASCII format. Fourth byte: Fixed at 0x00 (for future reserved).",
		"$ELEMNAME_STANDARD_VERSION_INFORMATION": "Standard Version information",
		"$EPCDOC_0000_83": "A number that allows each object to be uniquely identified.\n\"First byte: lower-layer communication ID field 0x01-0xFD: This is a communication protocol used in the lower-layer communication and is set arbitrarily according to the protocol class in the case where unique number is assigned (not used in ECHONET Lite). 0x11-0x1F: Power line Communication Protocol a and d systems 0x31-0x3F: Low-Power Radio Communication Protocol 0x41.0x4F: Extended HBS 0x51.0x5F: IrDA 0x61.0x6F: LonTalk 0x71.0x7F: Bluetooth 0x81.0x8F: Ethernet 0x91.0x9F: IEEE802.11/11b 0xA1: Power line Communication Protocol c systems 0xB1: IPv6/Ethernet 0xB2: IPv6/6LoWPAN 0xFE: 2.17 bytes are defined by the manufacturer, and are set according to the type. 0xFF: 2.9 bytes are defined when randomly generated protocol is used in the lower-layer communication. 0x00: Identification number is not set. Second and succeeding bytes: unique number field\"",
		"$EPCNAME_INSTANTANEOUS_POWER_CONSUMPTION_MEASUREMENTS": "Instantaneous power consumption measurements",
		"$EPCDOC_0000_84": "This property indicates the instantaneous power consumption of the device in watts.\n0x0000-0xFFFD(0-65535W)",
		"$ELEMNAME_INSTANTANEOUS_POWER_CONSUMPTION_MEASUREMENTS": "Instantaneous power consumption measurements",
		"$EPCNAME_CUMULATIVE_POWER_CONSUMPTION_MEASUREMENTS": "Cumulative power consumption measurements",
		"$EPCDOC_0000_85": "This property indicates the cumulative power consumption of the device in increments of 0.001kWh.\n0x0-0x3B9AC9FF (0-999,999.999kWh)",
		"$ELEMNAME_CUMULATIVE_POWER_CONSUMPTION_MEASUREMENTS": "Cumulative power consumption measurements",
		"$EPCNAME_MAKER_ABNORMAL_CODE": "Maker abnormal code",
		"$EPCDOC_0000_86": "This property indicates the manufacturer-defined fault code.\nFirst byte: Indicates the data size of the fault code field. Second to fourth bytes: Manufacturer code Fifth and succeeding bytes: Field for manufacturer-defined fault code",
		"$ELEMNAME_MAKER_ABNORMAL_CODE": "Maker abnormal code",
		"$EPCNAME_CURRENT_LIMIT_SETTING": "Current limit setting",
		"$EPCDOC_0000_87": "This property indicates the current limit setting (0-100%).\n0x00-0x64    (=0-100%)",
		"$ELEMNAME_CURRENT_LIMIT_SETTING": "Current limit setting",
		"$EPCDOC_0000_88": "This property indicates whether a fault (e.g. a sensor trouble) has occurred or not.\n\"Fault  occurred=0x41,  No  fault  has occurred=0x42\"",
		"$EPCDOC_0000_89": "Describes the fault.\n\"See 2.5 'Fault Description' Property.\"",
		"$EPCDOC_0000_8A": "3-byte manufacturer code\n(Defined by the ECHONET Consortium.)",
		"$EPCDOC_0000_8B": "3-byte business facility code\n(Defined by each manufacturer.)",
		"$EPCDOC_0000_8C": "Identifies the product using ASCII code.\n(Defined by each manufacturer.)",
		"$EPCDOC_0000_8D": "This property indicates the production number using ASCII code.\n(Defined by each manufacturer.)",
		"$EPCDOC_0000_8E": "4-byte production date code\nThis property indicates the production date in the YYMD format (1 character = 1 byte). YY: Year (e.g. 1999=0x07CF) M: Month (e.g. December=0x0C) D: Day (e.g. 20th=0x14)",
		"$EPCNAME_POWER_SAVING_OPERATION_SETTING": "Power-saving operation setting",
		"$EPCDOC_0000_8F": "This property indicates whether the device is operating in power-saving mode.\nOperating in power-saving mode =0x41 Operating in normal operation mode =0x42",
		"$ELEMNAME_POWER_SAVING_OPERATION_SETTING": "Power-saving operation setting",
		"$EPCNAME_REMOTE_CONTROL_SET": "Remote control set",
		"$EPCDOC_0000_93": "This property indicates whether remote control is through a public network or not.\nNot through a public network=0x41 Through a public network=0x42",
		"$ELEMNAME_REMOTE_CONTROL_SET": "Remote control set",
		"$EPCNAME_CURRENT_TIME_SETTING": "Current time setting",
		"$EPCDOC_0000_97": "Current time (HH: MM format)\n0x00.0x17: 0x00.0x3B (=0.23): (=0.59)",
		"$ELEMNAME_CURRENT_TIME_SETTING": "Current time setting",
		"$EPCNAME_CURRENT_DATE_SETTING": "Current date setting",
		"$EPCDOC_0000_98": "Current date (YYYY: MM: DD format)\n1.0x270F : 1.0x0C : 1.0x1F (=1.9999) : (=1.12) : (=1.31)",
		"$ELEMNAME_CURRENT_DATE_SETTING": "Current date setting",
		"$EPCNAME_POWER_LIMIT_SETTING": "Power limit setting",
		"$EPCDOC_0000_99": "This property indicates the power limit setting in watts.\n0x0000-0xFFFF(0-65535W)",
		"$ELEMNAME_POWER_LIMIT_SETTING": "Power limit setting",
		"$EPCNAME_INTEGRATED_OPERATING_TIME": "Integrated operating time",
		"$EPCDOC_0000_9A": "\"This property indicates the cumulative number of days, hours, minutes or seconds for which the device has operated, using 1 byte for the unit and 4 bytes for the time.\"\nFirst byte: Indicates the unit. Second: 0x41; Minute: 0x42; Hour: 0x43; Day:0x44 Second to fifth bytes: Indicates the elapsed time in the unit specified by the first byte. 0x00000000-0xFFFFFFFD (0-4294967295)",
		"$ELEMNAME_MEASURE_OF_TIME": "Measure of time",
		"$ELEMNAME_ELAPSED_TIME": "elapsed time",
		"$EPCDOC_0000_9D": "See Appendix 1.\n",
		"$EPCDOC_0000_9E": "See Appendix 1.\n",
		"$EPCDOC_0000_9F": "See Appendix 1.\n",
		"$OBJNAME_0001": "Gas leak sensor",
		"$EPCDOC_0001_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_DETECTION_THRESHOLD_LEVEL_SETTING": "Detection threshold level setting",
		"$EPCDOC_0001_B0": "Specifies detection threshold level in 8 steps.\n\n0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_DETECTION_THRESHOLD_LEVEL_SETTING": "Detection threshold level setting",
		"$EPCNAME_GAS_LEAK_OCCURRENCE_STATUS": "Gas leak occurrence status",
		"$EPCDOC_0001_B1": "This property indicates gas leak occurrence status.\n\nGas leak occurrence status found = 0x41 Gas leak occurrence status not found = 0x42\n\nName : Gas leak occurrence status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_GAS_LEAK_OCCURRENCE_STATUS": "Gas leak occurrence status",
		"$EPCNAME_GAS_LEAK_OCCURRENCE_STATUS_RESET_SETTING": "Gas leak occurrence status reset setting",
		"$EPCDOC_0001_BF": "Resets gas leak occurrence status by setting 0x00.\n\nReset = 0x00\n\nName : Gas leak occurrence status resetting\nEPC : 0xBF\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : undefined\n",
		"$ELEMNAME_GAS_LEAK_OCCURRENCE_STATUS_RESET_SETTING": "Gas leak occurrence status reset setting",
		"$OBJNAME_0002": "An intrusion detection sensor",
		"$EPCDOC_0002_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0002_B0": "Specifies detection threshold level (8-step).\n\n0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_INTRUSION_OCCURRENCE_STATE": "Intrusion occurrence state",
		"$EPCDOC_0002_B1": "This property indicates invasion occurrence status.\n\nInvasion occurrence status found = 0x41 Invasion occurrence status not found = 0x42\n\nName : Invasion occurrence status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_INTRUSION_OCCURRENCE_STATE": "Intrusion occurrence state",
		"$EPCNAME_INTRUSION_OCCURRENCE_STATE_RESET_SETTING": "Intrusion occurrence state reset setting",
		"$EPCDOC_0002_BF": "Resets invasion occurrence status by setting 0x00.\n\nReset = 0x00\n\nName : Invasion occurrence status resetting\nEPC : 0xBF\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : undefined\n",
		"$ELEMNAME_INTRUSION_OCCURRENCE_STATE_RESET_SETTING": "Intrusion occurrence state reset setting",
		"$OBJNAME_0003": "Emergency button",
		"$EPCDOC_0003_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_VERY_OCCURRENCE_STATE": "Very occurrence state",
		"$EPCDOC_0003_B1": "This property indicates emergency occurrence status.\n\nEmergency occurrence status found = 0x41 Emergency occurrence status not found = 0x42\n\nName : Emergency occurrence status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_VERY_OCCURRENCE_STATE": "Very occurrence state",
		"$EPCNAME_VERY_OCCURRENCE_STATE_RESET_SETTING": "Very occurrence state reset setting",
		"$EPCDOC_0003_BF": "Resets emergency occurrence status by setting 0x00.\n\nReset = 0x00\n\nName : Emergency occurrence status resetting\nEPC : 0xBF\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : undefined\n",
		"$ELEMNAME_VERY_OCCURRENCE_STATE_RESET_SETTING": "Very occurrence state reset setting",
		"$OBJNAME_0004": "Emergency sensor",
		"$EPCDOC_0004_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0004_B0": "Specifies detection threshold level (8-step).\n\n0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_EMERGENCY_GENERATION_STATE": "Emergency generation state",
		"$EPCDOC_0004_B1": "This property indicates first-aid occurrence status.\n\nFirst-air occurrence status found = 0x41 First-aid occurrence status not found = 0x42\n\nName : First-aid occurrence status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_EMERGENCY_GENERATION_STATE": "Emergency generation state",
		"$EPCNAME_EMERGENCY_OCCURS_STATE_RESET_SETTING": "Emergency occurs state reset setting",
		"$EPCDOC_0004_BF": "Resets first-aid occurrence status by setting 0x00.\n\nReset = 0x00\n\nName : First-aid occurrence status resetting\nEPC : 0xBF\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : undefined\n",
		"$ELEMNAME_EMERGENCY_OCCURS_STATE_RESET_SETTING": "Emergency occurs state reset setting",
		"$OBJNAME_0005": "Earthquake sensor",
		"$EPCDOC_0005_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0005_B0": "Specifies detection threshold level (8-step).\n\n0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_EARTHQUAKE_STATE": "Earthquake state",
		"$EPCDOC_0005_B1": "This property indicates earthquake occurrence status.\n\nEarthquake occurrence status found = 0x41 Earthquake occurrence status not found = 0x42\n\nName : Earthquake occurrence status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_EARTHQUAKE_STATE": "Earthquake state",
		"$EPCNAME_EARTHQUAKE_STATE_RESET_SETTING": "Earthquake state reset setting",
		"$EPCDOC_0005_BF": "Resets earthquake occurrence status by setting 0x00.\n\nReset = 0x00\n\nName : Earthquake occurrence status resetting\nEPC : 0xBF\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : undefined\n",
		"$ELEMNAME_EARTHQUAKE_STATE_RESET_SETTING": "Earthquake state reset setting",
		"$OBJNAME_0006": "Leakage sensor",
		"$EPCDOC_0006_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0006_B0": "Specifies detection threshold level (8-step).\n\n0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_OCCURRENCE_OF_LEAKAGE_STATE": "Occurrence of leakage state",
		"$EPCDOC_0006_B1": "This property indicates leak occurrence status.\n\nElectric leak occurrence status found = 0x41 Electric leak occurrence status not found = 0x42\n\nName : Electric leak occurrence status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_OCCURRENCE_OF_LEAKAGE_STATE": "Occurrence of leakage state",
		"$EPCNAME_OCCURRENCE_OF_LEAKAGE_STATE_RESET_SETTING": "Occurrence of leakage state reset setting",
		"$EPCDOC_0006_BF": "Resets electric leak occurrence status by setting 0x00.\n\nReset = 0x00\n\nName : Electric leak occurrence status resetting\nEPC : 0xBF\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : undefined\n",
		"$ELEMNAME_OCCURRENCE_OF_LEAKAGE_STATE_RESET_SETTING": "Occurrence of leakage state reset setting",
		"$OBJNAME_0007": "The human body detection sensor",
		"$EPCDOC_0007_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0007_B0": "Specifies detection threshold level (8-step).\n\n0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_THE_HUMAN_BODY_DETECTION_STATE": "The human body detection state",
		"$EPCDOC_0007_B1": "This property indicates human detection status.\n\nHuman detection status found = 0x41 Human detection status not found = 0x42\n\nName : Human detection status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_THE_HUMAN_BODY_DETECTION_STATE": "The human body detection state",
		"$OBJNAME_0008": "Visitor sensor",
		"$EPCDOC_0008_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0008_B0": "Specifies detection threshold level (8-step).\n\n0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_VISITOR_DETECTION_STATE": "Visitor detection state",
		"$EPCDOC_0008_B1": "This property indicates visitor detection status.\n\nVisitor detection status found = 0x41 Visitor detection status not found = 0x42\n\nName : Visitor detection status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_VISITOR_DETECTION_STATE": "Visitor detection state",
		"$EPCNAME_VISITOR_DETECTION_HOLD_TIME_SETTING_VALUE": "Visitor detection hold time setting value",
		"$EPCDOC_0008_BE": "This property indicates visitor detection holding time in units of 10 seconds.\n\n0x0000.0xFFFD (0 sec. to 655,300 sec.)\n\nName : Visitor detection holding time\nEPC : 0xBE\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_VISITOR_DETECTION_HOLD_TIME_SETTING_VALUE": "Visitor detection hold time setting value",
		"$OBJNAME_0009": "Call sensor",
		"$EPCDOC_0009_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0009_B0": "Specifies detection threshold level (8-step).\n\n0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_CALL_STATE": "Call state",
		"$EPCDOC_0009_B1": "This property indicates call status.\n\nCall status found = 0x41 Call status not found = 0x42\n\nName : Call status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_CALL_STATE": "Call state",
		"$EPCNAME_CALL_HOLD_TIME_SETTING_VALUE": "Call hold time setting value",
		"$EPCDOC_0009_BE": "This property indicates the call holding time in units of 10 seconds.\n\n0x0000.0xFFFD (0 sec. to 655,300 sec.)\n\nName : Call holding time\nEPC : 0xBE\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_CALL_HOLD_TIME_SETTING_VALUE": "Call hold time setting value",
		"$OBJNAME_000A": "Condensation sensor",
		"$EPCDOC_000A_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_000A_B0": "Specifies detection threshold level (8-step).\n\n0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_CONDENSATION_DETECTION_STATE": "Condensation detection state",
		"$EPCDOC_000A_B1": "This property indicates condensation detection    status.\n\nCondensation detection status    found = 0x41 Condensation detection status   not found = 0x42\n\nName : Condensation detection status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_CONDENSATION_DETECTION_STATE": "Condensation detection state",
		"$OBJNAME_000B": "Air pollution sensor",
		"$EPCDOC_000B_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_000B_B0": "Specifies detection threshold level (8-step).\n\n0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_AIR_POLLUTION_DETECTION_STATE": "Air pollution detection state",
		"$EPCDOC_000B_B1": "This property indicates air pollution detection status.\n\nAir pollution detection status found = 0x41 Air pollution detection status not found = 0x42\n\nName : Air pollution detection status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_AIR_POLLUTION_DETECTION_STATE": "Air pollution detection state",
		"$OBJNAME_000C": "Oxygen sensor",
		"$EPCDOC_000C_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_OXYGEN_CONCENTRATION_MEASUREMENTS": "Oxygen concentration measurements",
		"$EPCDOC_000C_E0": "This property indicates measured value of oxygen concentration in units of 0.01%.\n\n0x0000.0x2710 (0.00.100.00%)\n\nName : Measured value of oxygen concentration\nEPC : 0xE0\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_OXYGEN_CONCENTRATION_MEASUREMENTS": "Oxygen concentration measurements",
		"$OBJNAME_000D": "Illuminance sensor",
		"$EPCDOC_000D_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_ILLUMINANCE_MEASUREMENT_VALUE_1": "Illuminance measurement value 1",
		"$EPCDOC_000D_E0": "This property indicates measured illuminance value in lux.\n\n0x0000.0xFFFD (0 to 65533 lux)\n\nName : Measured illuminance value 1\nEPC : 0xE0\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_ILLUMINANCE_MEASUREMENT_VALUE_1": "Illuminance measurement value 1",
		"$EPCNAME_ILLUMINANCE_MEASUREMENT_VALUE_2": "Illuminance measurement value 2",
		"$EPCDOC_000D_E1": "This property indicates measured illuminance value in kilo lux.\n\n0x0000.0xFFFD (0 to 65533 klux)\n\nName : Measured illuminance value 2\nEPC : 0xE1\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_ILLUMINANCE_MEASUREMENT_VALUE_2": "Illuminance measurement value 2",
		"$OBJNAME_000E": "Sound sensor",
		"$EPCDOC_000E_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_000E_B0": "Specifies detection threshold level (8-step).\n\n0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_SOUND_DETECTION_STATE": "Sound detection state",
		"$EPCDOC_000E_B1": "This property indicates sound detection status.\n\nSound detection status found = 0x41 Sound detection status not found = 0x42\n\nName : Sound detection status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_SOUND_DETECTION_STATE": "Sound detection state",
		"$EPCNAME_SOUND_DETECTION_HOLD_TIME_SETTING_VALUE": "Sound detection hold time setting value",
		"$EPCDOC_000E_BE": "This property indicates sound detection holding time in units of 10 seconds.\n\n0x0000.0xFFFD (0 sec. to 655.330 sec.)\n\nName : Sound detection holding time\nEPC : 0xBE\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_SOUND_DETECTION_HOLD_TIME_SETTING_VALUE": "Sound detection hold time setting value",
		"$OBJNAME_000F": "Mailing sensor",
		"$EPCDOC_000F_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_000F_B0": "Specifies detection threshold level (8-step).\n\n0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_MAILING_DETECTION_STATE": "Mailing detection state",
		"$EPCDOC_000F_B1": "This property indicates mailing detection status.\n\nMailing detection status found = 0x41 Mailing detection status not found = 0x42\n\nName : Mailing detection status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_MAILING_DETECTION_STATE": "Mailing detection state",
		"$OBJNAME_0010": "Burden sensor",
		"$EPCDOC_0010_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0010_B0": "Specifies detection threshold level (8-step).\n\n0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_BURDEN_DETECTION_STATE": "Burden detection state",
		"$EPCDOC_0010_B1": "This property indicates weight detection status.\n\nWeight detection status found = 0x41 Weight detection status not found = 0x42\n\nName : Weight detection status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_BURDEN_DETECTION_STATE": "Burden detection state",
		"$OBJNAME_0011": "Temperature sensor",
		"$EPCDOC_0011_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_TEMPERATURE_MEASUREMENT_VALUE": "Temperature measurement value",
		"$EPCDOC_0011_E0": "This property indicates the measured temperature value in units of 0.1. C.\n\n0xF554.0x7FFF (-2732.32766) (-273.2.3276.6.C)\n\nName : Measured temperature value\nEPC : 0xE0\nData Type : signed short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_TEMPERATURE_MEASUREMENT_VALUE": "Temperature measurement value",
		"$OBJNAME_0012": "Humidity sensor",
		"$EPCDOC_0012_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_RELATIVE_HUMIDITY_MEASUREMENTS": "Relative humidity measurements",
		"$EPCDOC_0012_E0": "This property indicates measured value of relative humidity in %.\n\n0x00.0x64 (0.100%)\n\nName : Measured value of relative humidity\nEPC : 0xE0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_RELATIVE_HUMIDITY_MEASUREMENTS": "Relative humidity measurements",
		"$OBJNAME_0013": "Rain sensor",
		"$EPCDOC_0013_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0013_B0": "Specifies detection threshold level (8-step).\n\n0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_RAIN_DETECTION_STATE": "Rain detection state",
		"$EPCDOC_0013_B1": "This property indicates rain detection status.\n\nRain detection status found = 0x41 Rain detection status not found = 0x42\n\nName : Rain detection status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_RAIN_DETECTION_STATE": "Rain detection state",
		"$OBJNAME_0014": "Water level sensor",
		"$EPCDOC_0014_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_WATER_LEVEL_EXCEEDED_DETECTION_THRESHOLD_SETTING_VALUE": "Water level exceeded detection threshold setting value",
		"$EPCDOC_0014_B0": "This property indicates the water level over detection threshold level in cm.\n\n0x00.0xFD (0.253)\n\nName : Water level over detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_WATER_LEVEL_EXCEEDED_DETECTION_THRESHOLD_SETTING_VALUE": "Water level exceeded detection threshold setting value",
		"$EPCNAME_WATER_LEVEL_EXCEEDED_DETECTION_STATE": "Water level exceeded detection state",
		"$EPCDOC_0014_B1": "This property indicates if the water level exceeds detected water level threshold level.\n\nWater level over detection status found = 0x41 Water level over detection status not found = 0x42\n\nName : Water level over detection status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n\nAnnouncement at status change\n",
		"$ELEMNAME_WATER_LEVEL_EXCEEDED_DETECTION_STATE": "Water level exceeded detection state",
		"$EPCNAME_WATER_LEVEL_MEASUREMENT": "Water level measurement",
		"$EPCDOC_0014_E0": "This property indicates measured value of water level in cm.\n\n0x00.0xFD (0.253)\n\nName : Measured value of water level\nEPC : 0xE0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_WATER_LEVEL_MEASUREMENT": "Water level measurement",
		"$OBJNAME_0015": "Bath water level sensor",
		"$EPCDOC_0015_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_BATH_WATER_LEVEL_EXCEEDED_DETECTION_THRESHOLD_SETTING_VALUE": "Bath water level exceeded detection threshold setting value",
		"$EPCDOC_0015_B0": "This property indicates the bath water level over detection threshold level in cm.\n\n0x00.0xFD (0.253)\n\nName : Bath water level over detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_BATH_WATER_LEVEL_EXCEEDED_DETECTION_THRESHOLD_SETTING_VALUE": "Bath water level exceeded detection threshold setting value",
		"$EPCNAME_BATH_WATER_LEVEL_EXCEEDED_DETECTION_STATE": "Bath water level exceeded detection state",
		"$EPCDOC_0015_B1": "This property indicates if bath water level exceeds detection water level threshold level.\n\nWater level over detection status found = 0x41 Water level over detection status not found = 0x42\n\nName : Bath water level over detection status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n\nAnnouncement at status change\n",
		"$ELEMNAME_BATH_WATER_LEVEL_EXCEEDED_DETECTION_STATE": "Bath water level exceeded detection state",
		"$EPCNAME_BATH_WATER_LEVEL_MEASUREMENTS": "Bath water level measurements",
		"$EPCDOC_0015_E0": "This property indicates measured value of bath water level in cm.\n\n0x00.(0xFD) (0.253)\n\nName : Measured value of bath water level\nEPC : 0xE0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_BATH_WATER_LEVEL_MEASUREMENTS": "Bath water level measurements",
		"$OBJNAME_0016": "Bath upsurge sensor",
		"$EPCDOC_0016_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0016_B0": "Specifies detection threshold level (8-step).\n\nLevel 0x31 to 0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_BATH_UPSURGE_DETECTION_STATE": "Bath upsurge detection state",
		"$EPCDOC_0016_B1": "This property indicates bath heating detection status.\n\nBath heating detection status found = 0x41 Bath heating detection status not found = 0x42\n\nName : Bath heating detection status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_BATH_UPSURGE_DETECTION_STATE": "Bath upsurge detection state",
		"$OBJNAME_0017": "Water leak sensor",
		"$EPCDOC_0017_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0017_B0": "Specifies detection threshold level (8-step).\n\n0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_WATER_LEAK_DETECTION_STATE": "Water leak detection state",
		"$EPCDOC_0017_B1": "This property indicates water leak detection status\n\nWater leak detection status found = 0x41 Water leak detection status not found = 0x42\n\nName : Water leak detection status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_WATER_LEAK_DETECTION_STATE": "Water leak detection state",
		"$OBJNAME_0018": "Water overflow sensor",
		"$EPCDOC_0018_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0018_B0": "Specifies detection threshold level (8-step).\n\n0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_WATER_OVERFLOW_DETECTION_STATE": "Water overflow detection state",
		"$EPCDOC_0018_B1": "This property indicates water overflow status.\n\nWater overflow detection status found = 0x41 Water overflow detection status not found = 0x42\n\nName : Water overflow detection status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_WATER_OVERFLOW_DETECTION_STATE": "Water overflow detection state",
		"$OBJNAME_0019": "Fire sensor",
		"$EPCDOC_0019_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0019_B0": "Specifies detection threshold level (8-step). Concrete status of each level is not specified.\n\nLevel 0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_FIRE_DETECTION_STATE": "Fire detection state",
		"$EPCDOC_0019_B1": "This property indicates fire occurrence detection status.\n\nFire occurrence detection status found = 0x41 Fire occurrence detection status not found = 0x42\n\nName : Fire occurrence detection status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_FIRE_DETECTION_STATE": "Fire detection state",
		"$EPCNAME_FIRE_DETECTION_STATE_RESET_SETTING": "Fire detection state reset setting",
		"$EPCDOC_0019_BF": "Resets fire occurrence detection status by setting 0x00.\n\nReset = 0x00\n\nName : Fire occurrence detection status resetting\nEPC : 0xBF\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : undefined\n",
		"$ELEMNAME_FIRE_DETECTION_STATE_RESET_SETTING": "Fire detection state reset setting",
		"$OBJNAME_001A": "Tobacco smoke sensor",
		"$EPCDOC_001A_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_001A_B0": "Specifies detection threshold level (8-step). Concrete status of each level is not specified.\n\nLevel 0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_SMOKE_DETECTION_STATUS": "Smoke (cigarette) detection status",
		"$EPCDOC_001A_B1": "This property indicates smoke (cigarette) detection status.\n\nSmoke (cigarette) detection status found = 0x41 Smoke (cigarette) detection status not found = 0x42\n\nName : Smoke (cigarette) detection status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_SMOKE_DETECTION_STATUS": "Smoke (cigarette) detection status",
		"$OBJNAME_001B": "CO2 sensor",
		"$EPCDOC_001B_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_CO2_CONCENTRATION_MEASUREMENT_VALUE": "CO2 concentration measurement value",
		"$EPCDOC_001B_E0": "This property indicates measured value of CO2 concentration in ppm.\n\n0x0000.0xFFFD (0.65533)\n\nName : Measured value of CO2 concentration\nEPC : 0xE0\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_CO2_CONCENTRATION_MEASUREMENT_VALUE": "CO2 concentration measurement value",
		"$OBJNAME_001C": "Gas sensor",
		"$EPCDOC_001C_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_001C_B0": "Specifies detection threshold level (8-step).\n\n0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_GAS_DETECTION_STATE": "Gas detection state",
		"$EPCDOC_001C_B1": "This property indicates gas detection status.\n\nGas detection status found = 0x41 Gas detection status not found = 0x42\n\nName : Gas detection status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n\nAnnouncement at status change\n",
		"$ELEMNAME_GAS_DETECTION_STATE": "Gas detection state",
		"$EPCNAME_GAS_CONCENTRATION_MEASUREMENT_VALUE": "Gas concentration measurement value",
		"$EPCDOC_001C_E0": "This property indicates measured value of gas concentration in ppm.\n\n0x0000.0xFFFD (0.65533)\n\nName : Measured value of gas concentration\nEPC : 0xE0\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_GAS_CONCENTRATION_MEASUREMENT_VALUE": "Gas concentration measurement value",
		"$OBJNAME_001D": "VOC sensor",
		"$EPCDOC_001D_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_001D_B0": "Specifies detection threshold level (8-step).\n\n0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_VOC_DETECTION_STATE": "VOC detection state",
		"$EPCDOC_001D_B1": "This property indicates VOC detection status.\n\nVOC detection status found = 0x41 VOC detection status not found = 0x42\n\nName : VOC detection status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n\nAnnouncement at status change\n",
		"$ELEMNAME_VOC_DETECTION_STATE": "VOC detection state",
		"$EPCNAME_VOC_CONCENTRATION_MEASUREMENT_VALUE": "VOC concentration measurement value",
		"$EPCDOC_001D_E0": "This property indicates measured value of VOC concentration in ppm.\n\n0x0000.0xFFFD (0.65533)\n\nName : Measured value of VOC concentration\nEPC : 0xE0\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_VOC_CONCENTRATION_MEASUREMENT_VALUE": "VOC concentration measurement value",
		"$OBJNAME_001E": "Differential pressure sensor",
		"$EPCDOC_001E_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_DIFFERENTIAL_PRESSURE_MEASUREMENT_VALUE": "Differential pressure measurement value",
		"$EPCDOC_001E_E0": "This property indicates measured value of differential pressure in Pa.\n\n0x8001.0x7FFE (-32767.32766)\n\nName : Measured value of differential pressure\nEPC : 0xE0\nData Type : signed short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_DIFFERENTIAL_PRESSURE_MEASUREMENT_VALUE": "Differential pressure measurement value",
		"$OBJNAME_001F": "Wind speed sensor",
		"$EPCDOC_001F_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_WIND_SPEED_MEASUREMENTS": "Wind speed measurements",
		"$EPCDOC_001F_E0": "This property indicates the measured value of air speed in units of 0.01 m/sec.\n\n0x0000.0xFFFD (0.65533) (0.655.33 m/sec)\n\nName : Measured value of air speed\nEPC : 0xE0\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_WIND_SPEED_MEASUREMENTS": "Wind speed measurements",
		"$EPCNAME_WIND_DIRECTION": "Wind direction",
		"$EPCDOC_001F_E1": "This property indicates air flow direction in units of degrees.\n\n0x0000-0x0168 (0-360degree)\n\nName : Air flow direction\nEPC : 0xE1\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_WIND_DIRECTION": "Wind direction",
		"$OBJNAME_0020": "Odor sensor",
		"$EPCDOC_0020_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0020_B0": "Specifies detection threshold level (8-step).\n\nLevel 0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_ODOR_DETECTION_STATE": "Odor detection state",
		"$EPCDOC_0020_B1": "This property indicates odor detection status.\n\nOdor detection status found = 0x41 Odor detection status not found = 0x42\n\nName : Odor detection status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_ODOR_DETECTION_STATE": "Odor detection state",
		"$EPCNAME_ODOR_MEASUREMENT_VALUE": "Odor measurement value",
		"$EPCDOC_0020_E0": "This property indicates measured odor value. The unit is not specified.\n\n0x00.0xFD (0.253)\n\nName : Measured odor value\nEPC : 0xE0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_ODOR_MEASUREMENT_VALUE": "Odor measurement value",
		"$OBJNAME_0021": "Flame sensor",
		"$EPCDOC_0021_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0021_B0": "Specifies detection threshold level (8-step).\n\nDetection threshold level 0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_FLAME_DETECTION_STATE": "Flame detection state",
		"$EPCDOC_0021_B1": "This property indicates flame detection status.\n\nFlame detection status found = 0x41 Flame detection status not found = 0x42\n\nName : Flame detection status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_FLAME_DETECTION_STATE": "Flame detection state",
		"$EPCNAME_FLAME_DETECTION_STATE_RESET_SETTING": "Flame detection state reset setting",
		"$EPCDOC_0021_BF": "Resets flame detection status by setting 0x00.\n\nReset = 0x00\n\nName : Flame detection status resetting\nEPC : 0xBF\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : undefined\n",
		"$ELEMNAME_FLAME_DETECTION_STATE_RESET_SETTING": "Flame detection state reset setting",
		"$OBJNAME_0022": "Amount of power sensor",
		"$EPCDOC_0022_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_INTEGRAL_POWER_CONSUMPTION_MEASUREMENTS": "Integral power consumption measurements",
		"$EPCDOC_0022_E0": "This property indicates integral electric energy in 0.001kWh.\n\n0x0.0x3B9AC9FF (0.999999.999 kWh)\n\nName : Integral electric energy\nEPC : 0xE0\nData Type : unsigned long\nData Size(Byte) : 4 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_INTEGRAL_POWER_CONSUMPTION_MEASUREMENTS": "Integral power consumption measurements",
		"$EPCNAME_MEDIUM_CAPACITY_SENSOR_INSTANTANEOUS_POWER_VALUE_MEASUREMENT_VALUE": "Medium-capacity sensor instantaneous power value measurement value",
		"$ELEMNAME_MEDIUM_CAPACITY_SENSOR_INSTANTANEOUS_POWER_VALUE_MEASUREMENT_VALUE": "Medium-capacity sensor instantaneous power value measurement value",
		"$EPCNAME_SMALL_CAPACITY_SENSOR_INSTANTANEOUS_POWER_VALUE_MEASUREMENT_VALUE": "Small capacity sensor instantaneous power value measurement value",
		"$EPCDOC_0022_E2": "This property indicates instantaneous electric energy in units of 0.1 W.\n\n0x8001.0x7FFE (-3276,7.3276,6)\n\nName : Small-capacity sensor instantaneous electric energy\nEPC : 0xE2\nData Type : signed short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_SMALL_CAPACITY_SENSOR_INSTANTANEOUS_POWER_VALUE_MEASUREMENT_VALUE": "Small capacity sensor instantaneous power value measurement value",
		"$EPCNAME_LARGE_CAPACITY_SENSOR_INSTANTANEOUS_POWER_VALUE_MEASUREMENT_VALUE": "Large-capacity sensor instantaneous power value measurement value",
		"$EPCDOC_0022_E3": "This property indicates instantaneous electric energy in units of 0.1 kW.\n\n0x8001.0x7FFE (-3276,7.3276,6)\n\nName : Large-capacity sensor instantaneous electric energy\nEPC : 0xE3\nData Type : signed short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_LARGE_CAPACITY_SENSOR_INSTANTANEOUS_POWER_VALUE_MEASUREMENT_VALUE": "Large-capacity sensor instantaneous power value measurement value",
		"$EPCNAME_INTEGRAL_POWER_CONSUMPTION_MEASUREMENT_HISTORY_INFORMATION": "Integral power consumption measurement history information",
		"$EPCDOC_0022_E4": "This property indicates measurement result log of integral electric energy (0.001kWh) for the past 24 hours in 30-minute sections.\n\n0.0x3B9AC9F (0.999,999,999) (0.999999.999 kWh)\n\nName : Integral electric energy measurement log\nEPC : 0xE4\nData Type : unsigned long x 48\nData Size(Byte) : 192 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_INTEGRAL_POWER_CONSUMPTION_MEASUREMENT_HISTORY_INFORMATION": "Integral power consumption measurement history information",
		"$EPCNAME_EFFECTIVE_VOLTAGE_VALUE_MEASUREMENT_VALUE": "Effective voltage value measurement value",
		"$EPCDOC_0022_E5": "This property indicates effective voltage value in V.\n\n0x0000.0xFFFD (0.65533V)\n\nName : Effective voltage value\nEPC : 0xE5\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_EFFECTIVE_VOLTAGE_VALUE_MEASUREMENT_VALUE": "Effective voltage value measurement value",
		"$OBJNAME_0023": "Current value sensor",
		"$EPCDOC_0023_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_CURRENT_VALUE_MEASUREMENT_VALUE_1": "Current value measurement value 1",
		"$EPCDOC_0023_E0": "This property indicates measured current value in mA.\n\n0x00000000.0xFFFFFFFD (0.4,294,967,293mA)\n\nName : Measured current value 1\nEPC : 0xE0\nData Type : unsigned long\nData Size(Byte) : 4 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_CURRENT_VALUE_MEASUREMENT_VALUE_1": "Current value measurement value 1",
		"$EPCNAME_MEASUREMENT_OBJECT_RATED_VOLTAGE_VALUE": "Measurement object rated voltage value",
		"$EPCDOC_0023_E1": "Rated voltage value to be measured by current sensor\n\n0x0000.0xFFFD (0.65533V)\n\nName : Rated voltage to be measured\nEPC : 0xE1\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_MEASUREMENT_OBJECT_RATED_VOLTAGE_VALUE": "Measurement object rated voltage value",
		"$EPCNAME_CURRENT_VALUE_MEASUREMENT_VALUE_2": "Current value measurement value 2",
		"$EPCDOC_0023_E2": "This property indicates measured current value in mA.\n\n0x80000001.0x7FFFFFFDE (.2,147,483,647 to 2,147,483,646mA)\n\nName : Measured current value 2\nEPC : 0xE2\nData Type : unsigned long\nData Size(Byte) : 4 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_CURRENT_VALUE_MEASUREMENT_VALUE_2": "Current value measurement value 2",
		"$OBJNAME_0025": "Water flow rate sensor",
		"$EPCDOC_0025_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_INTEGRATED_FLOW_RATE_MEASUREMENT_VALUE": "Integrated flow rate measurement value",
		"$EPCDOC_0025_E0": "This property indicates measured integral flow in cm3.\n\n0x00000000.0x3B9AC9FF (0.999,999,999)\n\nName : Integral flow rate\nEPC : 0xE0\nData Type : unsigned long\nData Size(Byte) : 4 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_INTEGRATED_FLOW_RATE_MEASUREMENT_VALUE": "Integrated flow rate measurement value",
		"$EPCNAME_FLOW_RATE_MEASUREMENT_VALUE": "Flow rate measurement value",
		"$EPCDOC_0025_E2": "This property indicates measured instantaneous flow rate in cm3/mm.\n\n0x0000.0x3B9AC9FF (0.999,999,999)\n\nName : Flow rate\nEPC : 0xE2\nData Type : unsigned long\nData Size(Byte) : 4 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_FLOW_RATE_MEASUREMENT_VALUE": "Flow rate measurement value",
		"$OBJNAME_0026": "Fine-motion sensor",
		"$EPCDOC_0026_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0026_B0": "Specifies detection threshold level (8-step).\n\n0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_FINE_MOTION_DETECTION_STATE": "Fine motion detection state",
		"$EPCDOC_0026_B1": "This property indicates whether micromotion is detected or not.\n\nMicromotion detected = 0x41 Micromotion not detected = 0x42\n\nName : Micromotion detection status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_FINE_MOTION_DETECTION_STATE": "Fine motion detection state",
		"$EPCNAME_FINE_MOTION_DETECTION_COUNT_SETTING": "Fine motion detection count setting",
		"$EPCDOC_0026_B2": "This property indicates micromotion detection count.\n\n0x0000.0xFFFE (0.65534)\n\nName : Detection counter\nEPC : 0xB2\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_FINE_MOTION_DETECTION_COUNT_SETTING": "Fine motion detection count setting",
		"$EPCNAME_SAMPLING_TIMES_SETTING": "Sampling times setting",
		"$EPCDOC_0026_BC": "This property indicates micromotion detection sampling count.\n\n0x0000.0xFFFE (0.65534)\n\nName : Sampling count\nEPC : 0xBC\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_SAMPLING_TIMES_SETTING": "Sampling times setting",
		"$EPCNAME_SAMPLING_TIME_SETTING": "Sampling time setting",
		"$EPCDOC_0026_BD": "This property indicates micromotion detection sampling cycle.\n\n0x0000.0xFFFE (0.65534)\n\nName : Sampling cycle\nEPC : 0xBD\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_SAMPLING_TIME_SETTING": "Sampling time setting",
		"$OBJNAME_0027": "Passage sensor",
		"$EPCDOC_0027_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0027_B0": "Specifies detection threshold level (8-step).\n\n0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_PASSING_DETECTION_HOLD_TIME_SETTING_VALUE": "Passing detection hold time setting value",
		"$EPCDOC_0027_BE": "This property indicates passage detection hold time in ms.\n\n0x0000.0xFFFD (0.65533 ms)\n\nName : Passage detection hold time\nEPC : 0xBE\nData Type : unsigned char\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_PASSING_DETECTION_HOLD_TIME_SETTING_VALUE": "Passing detection hold time setting value",
		"$EPCNAME_PASSAGE_DETECTION_DIRECTION_STATE": "Passage detection direction state",
		"$EPCDOC_0027_E0": "This property indicates direction of passage (one of 8 different directions).\n\n0x30: No passage. 0x31 to 0x38: Direction of passage. 0x39: Passage detected but not located. Or, a sensor incapable of detecting passage direction was passed.\n\nName : Passage detection direction\nEPC : 0xE0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_PASSAGE_DETECTION_DIRECTION_STATE": "Passage detection direction state",
		"$OBJNAME_0028": "The bed sensor",
		"$EPCDOC_0028_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0028_B0": "Specifies detection threshold level (8-step).\n\nDetection threshold level 0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_THE_BED_DETECTION_STATE": "The bed detection state",
		"$EPCDOC_0028_B1": "This property indicates bed presence detection status.\n\nBed presence detected = 0x41, Bed presence not detected = 0x42\n\nName : Bed presence detection status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_THE_BED_DETECTION_STATE": "The bed detection state",
		"$OBJNAME_0029": "Opening and closing sensor",
		"$EPCDOC_0029_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_DETECTION_THRESHOLD_LEVEL": "Detection threshold level",
		"$EPCDOC_0029_B0": "Specifies detection threshold level (8-step).\n\nDetection threshold level 0x31.0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_DETECTION_THRESHOLD_LEVEL": "Detection threshold level",
		"$EPCNAME_OPENING_DETECTION_STATE_2": "Opening detection state 2",
		"$EPCDOC_0029_B1": "Specifies whether degree-of .opening detected or not\n\nDegree-of-opening detection detected =0x41, not detected =0x42\n\nName : Degree-of-openi ng detection status 2\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_OPENING_DETECTION_STATE_2": "Opening detection state 2",
		"$EPCNAME_OPENING_DETECTION_STATE_1": "Opening detection state 1",
		"$EPCDOC_0029_E0": "Specifies open/close detection status and one of 8 different degrees of opening.\n\nClose detected: 0x30; Degree-of-opening level: 0x31 to 0x38; Open detected but degree-of-opening unknown: 0x39\n\nName : Degree-of-openi ng detection status 1\nEPC : 0xE0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_OPENING_DETECTION_STATE_1": "Opening detection state 1",
		"$OBJNAME_002A": "Activity sensor",
		"$EPCDOC_002A_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_AMOUNT_OF_ACTIVITY_LEVEL_2": "Amount of activity level 2",
		"$EPCDOC_002A_E2": "This property indicates 8 different activity amount levels.\n\n0x31.0x38\n\nName : Activity amount level 2\nEPC : 0xE2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_AMOUNT_OF_ACTIVITY_LEVEL_2": "Amount of activity level 2",
		"$OBJNAME_002B": "Human body position sensor",
		"$EPCDOC_002B_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_0": "0",
		"$EPCNAME_HUMAN_BODY_DETECTION_POSITION_2": "Human body detection position 2",
		"$EPCDOC_002B_E2": "This property indicates human body detection location.\n\n1st byte: X coordinate; 2nd byte: Y coordinate; 3rd byte: Z coordinate\n\nName : Human body detection location 2\nEPC : 0xE2\nData Type : unsigned char x 3\nData Size(Byte) : 3 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_X___Y___Z_AXIS": "X / Y / Z axis",
		"$OBJNAME_002C": "Snow sensor",
		"$EPCDOC_002C_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_002C_B0": "This    property    indicates    threshold levels with 8 steps\n\n0x31-0x38\n\nName : Detection threshold level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_SNOW_DETECTION_STATE": "Snow detection state",
		"$EPCDOC_002C_B1": "This property indicates snow detection\n\ndetected 0x41, not detected 0x42\n\nName : Snow detection status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$OBJNAME_002D": "Barometric pressure sensor",
		"$EPCNAME_ATMOSPHERIC_PRESSURE_MEASUREMENT_VALUE": "Atmospheric pressure measurement value",
		"$ELEMNAME_ATMOSPHERIC_PRESSURE_MEASUREMENT_VALUE": "Atmospheric pressure measurement value",
		"$OBJNAME_0130": "Air conditioner",
		"$EPCDOC_0130_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0130_8F": "This property indicates whether the device is operating in power-saving mode.\n\nOperating in power-saving mode =0x41\nOperating in normal operation mode =0x42\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_ON_TIMER_RESERVATION_SETTING": "ON timer reservation setting",
		"$EPCDOC_0130_90": "Used to specify whether or not to use the ON timer (time-based reservation function, relative time-based reservation function or both), and to acquire the current setting.\n\nBoth the time- and relative time-based reservation functions are ON = 0x41, both reservation functions are OFF = 0x42, time-based reservation function is ON = 0x43, relative time-based reservation function is ON = 0x44\n\nName : ON timer-based reservation setting\nEPC : 0x90\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_ON_TIMER_RESERVATION_SETTING": "ON timer reservation setting",
		"$EPCNAME_ON_TIMER_TIME_SETTING": "ON timer time setting",
		"$EPCDOC_0130_91": "Used to specify the time for the time-based reservation function in the HH:MM format and to acquire the current setting.\n\n0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)\n\nName : ON timer setting (time)\nEPC : 0x91\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_ON_TIMER_TIME_SETTING": "ON timer time setting",
		"$EPCNAME_ON_TIMER_RELATIVE_TIME_SETTING": "ON timer relative time setting",
		"$EPCDOC_0130_92": "Used to specify the relative time for the relative time-based reservation function in the HH:MM format and to acquire the current setting.\n\n0 to 0xFF: 0 to 0x3B (= 0 to 255): (= 0 to 59)\n\nName : ON timer setting (relative time)\nEPC : 0x92\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_ON_TIMER_RELATIVE_TIME_SETTING": "ON timer relative time setting",
		"$EPCNAME_OFF_TIMER_RESERVATION_SETTING": "OFF timer reservation setting",
		"$EPCDOC_0130_94": "Used to specify whether or not to use the OFF timer (time-based reservation function, relative time-based reservation function or both), and to acquire the current setting.\n\nBoth the time- and relative time-based reservation functions are ON = 0x41, both reservation functions are OFF = 0x42, time-based reservation function is ON = 0x43, relative time-based reservation function is ON = 0x44\n\nName : OFF timer-based reservation setting\nEPC : 0x94\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_OFF_TIMER_RESERVATION_SETTING": "OFF timer reservation setting",
		"$EPCNAME_OFF_TIMER_TIME_SETTING": "OFF timer time setting",
		"$EPCDOC_0130_95": "Used to specify the time for the time-based reservation function in the HH:MM format and to acquire the current setting.\n\n0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)\n\nName : OFF timer setting (time)\nEPC : 0x95\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_OFF_TIMER_TIME_SETTING": "OFF timer time setting",
		"$EPCNAME_OFF_TIMER_RELATIVE_TIME_SETTING": "Off timer relative time setting",
		"$EPCDOC_0130_96": "Used to specify the relative time for the relative time-based reservation function in the HH:MM format and to acquire the current setting.\n\n0 to 0xFF: 0 to 0x3B (= 0 to 255): (= 0 to 59)\n\nName : OFF timer setting (relative time)\nEPC : 0x96\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_OFF_TIMER_RELATIVE_TIME_SETTING": "OFF timer relative time setting",
		"$EPCNAME_AIR_FLOW_RATE_SETTING": "Air flow rate setting",
		"$EPCDOC_0130_A0": "Used to specify the air flow rate or use the function to automatically control the air flow rate, and to acquire the current setting. The air flow rate shall be selected from among the 8 predefined levels.\n\nAutomatic air flow rate control function used = 0x41 Air flow rate = 0x31 to 0x38\n\nName : Air flow rate setting\nEPC : 0xA0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_AIR_FLOW_RATE_SETTING": "Air flow rate setting",
		"$EPCNAME_WIND_DIRECTION_AUTOMATIC_SETTING": "Wind direction automatic setting",
		"$EPCDOC_0130_A1": "Used to specify whether or not to use the automatic air flow direction control function, to specify the plane(s) (vertical and/or horizontal) in which the automatic air flow direction control function is to be used, and to acquire the current setting.\n\nAutomatic = 0x41, non-automatic = 0x42, automatic (vertical) = 0x43, automatic (horizontal) = 0x44\n\nName : Automatic control of air flow direction setting\nEPC : 0xA1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_WIND_DIRECTION_AUTOMATIC_SETTING": "Wind direction automatic setting",
		"$EPCNAME_WIND_DIRECTION_SWING_SETTING": "Wind direction swing setting",
		"$EPCDOC_0130_A3": "Used to specify whether or not to use the automatic air flow swing function, to specify the plane(s) (vertical and/or horizontal) in which the automatic air flow swing function is to be used, and to acquire the current setting.\n\nAutomatic air flow swing function not used = 0x31, used (vertical) = 0x41, used (horizontal) = 0x42, used (vertical and horizontal) = 0x43\n\nName : Automatic swing of air flow setting\nEPC : 0xA3\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_WIND_DIRECTION_SWING_SETTING": "Wind direction swing setting",
		"$EPCNAME_WIND_DIRECTION_UP_AND_DOWN_SETTING": "Wind direction up and down setting",
		"$EPCDOC_0130_A4": "Used to specify the air flow direction in the vertical plane by selecting a pattern from among the 5 predefined patterns, and to acquire the current setting.\n\nUppermost = 0x41, lowermost = 0x42, central = 0x43, midpoint between uppermost and central = 0x44, midpoint between lowermost and central = 0x45\n\nName : Air flow direction (vertical) setting\nEPC : 0xA4\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_WIND_DIRECTION_UP_AND_DOWN_SETTING": "Wind direction up and down setting",
		"$EPCNAME_WIND_DIRECTION_LEFT_AND_RIGHT_SET": "Wind direction left and right set",
		"$EPCDOC_0130_A5": "Used to specify the air flow direction(s) in the horizontal plane by selecting a pattern from among the 31 predefined patterns, and to acquire the current setting.\n\nRightward = 0x41, leftward = 0x42, central = 0x43, rightward and leftward = 0x44 (for a full list of the predefined patterns, see the table in the subsection defining the detailed requirements for this property.\n\nName : Air flow direction (horizontal) setting\nEPC : 0xA5\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_WIND_DIRECTION_LEFT_AND_RIGHT_SET": "Wind direction left and right set",
		"$EPCNAME_SPECIAL_STATE": "Special state",
		"$EPCDOC_0130_AA": "This property indicates if the air conditioner is in a  gspecial h state (i.e. the  gdefrosting, h  gpreheating, h or  gheat removal h state).\n\n gNormal operation h state = 0x40,  gDefrosting h state = 0x41,  gPreheating h state = 0x42,  gHeat removal h state = 0x43\n\nName : Special state\nEPC : 0xAA\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_SPECIAL_STATE": "Special state",
		"$EPCNAME_NON_PRIORITY_STATE": "Non-priority state",
		"$EPCDOC_0130_AB": "Used to indicate when the air conditioner is in a  gnon-priority h state.\n\n gNormal operation h state = 0x40,  gNon-priority h state = 0x41\n\nName : Non-priority state\nEPC : 0xAB\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_NON_PRIORITY_STATE": "Non-priority state",
		"$EPCNAME_OPERATION_MODE_SETTING": "Operation mode setting",
		"$EPCDOC_0130_B0": "Used to specify the operation mode ( gautomatic, h  gcooling, h  gheating, h  gdehumidification, h  gair circulator h or  gother h), and to acquire the current setting.\n\nThe following values shall be used: Automatic: 0x41 Cooling: 0x42 Heating: 0x43 Dehumidification: 0x44 Air circulator: 0x45 Other: 0x40\n\nName : Operation mode setting\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_OPERATION_MODE_SETTING": "Operation mode setting",
		"$EPCNAME_TEMPERATURE_AUTOMATIC_SETTING": "Temperature automatic setting",
		"$EPCDOC_0130_B1": "Used to specify whether or not to use the automatic temperature control function, and to acquire the current setting.\n\nAutomatic = 0x41 Non-automatic = 0x42\n\nName : Automatic temperature control setting\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_TEMPERATURE_AUTOMATIC_SETTING": "Temperature automatic setting",
		"$EPCNAME_RAPID_OPERATION_MODE_SETTING": "Rapid operation mode setting",
		"$EPCDOC_0130_B2": "Used to specify the type of operation ( gnormal, h  ghigh-speed h or  gsilent h), and to acquire the current setting.\n\nNormal operation: 0x41 High-speed operation: 0x42 Silent operation: 0x43\n\nName : Normal/high- speed/silent operation setting\nEPC : 0xB2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_RAPID_OPERATION_MODE_SETTING": "Rapid operation mode setting",
		"$EPCNAME_TEMPERATURE_SET_VALUE": "Temperature set value",
		"$EPCDOC_0130_B3": "Used to set the temperature and to acquire the current setting.\n\n0x00 to 0x32 (0 to 50  )\n\nName : Set temperature value\nEPC : 0xB3\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory\n",
		"$ELEMNAME_TEMPERATURE_SET_VALUE": "Temperature set value",
		"$EPCNAME_DEHUMIDIFICATION_MODE_RELATIVE_HUMIDITY_SET_VALUE": "Dehumidification mode relative humidity set value",
		"$EPCDOC_0130_B4": "Used to set the relative humidity for the  gdehumidification h mode and to acquire the current setting.\n\n0x00 to 0x64 (0 to 100%)\n\nName : Set value of relative humidity in dehumidifying mode\nEPC : 0xB4\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_DEHUMIDIFICATION_MODE_RELATIVE_HUMIDITY_SET_VALUE": "Dehumidification mode relative humidity set value",
		"$EPCNAME_COOLING_MODE_TEMPERATURE_SET_VALUE": "Cooling mode temperature set value",
		"$EPCDOC_0130_B5": "Used to set the temperature for the  gcooling h mode and to acquire the current setting.\n\n0x00 to 0x32 (0 to 50  )\n\nName : Set temperature value in cooling mode\nEPC : 0xB5\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_COOLING_MODE_TEMPERATURE_SET_VALUE": "Cooling mode temperature set value",
		"$EPCNAME_HEATING_MODE_TEMPERATURE_SETPOINT": "Heating mode temperature setpoint",
		"$EPCDOC_0130_B6": "Used to set the temperature for the  gheating h mode and to acquire the current setting.\n\n0x00 to 0x32 (0 to 50  )\n\nName : Set temperature value in heating mode\nEPC : 0xB6\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_HEATING_MODE_TEMPERATURE_SETPOINT": "Heating mode temperature setpoint",
		"$EPCNAME_DEHUMIDIFICATION_MODE_TEMPERATURE_SET_VALUE": "Dehumidification mode temperature set value",
		"$EPCDOC_0130_B7": "Used to set the temperature for the  gdehumidification h mode and to acquire the current setting.\n\n0x00 to 0x32 (0 to 50  )\n\nName : Set temperature value in dehumidifying mode\nEPC : 0xB7\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_DEHUMIDIFICATION_MODE_TEMPERATURE_SET_VALUE": "Dehumidification mode temperature set value",
		"$EPCNAME_RATED_POWER_CONSUMPTION_VALUE": "Rated power consumption value",
		"$EPCDOC_0130_B8": "Rated power consumption in each operation mode of cooling/heating/dehumidifying/blast\n\n0x0000.0xFFFD (0.65533W) Cooling: heating: dehumidifying: blast\n\nName : Rated power consumption\nEPC : 0xB8\nData Type : unsigned short x 4\nData Size(Byte) : 8 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_COOLING___HEATING___DEHUMIDIFYING___BLAST": "Cooling / Heating / dehumidifying / blast",
		"$EPCNAME_CURRENT_CONSUMPTION_MEASUREMENTS": "Current consumption measurements",
		"$EPCDOC_0130_B9": "Measured value of current consumption\n\n0x0000.0xFFFD (0.6553.3A)\n\nName : Measured value of current consumption\nEPC : 0xB9\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_CURRENT_CONSUMPTION_MEASUREMENTS": "Current consumption measurements",
		"$EPCNAME_INDOOR_RELATIVE_HUMIDITY_MEASUREMENTS": "Indoor relative humidity measurements",
		"$EPCDOC_0130_BA": "Measured value of room relative humidity\n\n0x00.0x64 (0.100. C)\n\nName : Measured value of room relative humidity\nEPC : 0xBA\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_INDOOR_RELATIVE_HUMIDITY_MEASUREMENTS": "Indoor relative humidity measurements",
		"$EPCNAME_INDOOR_TEMPERATURE_MEASUREMENT_VALUE": "Indoor temperature measurement value",
		"$EPCDOC_0130_BB": "Measured value of room temperature\n\n0x80.0x7D (-127.125.C)\n\nName : Measured value of room temperature\nEPC : 0xBB\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_INDOOR_TEMPERATURE_MEASUREMENT_VALUE": "Indoor temperature measurement value",
		"$EPCNAME_USER_REMOTE_CONTROL_TEMPERATURE_SET_VALUE": "User remote control temperature set value",
		"$EPCDOC_0130_BC": "Set temperature value of user remote control\n\n0x00.0x32 (0.50.C)\n\nName : Set temperature value of user remote control\nEPC : 0xBC\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_USER_REMOTE_CONTROL_TEMPERATURE_SET_VALUE": "User remote control temperature set value",
		"$EPCNAME_BALLOON_TEMPERATURE_MEASUREMENTS": "Balloon temperature measurements",
		"$EPCDOC_0130_BD": "This property indicates the measured cooled air temperature at the outlet.\n\n0x81 to 0x7D (-127 to 125  C)\n\nName : Measured cooled air temperature\nEPC : 0xBD\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_BALLOON_TEMPERATURE_MEASUREMENTS": "Balloon temperature measurements",
		"$EPCNAME_OUTSIDE_AIR_TEMPERATURE_MEASUREMENT_VALUE": "Outside air temperature measurement value",
		"$EPCDOC_0130_BE": "This property indicates the measured outdoor air temperature.\n\n0x81 to 0x7D (-127 to 125  C)\n\nName : Measured outdoor air temperature\nEPC : 0xBE\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_OUTSIDE_AIR_TEMPERATURE_MEASUREMENT_VALUE": "Outside air temperature measurement value",
		"$EPCNAME_RELATIVE_TEMPERATURE_SET_VALUE": "Relative temperature set value",
		"$EPCDOC_0130_BF": "Used to set the relative temperature relative to the target temperature for an air conditioner operation mode, and to acquire the current setting.\n\n0x81 to 0x7D (-12.7  C to 12.5  C)\n\nName : Relative temperature setting\nEPC : 0xBF\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_RELATIVE_TEMPERATURE_SET_VALUE": "Relative temperature set value",
		"$EPCNAME_SETTING_VENTILATION_MODE": "Setting ventilation mode",
		"$EPCDOC_0130_C0": "Used to specify whether or not to use the ventilation function, to specify the ventilation direction, and to acquire the current setting.\n\nVentilation function ON (outlet direction) = 0x41, ventilation function OFF = 0x42, ventilation function ON (intake direction) = 0x43\n\nName : Ventilation function setting\nEPC : 0xC0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_SETTING_VENTILATION_MODE": "Setting ventilation mode",
		"$EPCNAME_SETTING_HUMIDIFICATION_MODE": "Setting humidification mode",
		"$EPCDOC_0130_C1": "Used to specify whether or not to use the humidifier function, and to acquire the current setting.\n\nHumidifier function ON = 0x41, Humidifier function OFF = 0x42\n\nName : Humidifier function setting\nEPC : 0xC1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_SETTING_HUMIDIFICATION_MODE": "Setting humidification mode",
		"$EPCNAME_VENTILATION_AIR_VOLUME_SETTING": "Ventilation air volume setting",
		"$EPCDOC_0130_C2": "Used to specify the ventilation air flow rate by selecting a level from among the predefined levels, and to acquire the current setting.\n\nAutomatic control of ventilation air flow rate = 0x41, ventilation air flow rate = 0x31 to 0x38\n\nName : Ventilation air flow rate setting\nEPC : 0xC2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_VENTILATION_AIR_VOLUME_SETTING": "Ventilation air volume setting",
		"$EPCNAME_HUMIDIFICATION_AMOUNT_SETTING": "Humidification amount setting",
		"$EPCDOC_0130_C4": "Used to specify the degree of humidification to achieve by selecting a level from among the predefined levels, and to acquire the current setting.\n\nAutomatic control of the degree of humidification = 0x41 Degree of humidification = 0x31 to 0x38\n\nName : Degree of humidification setting\nEPC : 0xC4\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_HUMIDIFICATION_AMOUNT_SETTING": "Humidification amount setting",
		"$EPCNAME_LADEN_AIR_CLEANING_METHOD": "Laden air cleaning method",
		"$EPCDOC_0130_C6": "A bitmap indicates mounted method of exercising air cleaning function.\n\nBit 0: Information about electrical dust collection method mounting 0 - Not mounted 1 - Mounted Bit 1: Information about cluster ion method mounting 0 - Not mounted 1 . Mounted\n\nName : Mounted air cleaning method\nEPC : 0xC6\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_LADEN_AIR_CLEANING_METHOD": "Laden air cleaning method",
		"$EPCNAME_SET_AIR_CLEANING_FUNCTION_MODE": "Set air cleaning function mode",
		"$EPCDOC_0130_C7": "An 8-byte array used to specify, for each type of air purifier function, whether or not to use the air purifier function and the degree of air purification to achieve with the air purifier function, and to acquire the current settings.\n\nElement 0: Indicates whether or not to use the electrical dust collection-based air purifier function. Element 1: Indicates whether or not to use the cluster ion-based air purifier function. Elements 2 to 7: Reserved for future use.\n\nName : Air purifier function setting\nEPC : 0xC7\nData Type : unsigned char x 8\nData Size(Byte) : 8 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_ELECTROSTATIC_PRECIPITATOR_SYSTEM___CLUSTER_ION_SYSTEM___PRELIMINARY": "Electrostatic precipitator system / cluster ion system / preliminary",
		"$EPCNAME_EQUIPPED_REFRESH_METHOD": "Equipped refresh method",
		"$EPCDOC_0130_C8": "A bitmap indicates mounted method for exercising refresh function.\n\nBit 0: Information about minus ion method mounting 0 - Not mounted 1 - Mounted Bit 1: Information about cluster ion method mounting 0 - Not mounted 1 . Mounted\n\nName : Mounted air refresh method\nEPC : 0xC8\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_EQUIPPED_REFRESH_METHOD": "Equipped refresh method",
		"$EPCNAME_REFRESH_FUNCTION_MODE_SETTING": "Refresh function mode setting",
		"$EPCDOC_0130_C9": "An 8-byte array used to specify, for each type of air refresher function, whether or not to use the air refresher function and the degree of air refreshing to achieve with the air refresher function, and to acquire the current settings.\n\nElement 0: Indicates whether or not to use the minus ion-based air refresher function. Element 1: Indicates whether or not to use the cluster ion-based air refresher function. Elements 2 to 7: Reserved for future use.\n\nName : Air refresher function setting\nEPC : 0xC9\nData Type : unsigned char x 8\nData Size(Byte) : 8 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_NEGATIVE_ION_MODE___CLUSTER_ION_SYSTEM___PRELIMINARY": "Negative ion mode / cluster ion system / preliminary",
		"$EPCNAME_EQUIPPED_WITH_SELF_CLEANING_METHOD": "Equipped with self-cleaning method",
		"$EPCDOC_0130_CA": "A bitmap indicates mounted method for exercising self-cleaning function.\n\nBit 0: Information about ozone cleaning method mounting 0 - Not mounted 1 - Mounted Bit 1: Information about drying method mounting 0 - Not mounted 1 . Mounted\n\nName : Mounted self-cleaning method\nEPC : 0xCA\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_EQUIPPED_WITH_SELF_CLEANING_METHOD": "Equipped with self-cleaning method",
		"$EPCNAME_SETTING_SELF_CLEANING_FUNCTION_MODE": "Setting self-cleaning function mode",
		"$EPCDOC_0130_CB": "An 8-byte array used to specify, for each type of self-cleaning function, whether or not to use the self-cleaning function and the degree of self-cleaning to achieve with the self-cleaning function, and to acquire the current settings.\n\nElement 0: Indicates whether or not to use the ozone-based self-cleaning function. Element 1: Indicates whether or not to use the drying-based self-cleaning function. Elements 2 to 7: Reserved for future use.\n\nName : Self-cleaning function setting\nEPC : 0xCB\nData Type : unsigned char x 8\nData Size(Byte) : 8 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_OZONE_CLEANING_SYSTEM___DRYING_SYSTEM___PRELIMINARY": "Ozone cleaning system / drying system / preliminary",
		"$EPCNAME_SETTING_SPECIAL_OPERATION_MODE": "Setting special operation mode",
		"$EPCDOC_0130_CC": "Used to specify the  gspecial function h to use, and to acquire the current setting.\n\nNo setting: 0x40, clothes dryer function: 0x41, condensation suppressor function: 0x42, mite and mold control function: 0x43, active defrosting function: 0x44 0x45 . : Reserved for future use.\n\nName : Special function setting\nEPC : 0xCC\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_SETTING_SPECIAL_OPERATION_MODE": "Setting special operation mode",
		"$EPCNAME_INTERNAL_OPERATING_STATE": "Internal operating state",
		"$EPCDOC_0130_CD": "This property indicates the operation status of components of the air conditioner in a bitmap format.\n\nBit 0: Operation status of the compressor: 0: Not operating 1: In operation Bit 1: Operation status of the thermostat: 0: Thermostat OFF 1: Thermostat ON Bits 2 to 7: Reserved for future use.\n\nName : Operation status of components\nEPC : 0xCD\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_INTERNAL_OPERATING_STATE": "Internal operating state",
		"$EPCNAME_FORCE_THERMO_MODE_SETTING": "Force Thermo mode setting",
		"$EPCDOC_0130_CE": "Used to specify whether or not to allow the air conditioner to operate ignoring its thermostat setting.\n\nNormal setting = 0x40, thermostat setting override function ON = 0x41, thermostat setting override function OFF = 0x42\n\nName : Thermostat setting override function\nEPC : 0xCE\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : undefined\n",
		"$ELEMNAME_FORCE_THERMO_MODE_SETTING": "Force Thermo mode setting",
		"$EPCNAME_SET_AIR_CLEANING_MODE": "Set air cleaning mode",
		"$EPCDOC_0130_CF": "Used to set the air purification mode seting ON/OFF and to acquire the current setting. B\n\nAir purification ON  0x41,OFF   0x42\n\nName : Air purification mode setting\nEPC : 0xCF\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_SET_AIR_CLEANING_MODE": "Set air cleaning mode",
		"$OBJNAME_0133": "Exhaust Fan",
		"$EPCDOC_0133_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0133_A0": "Sets ventilation air flow rate level and ventilation air flow rate auto status. This property specifies ventilation air flow rate level (8-step).\n\nVentilation air flow rate auto status = 0x41 Ventilation air flow rate level = 0x31.0x38\n\nName : Set value of ventilation air flow rate\nEPC : 0xA0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_VENTILATION_AUTOMATIC_SETTING": "Ventilation automatic setting",
		"$EPCDOC_0133_BF": "Auto/Non-auto\n\nAuto = 0x41, Non-auto = 0x42\n\nName : Ventilation auto setting\nEPC : 0xBF\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_VENTILATION_AUTOMATIC_SETTING": "Ventilation automatic setting",
		"$OBJNAME_0134": "Air conditioning ventilation fan",
		"$EPCDOC_0134_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0134_A0": "Sets ventilation air flow rate level and ventilation air flow rate auto status. This property specifies ventilation air flow rate level (8-step).\n\nVentilation air flow rate auto status = 0x41 Ventilation air flow rate level = 0x31.0x38\n\nName : Set value of ventilation air flow rate\nEPC : 0xA0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_INDOOR_RELATIVE_HUMIDITY_SET_VALUE": "Indoor relative humidity set value",
		"$EPCDOC_0134_B4": "Set value of relative humidity at auto ventilating operation.\n\n0x00.0x64, (0.100%)\n\nName : Set value of room relative humidity\nEPC : 0xB4\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_INDOOR_RELATIVE_HUMIDITY_SET_VALUE": "Indoor relative humidity set value",
		"$EPCDOC_0134_BA": "Measured value of room relative humidity\n\n0x00.0x64 (0.100%)\n\nName : Measured value of room relative humidity\nEPC : 0xBA\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCDOC_0134_BF": "Auto/Non-auto\n\nAuto = 0x41, Non-auto = 0x42\n\nName : Ventilation auto setting\nEPC : 0xBF\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0134_C0": "This property indicates measured value of CO2 concentration in ppm.\n\n0x0000.0xFFFD (0.65533 ppm)\n\nName : Measured value of CO2 concentration\nEPC : 0xC0\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCDOC_0134_C1": "This property indicates smoke (cigarette) detection status.\n\nSmoke (cigarette) detection status found = 0x41 Smoke (cigarette) detection status not found = 0x42\n\nName : Smoke (cigarette) detection status\nEPC : 0xC1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCNAME_DIRT_DETECTION_STATE": "Dirt detection state",
		"$ELEMNAME_DIRT_DETECTION_STATE": "Dirt detection state",
		"$EPCNAME_HEAT_EXCHANGER_OPERATION_SETTING": "Heat exchanger operation setting",
		"$EPCDOC_0134_E0": "This property indicates ON/OFF status of heat exchanger.\n\nHeat exchanger ON = 0x41, OFF��0x42\n\nName : Heat exchanger operation setting\nEPC : 0xE0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_HEAT_EXCHANGER_OPERATION_SETTING": "Heat exchanger operation setting",
		"$OBJNAME_0135": "air purifier",
		"$EPCDOC_0135_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0135_A0": "Sets air flow rate level and air flow rate auto status. The ventilation air flow rate is specified (8-step).\n\nVentilation air flow rate auto status = 0x41 Ventilation air flow rate level = 0x31.0x38\n\nName : Air flow rate setting\nEPC : 0xA0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_AIR_CONTAMINATION_DETECTION_STATE": "Air contamination detection state",
		"$EPCDOC_0135_C0": "This property indicates air pollution detection status\n\nAir pollution detected = 0x41 Air pollution non-detected = 0x42\n\nName : Air pollution detection status\nEPC : 0xC0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_AIR_CONTAMINATION_DETECTION_STATE": "Air contamination detection state",
		"$EPCDOC_0135_C1": "This property indicates smoke (cigarette) detection status.\n\nSmoke (cigarette) detection status found = 0x41 Smoke (cigarette) detection status not found = 0x42\n\nName : Smoke (cigarette) detection status\nEPC : 0xC1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCNAME_PHOTOCATALYST_OPERATION_SETTING": "Photocatalyst operation setting",
		"$EPCDOC_0135_C2": "Optical catalyst ON/OFF status\n\nOptical catalyst ON = 0x41 Optical catalyst OFF = 0x42\n\nName : Optical catalyst operation setting\nEPC : 0xC2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_PHOTOCATALYST_OPERATION_SETTING": "Photocatalyst operation setting",
		"$EPCNAME_FILTER_EXCHANGE_NOTIFICATION_STATE": "Filter exchange notification state",
		"$EPCDOC_0135_E1": "Filter change time notice found/not found\n\nFound = 0x41, Not found = 0x42\n\nName : Filter change notice\nEPC : 0xE1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_FILTER_EXCHANGE_NOTIFICATION_STATE": "Filter exchange notification state",
		"$OBJNAME_0139": "humidifier",
		"$EPCDOC_0139_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0139_94": "Sets reservation ON/OFF and set setting status\n\nReservation ON =0x41, OFF =0x42\n\nName : Reservation set of OFF timer\nEPC : 0x94\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0139_96": "Sets timer value HH:MM and   get updated time\n\nReservation ON =0x41, OFF =0x42\n\nName : Relative time value set of OFF timer\nEPC : 0x96\nData Type : unsigned char x2\nData Size(Byte) : 2 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0139_B4": "This property indicates measured value of relative humidity\n\n0x00.0x64, (0.100%)\n\nName : Measured value of relative humidity\nEPC : 0xB4\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCNAME_HUMIDIFICATION_SETTING_1": "Humidification setting 1",
		"$EPCDOC_0139_C0": "Sets value of relative humidity and get setting status\n\n0x00.0x64, (0.100%) Automatic setting =0x70, Continuous operation =0x71, intermittent operation =0x72\n\nName : Humidifying setting 1\nEPC : 0xC0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory\n",
		"$ELEMNAME_HUMIDIFICATION_SETTING_1": "Humidification setting 1",
		"$EPCNAME_HUMIDIFICATION_SETTING_2": "Humidification setting 2",
		"$EPCDOC_0139_C1": "Sets humidifying level by 3 steps\n\nHumidifying levels =0x31.0x33 Automatic setting =0x70, Continuous operation =0x71, intermittent operation =0x72\n\nName : Humidifying setting 2\nEPC : 0xC1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory\n",
		"$ELEMNAME_HUMIDIFICATION_SETTING_2": "Humidification setting 2",
		"$EPCNAME_ION_RELEASE_SETTING": "Ion release setting",
		"$EPCDOC_0139_C2": "Sets ON/OFF of ion emission and gets setting status\n\nEmission ON= 0x41, OFF=0x42\n\nName : Ion emission setting\nEPC : 0xC2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_ION_RELEASE_SETTING": "Ion release setting",
		"$EPCNAME_EQUIPPED_WITH_ION_EMISSION_METHOD": "Equipped with ion emission method",
		"$EPCDOC_0139_C3": "Sets ion emission method equipped in humidifier by bit map\n\nBit 0: negative ion method, Bit 1: cluster ion method,\n\nName : Implemented ion emission method\nEPC : 0xC3\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_EQUIPPED_WITH_ION_EMISSION_METHOD": "Equipped with ion emission method",
		"$EPCDOC_0139_C4": "Sets special operation mode and gets setting status. Specifies by bit map\n\nSpecifies 1 for effective setting Bit 0: Throat dry prevention Bit 1: Quiet operation Bit 2-7: for future reserved\n\nName : Special operation mode setting\nEPC : 0xC4\nData Type : unsigned short\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_WATER_LEVEL": "Water level",
		"$EPCDOC_0139_C5": "This property indicates water amount level in water tank by 6 steps.\n\n0x40: empty 0x41-0x45: minimum to maximum level\n\nName : Water amount level\nEPC : 0xC5\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_WATER_LEVEL": "Water level",
		"$OBJNAME_0142": "Electric heater",
		"$EPCDOC_0142_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0142_90": "Used to specify whether or not to use the ON timer-based reservation function.\n\nON timer-based reservation function ON: 0x41 ON timer-based reservation function OFF: 0x42\n\nName : ON timer-based reservation setting\nEPC : 0x90\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0142_91": "Used to specify the time for the ON timer-based reservation function in the HH:MM format.\n\n0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)\n\nName : ON timer setting (time)\nEPC : 0x91\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0142_92": "Used to specify the relative time for the ON timer-based reservation function in the HH:MM format\n\n0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)\n\nName : ON timer setting (relative time)\nEPC : 0x92\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0142_94": "Used to specify whether or not to use the OFF timer-based reservation function.\n\nOFF timer-based reservation function ON: 0x41 OFF timer-based reservation function OFF: 0x42\n\nName : OFF timer-based reservation setting\nEPC : 0x94\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0142_95": "Used to specify the time for the OFF timer-based reservation function in the HH:MM format.\n\n0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)\n\nName : OFF timer setting (time)\nEPC : 0x95\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0142_96": "Timer value HH:MM\n\n0.0x17: 0.0x3B (= 0.23):(= 0.59)\n\nName : Set value of OFF timer relative time\nEPC : 0x96\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0142_A0": "Used to specify the air flow rate or to specify using the function to automatically control the air flow rate. The air flow rate is selected from among the 8 predefined levels.\n\nAutomatic air flow rate control used = 0x41 Air flow rate = 0x31 to 0x38\n\nName : Air flow rate setting\nEPC : 0xA0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0142_B1": "Used to specify whether or not to use the automatic temperature control function.\n\nAutomatic = 0x41, non-automatic = 0x42\n\nName : Automatic temperature control setting\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0142_B3": "Used to set the temperature.\n\n0x00 to 0x32 (0 to 50��C)\n\nName : Temperature setting\nEPC : 0xB3\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory\n",
		"$EPCDOC_0142_BB": "This property indicates the measured room temperature.\n\n0x81 to 0x7E (-128 to 127��C)\n\nName : Measured room temperature\nEPC : 0xBB\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCDOC_0142_BC": "This property indicates the last temperature (��C) set by the user using a remote controller unit.\n\n0x00 to 0x32 (0 to 50��C)\n\nName : Remotely set temperature\nEPC : 0xBC\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$OBJNAME_0143": "Fan heater",
		"$EPCDOC_0143_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0143_90": "Sets ON/OFF of reservation and gets the setting status.\n\nReservation ON: 0x41, OFF:0x42 for both time and relative time Timer-based reservation ON:0x43, Relative time reservation ON:0x44\n\nName : ON timer reservation setting\nEPC : 0x90\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0143_91": "Sets timer value HH:MM and gets setting status\n\n0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)\n\nName : ON timer setting value (time)\nEPC : 0x91\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0143_92": "Sets timer value HH:MM and gets the updated time\n\n0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)\n\nName : ON timer setting value (relative time)\nEPC : 0x92\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0143_94": "Sets ON/OFF of reservation and gets setting status\n\nReservation ON: 0x41, OFF:0x42 for both time and relative time Timer-based reservation ON:0x43, Relative time reservation ON:0x44\n\nName : OFF timer reservation setting\nEPC : 0x94\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0143_95": "Sets timer value HH:MM and gets the setting status.\n\n0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)\n\nName : OFF timer setting value (time)\nEPC : 0x95\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0143_96": "Sets timer value HH:MM and gets updated time\n\n0.0x17: 0.0x3B (= 0.23):(= 0.59)\n\nName : OFF timer value ( relative time)\nEPC : 0x96\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0143_B1": "Sets automatic / non-automatic and gets the setting status\n\nAutomatic = 0x41, non-automatic = 0x42\n\nName : Automatic temperature control setting\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0143_B3": "Sets the temperature and gets the setting status.\n\n0x00 to 0x32 (0 to 50��C)\n\nName : Temperature setting value\nEPC : 0xB3\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory\n",
		"$EPCDOC_0143_BB": "This property indicates the measured room temperature.\n\n0x81 to 0x7D (-128 to 125��C)\n\nName : Measured temperature\nEPC : 0xBB\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCNAME_EXTENSION_OPERATION_SETTING": "Extension operation setting",
		"$EPCDOC_0143_C0": "Sets ON/OFF of extensional operation and gets setting status.\n\nExtension ON=0x41, OFF=0x42\n\nName : Extentional operation setting\nEPC : 0xC0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_EXTENSION_OPERATION_SETTING": "Extension operation setting",
		"$EPCNAME_EXTENSION_TIMER_TIME_SETTING_VALUE": "Extension timer time setting value",
		"$EPCDOC_0143_C1": "Setsextension time HH:MM and gets the extended time\n\n0.0x17: 0.0x3B (= 0.23):(= 0.59)\n\nName : Extentional operation timer time setting value\nEPC : 0xC1\nData Type : unsigned char x 2\nData Size(Byte) : 2 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_EXTENSION_TIMER_TIME_SETTING_VALUE": "Extension timer time setting value",
		"$EPCDOC_0143_C2": "Sets ON/OFF of ion emission and gets setting status.\n\nEmission ON=0x41, OFF=0x42\n\nName : Ion emission setting\nEPC : 0xC2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0143_C3": "Specifies ion emission method imlemented in humidifier by bit map\n\nExtension ON=0x41, OFF=0x42\n\nName : Implemented ion emission method\nEPC : 0xC3\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCNAME_OIL_LEVELS": "Oil levels",
		"$EPCDOC_0143_C4": "Specifies oil amount in the tank by 6 levels.\n\n0x40: empty 0x41-0x45: minimum to maximum levels\n\nName : Oil amount level\nEPC : 0xC4\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_OIL_LEVELS": "Oil levels",
		"$OBJNAME_0145": "Commercial package air conditioner indoor unit",
		"$EPCDOC_0145_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0145_90": "Used to specify whether or not to use the ON timer (time-based reservation function, relative time-based reservation function or both), and to acquire the current setting.\n\nBoth the time- and relative time-based reservation functions are ON = 0x41, both reservation functions are OFF = 0x42, time-based reservation function is ON = 0x43, relative time-based reservation function is ON = 0x44\n\nName : �gON timer-based reservation�h setting\nEPC : 0x90\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0145_91": "Used to specify the time for the time-based reservation function in the HH:MM format and to acquire the current setting.\n\n0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)\n\nName : ON timer setting (time)\nEPC : 0x91\nData Type : unsigned char�~2\nData Size(Byte) : 2 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0145_92": "Used to specify the relative time for the relative time-based reservation function in the HH:MM format and to acquire the current setting.\n\n0 to 0xFF: 0 to 0x3B (= 0 to 255): (= 0 to 59)\n\nName : ON timer setting (relative time)\nEPC : 0x92\nData Type : unsigned char�~2\nData Size(Byte) : 2 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0145_94": "Used to specify whether or not to use the OFF timer (time-based reservation function, relative time-based reservation function or both), and to acquire the current setting.\n\nBoth the time- and relative time-based reservation functions are ON = 0x41, both reservation functions are OFF = 0x42, time-based reservation function is ON = 0x43, relative time-based reservation function is ON = 0x44\n\nName : �gOFF timer-based reservation�h setting\nEPC : 0x94\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0145_95": "Used to specify the time for the time-based reservation function in the HH:MM format and to acquire the current setting.\n\n0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)\n\nName : OFF timer setting (time)\nEPC : 0x95\nData Type : unsigned char�~2\nData Size(Byte) : 2 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0145_96": "Used to specify the relative time for the relative time-based reservation function in the HH:MM format and to acquire the current setting.\n\n0 to 0xFF: 0 to 0x3B (= 0 to 255): (= 0 to 59)\n\nName : OFF timer setting (relative time)\nEPC : 0x96\nData Type : unsigned char�~2\nData Size(Byte) : 2 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0145_A0": "Used to specify the air flow rate or to specify using the function to automatically control the air flow rate, and to acquire the current setting. The air flow rate shall be selected from among the 8 predefined levels.\n\nAutomatic air flow rate control function used = 0x41 Air flow rate = 0x31 to 0x38\n\nName : Air flow rate setting\nEPC : 0xA0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0145_A4": "Used to specify the air flow direction in the vertical plane by selecting a pattern from among the 9 predefined patterns or to specify using the automatic air flow direction control function or automatic air flow swing function, and to acquire the current setting.\n\nAutomatic = 0x31, swing = 0x32 Air flow direction: 0x41 to 0x49 (0x41 and 0x49 shall be used for the uppermost and lowermost directions, respectively.)\n\nName : �gAir flow direction (vertical)�h setting\nEPC : 0xA4\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0145_A5": "Used to specify the air flow direction in the horizontal plane by selecting a pattern from among the 6 predefined patterns or to specify using the automatic air flow direction control function or automatic air flow swing function, and to acquire the current setting.\n\nAutomatic = 0x31, swing = 0x32 Air flow direction: Rightward = 0x41, leftward = 0x42, central = 0x43, rightward and leftward = 0x44\n\nName : �gAir flow direction (horizontal)�h setting\nEPC : 0xA5\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0145_AA": "This property indicates when the air conditioner is in a �gspecial�h state.\n\n�gNormal operation�h state = 0x40, �gpreheating�h state = 0x42, �gheat removal�h state = 0x43\n\nName : �gSpecial�h state\nEPC : 0xAA\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCNAME_THERMO_STATE": "Thermo state",
		"$EPCDOC_0145_AC": "This property indicates the state (ON or OFF) of the thermostat.\n\nThermostat ON = 0x41 Thermostat OFF = 0x42\n\nName : Thermostat state\nEPC : 0xAC\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_THERMO_STATE": "Thermo state",
		"$EPCNAME_AUTOMATIC_OPERATION_WHEN_THE_OPERATION_MODE_STATE": "Automatic operation when the operation mode state",
		"$EPCDOC_0145_AE": "This property indicates, when the air conditioner is operating in the �gautomatic�h operation mode, the function (�gcooling,�h �gheating,�h �gdehumidification,�h �gair circulator�h or �gother�h) that is currently being used.\n\nThe following values shall be used: Cooling: 0x42 Heating: 0x43 Dehumidification: 0x44 Air circulator: 0x45 Other: 0x40\n\nName : Current function (�gautomatic�h operation mode)\nEPC : 0xAE\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n\nAnnouncement at status change\n",
		"$ELEMNAME_AUTOMATIC_OPERATION_WHEN_THE_OPERATION_MODE_STATE": "Automatic operation when the operation mode state",
		"$EPCDOC_0145_B0": "Used to specify the operation mode (�gautomatic,�h .�gcooling,�h .�gheating,�h . �gdehumidification�h .or .�gair . circulator�h) .and .to .acquire .the .current . setting.\n\nThe following values shall be used: Automatic: 0x41 Cooling: 0x42 Heating: 0x43 Dehumidification: 0x44 Air circulator: 0x45\n\nName : Operation mode setting\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_TEMPERATURE_SETPOINT_1": "Temperature setpoint 1",
		"$EPCDOC_0145_B3": "Used to set the temperature and to acquire the current setting.\n\n0x00 to 0x32 (0 to 50��C)\n\nName : Temperature setting 1\nEPC : 0xB3\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_TEMPERATURE_SETPOINT_1": "Temperature setpoint 1",
		"$EPCNAME_DEHUMIDIFICATION_MODE_RELATIVE_HUMIDITY_SET_VALUE_1": "Dehumidification mode relative humidity set value 1",
		"$EPCDOC_0145_B4": "Used to set the relative humidity for the .�gdehumidification�h .mode .and .to . acquire the current setting.\n\n0x00 to 0x64 (0 to 100%)\n\nName : �gRelative . humidity setting for �edehumidifica- tion�f .mode�h .1\nEPC : 0xB4\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n\nAnnouncement at status change\n",
		"$ELEMNAME_DEHUMIDIFICATION_MODE_RELATIVE_HUMIDITY_SET_VALUE_1": "Dehumidification mode relative humidity set value 1",
		"$EPCNAME_COOLING_MODE_WHEN_THE_TEMPERATURE_SET_VALUE_1": "Cooling mode when the temperature set value 1",
		"$EPCDOC_0145_B5": "Used to set the temperature for the �gcooling�h .mode .and .to .acquire .the . current setting.\n\n0x00 to 0x32 (0 to 50��C)\n\nName : �gTemperature . setting for �ecooling�f .mode�h . 1\nEPC : 0xB5\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_COOLING_MODE_WHEN_THE_TEMPERATURE_SET_VALUE_1": "Cooling mode when the temperature set value 1",
		"$EPCNAME_HEATING_MODE_TEMPERATURE_SETPOINT_1": "Heating mode temperature setpoint 1",
		"$EPCDOC_0145_B6": "Used to set the temperature for the �gheating�h .mode .and .to .acquire .the . current setting.\n\n0x00 to 0x32 (0 to 50��C)\n\nName : �gTemperature . setting for �eheating�f .mode�h . 1\nEPC : 0xB6\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_HEATING_MODE_TEMPERATURE_SETPOINT_1": "Heating mode temperature setpoint 1",
		"$EPCNAME_DEHUMIDIFICATION_MODE_TEMPERATURE_SETPOINT_1": "Dehumidification mode temperature setpoint 1",
		"$EPCDOC_0145_B7": "Used to set the temperature for the �gdehumidification�h .mode .and .to . acquire the current setting.\n\n0x00 to 0x32 (0 to 50��C)\n\nName : �gTemperature . setting for �edehumidifica- tion�f .mode�h .1\nEPC : 0xB7\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_DEHUMIDIFICATION_MODE_TEMPERATURE_SETPOINT_1": "Dehumidification mode temperature setpoint 1",
		"$EPCNAME_ROOMS_NOMINATION_RATED_POWER_CONSUMPTION_VALUE": "Rooms nomination rated power consumption value",
		"$EPCDOC_0145_B8": "This property indicates the rated power consumption for the cooling, heating, dehumidification and air circulator modes.\n\n0x0000 to 0xFFFD (0 to 65533W) Cooling: heating: dehumidification: air circulator\n\nName : Rated power consumption of indoor unit\nEPC : 0xB8\nData Type : unsigned short x 4\nData Size(Byte) : 8 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCNAME_INDOOR_CURRENT_CONSUMPTION_MEASUREMENTS": "Indoor current consumption measurements",
		"$EPCDOC_0145_B9": "This property indicates the measured electric current consumption.\n\n0x0000 to 0xFFFD (0 to 6553.3A)\n\nName : Measured electric current consumption of indoor unit\nEPC : 0xB9\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_INDOOR_CURRENT_CONSUMPTION_MEASUREMENTS": "Indoor current consumption measurements",
		"$EPCNAME_INDOOR_RELATIVE_HUMIDITY_MEASUREMENT_VALUE_1": "Indoor relative humidity measurement value 1",
		"$EPCDOC_0145_BA": "Used to acquire the measured indoor relative humidity.\n\n0x00 to 0x64 (0 to 100%)\n\nName : Measured indoor relative humidity 1\nEPC : 0xBA\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_INDOOR_RELATIVE_HUMIDITY_MEASUREMENT_VALUE_1": "Indoor relative humidity measurement value 1",
		"$EPCNAME_INDOOR_TEMPERATURE_MEASUREMENT_VALUE_1": "Indoor temperature measurement value 1",
		"$EPCDOC_0145_BB": "Used to acquire the measured indoor temperature.\n\n0x81 to 0x7D (-127 to 125��C)\n\nName : Measured indoor temperature 1\nEPC : 0xBB\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_INDOOR_TEMPERATURE_MEASUREMENT_VALUE_1": "Indoor temperature measurement value 1",
		"$EPCDOC_0145_BF": "Used to set the relative temperature relative to the target temperature for an air conditioner operation mode and to acquire the current setting.\n\n0x81 to 0x7D (-12.7��C to 12.5��C)\n\nName : Relative temperature setting\nEPC : 0xBF\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0145_C0": "Used to specify the ventilation mode and to acquire the current setting.\n\nOrdinary ventilation = 0x41, ventilation plus total heat exchanger-based heat exchange = 0x42, automatic control of ventilation (i.e. automatic switching between ordinary ventilation and ventilation plus total heat exchanger-based heat exchange) = 0x43\n\nName : Ventilation mode setting\nEPC : 0xC0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_TOTAL_HEAT_EXCHANGER_INTEGRATION_SETTINGS": "Total heat exchanger integration settings",
		"$EPCDOC_0145_C1": "Used to specify whether or not to use the �gcombined operation of indoor unit and total heat exchanger�h function, and to acquire the current setting.\n\n�gCombined operation of indoor unit and total heat exchanger�h function used = 0x41 �gCombined operation of indoor unit and total heat exchanger�h function not used= 0x42\n\nName : Combined operation of indoor unit and total heat exchanger\nEPC : 0xC1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_TOTAL_HEAT_EXCHANGER_INTEGRATION_SETTINGS": "Total heat exchanger integration settings",
		"$EPCDOC_0145_C2": "Used to specify the ventilation air flow rate by selecting a level from among the predefined levels and to acquire the current setting.\n\nAutomatic control of ventilation air flow rate = 0x41 Ventilation air flow rate = 0x31 to 0x38\n\nName : Ventilation air flow rate setting\nEPC : 0xC2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_GROUP_INFORMATION": "Group information",
		"$ELEMNAME_GROUP_INFORMATION": "Group information",
		"$EPCNAME_FORCE_STOP_SETTING": "Force stop setting",
		"$EPCDOC_0145_CD": "Used to specify whether or not to disable the air conditioner, and to acquire the current setting.\n\nDisabled = 0x41, not disabled = 0x42\n\nName : �gDisabling of air conditioner�h setting\nEPC : 0xCD\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_FORCE_STOP_SETTING": "Force stop setting",
		"$EPCDOC_0145_CE": "Used to specify whether or not the air conditioner shall operate ignoring its thermostat setting.\n\nNormal setting = 0x40, thermostat setting override function ON = 0x41, thermostat setting override function OFF = 0x42\n\nName : Thermostat setting override function\nEPC : 0xCE\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_FILTER_SIGN_SETTING": "Filter sign setting",
		"$EPCDOC_0145_CF": "Used to specify whether or not to enable the filter cleaning reminder lamp, and to acquire the current setting.\n\nEnabled = 0x41, disabled = 0x42\n\nName : Filter cleaning reminder lamp setting\nEPC : 0xCF\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n\nAnnouncement at status change\n",
		"$ELEMNAME_FILTER_SIGN_SETTING": "Filter sign setting",
		"$EPCNAME_INDOOR_POWER_CONSUMPTION_MEASUREMENTS": "Indoor power consumption measurements",
		"$EPCDOC_0145_DB": "This property indicates the measured power consumption of the indoor unit.\n\n0x0000 to 0xFFFD (0 to 65533W)\n\nName : Measured power consumption of indoor unit\nEPC : 0xDB\nData Type : unsigned\nData Size(Byte) : 2 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_INDOOR_POWER_CONSUMPTION_MEASUREMENTS": "Indoor power consumption measurements",
		"$EPCNAME_EXPANSION_VALVE_OPENING_LEVEL": "Expansion valve opening level",
		"$EPCDOC_0145_DC": "This property indicates the aperture of the expansion valve in %.\n\n0 to 0x64 (0 to 100%)\n\nName : Aperture of expansion valve\nEPC : 0xDC\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_EXPANSION_VALVE_OPENING_LEVEL": "Expansion valve opening level",
		"$EPCNAME_TEMPERATURE_SETTING_VALUE_2": "Temperature setting value 2",
		"$EPCDOC_0145_E3": "Used to set the temperature and to acquire the current setting.\n\n0xFE0C to 0x3E8 (-50.0 to 100.0��C)\n\nName : Temperature setting 2\nEPC : 0xE3\nData Type : unsigned short\nData Size(Byte) : 2 byte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_TEMPERATURE_SETTING_VALUE_2": "Temperature setting value 2",
		"$EPCNAME_DEHUMIDIFICATION_MODE_RELATIVE_HUMIDITY_SET_VALUE_2": "Dehumidification mode relative humidity set value 2",
		"$EPCDOC_0145_E4": "Used to set the relative humidity for the �gdehumidification�h mode and to acquire the current setting.\n\n0x0000 to 0x3E8 (0.0 to 100.0%)\n\nName : �gRelative humidity setting for �edehumidificatio n�f mode�h 2\nEPC : 0xE4\nData Type : unsigned short\nData Size(Byte) : 2 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n\nAnnouncement at status change\n",
		"$ELEMNAME_DEHUMIDIFICATION_MODE_RELATIVE_HUMIDITY_SET_VALUE_2": "Dehumidification mode relative humidity set value 2",
		"$EPCNAME_COOLING_MODE_TEMPERATURE_SETTING_VALUE_2": "Cooling mode temperature setting value 2",
		"$EPCDOC_0145_E5": "Used to set the temperature for the �gcooling�h mode and to acquire the current setting.\n\n0xFE0C to 0x3E8 (-50.0 to 100.0��C)\n\nName : �gTemperature setting for �ecooling�f mode�h 2\nEPC : 0xE5\nData Type : unsigned short\nData Size(Byte) : 2 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_COOLING_MODE_TEMPERATURE_SETTING_VALUE_2": "Cooling mode temperature setting value 2",
		"$EPCNAME_HEATING_MODE_TEMPERATURE_SETPOINT_2": "Heating mode temperature setpoint 2",
		"$EPCDOC_0145_E6": "Used to set the temperature for the �gheating�h mode and to acquire the current setting.\n\n0xFE0C to 0x3E8 (-50.0 to 100.0��C)\n\nName : �gTemperature setting for �eheating�f mode�h 2\nEPC : 0xE6\nData Type : unsigned short\nData Size(Byte) : 2 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_HEATING_MODE_TEMPERATURE_SETPOINT_2": "Heating mode temperature setpoint 2",
		"$EPCNAME_DEHUMIDIFICATION_MODE_TEMPERATURE_SETTING_VALUE_2": "Dehumidification mode temperature setting value 2",
		"$EPCDOC_0145_E7": "Used to set the temperature for the �gdehumidification�h mode and to acquire the current setting.\n\n0xFE0C to 0x3E8 (-50.0 to 100.0��C)\n\nName : �gTemperature setting for �edehumidificatio n�f mode�h 2\nEPC : 0xE7\nData Type : unsigned short\nData Size(Byte) : 2 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_DEHUMIDIFICATION_MODE_TEMPERATURE_SETTING_VALUE_2": "Dehumidification mode temperature setting value 2",
		"$EPCNAME_INDOOR_RELATIVE_HUMIDITY_MEASUREMENT_VALUE_2": "Indoor relative humidity measurement value 2",
		"$EPCDOC_0145_EA": "Used to acquire the measured indoor relative humidity.\n\n0x0000 to 0x3E8 (0.0 to 100.0%)\n\nName : Measured indoor relative humidity 2\nEPC : 0xEA\nData Type : unsigned short\nData Size(Byte) : 2 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_INDOOR_RELATIVE_HUMIDITY_MEASUREMENT_VALUE_2": "Indoor relative humidity measurement value 2",
		"$EPCNAME_INDOOR_TEMPERATURE_MEASUREMENT_VALUE_2": "Indoor temperature measurement value 2",
		"$EPCDOC_0145_EB": "Used to acquire the measured indoor temperature.\n\n0xF554 to 0x7FFD (-273,2 to 3276,5��C)\n\nName : Measured indoor temperature 2\nEPC : 0xEB\nData Type : unsigned short\nData Size(Byte) : 2 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_INDOOR_TEMPERATURE_MEASUREMENT_VALUE_2": "Indoor temperature measurement value 2",
		"$OBJNAME_0146": "Commercial package air conditioner outdoor unit",
		"$EPCDOC_0146_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0146_AA": "This property indicates when the air conditioner is in the �gspecial�h state (i.e. �gdefrosting�h state).\n\n�gNormal operation�h state = 0x40, �gdefrosting�h state = 0x41\n\nName : �gSpecial�h state\nEPC : 0xAA\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCDOC_0146_B0": "Used to acquire the current operation mode setting (i.e. �gautomatic,�h �gcooling,�h �gheating,�h �gdehumidification�h or �gair circulator�h).\n\nThe following values shall be used: Automatic: 0x41 Cooling: 0x42 Heating: 0x43 Dehumidification: 0x44 Air circulator: 0x45\n\nName : Operation mode setting\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n\nAnnouncement at status change\n",
		"$EPCNAME_OUTDOOR_RATED_POWER_CONSUMPTION_VALUE": "Outdoor rated power consumption value",
		"$EPCDOC_0146_B8": "Used to acquire the rated power consumption for the cooling, heating and dehumidification modes.\n\n0x0000 to 0xFFFD (0 to 65533W) Cooling: heating: dehumidification\n\nName : Rated power consumption of outdoor unit\nEPC : 0xB8\nData Type : unsigned short x 3\nData Size(Byte) : 6 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_COOLING___HEATING___DEHUMIDIFYING": "Cooling / Heating / dehumidifying",
		"$EPCNAME_OUTDOOR_CONSUMPTION_CURRENT_MEASUREMENT_VALUE": "Outdoor consumption current measurement value",
		"$EPCDOC_0146_B9": "Used to acquire the measured electric current consumption.\n\n0x0000 to 0xFFFD (0 to 6553.3A)\n\nName : Measured electric current consumption of outdoor unit\nEPC : 0xB9\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_OUTDOOR_CONSUMPTION_CURRENT_MEASUREMENT_VALUE": "Outdoor consumption current measurement value",
		"$EPCNAME_OUTSIDE_AIR_TEMPERATURE_MEASUREMENT_VALUE_1": "Outside air temperature measurement value 1",
		"$EPCDOC_0146_BE": "Used to acquire the measured temperature of the outdoor air.\n\n0x81 to 0x7D (-127 to 125��C)\n\nName : Measured outdoor air temperature 1\nEPC : 0xBE\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_OUTSIDE_AIR_TEMPERATURE_MEASUREMENT_VALUE_1": "Outside air temperature measurement value 1",
		"$EPCNAME_COMPRESSOR_OPERATING_STATE": "Compressor operating state",
		"$EPCDOC_0146_D0": "Used to acquire the operation status (i.e. ON or OFF) of the compressor.\n\nCompressor ON: 0x41 Compressor OFF: 0x42\n\nName : Operation status of compressor\nEPC : 0xD0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_COMPRESSOR_OPERATING_STATE": "Compressor operating state",
		"$EPCNAME_OPERATION_MODE_STATE": "Operation mode state",
		"$EPCDOC_0146_D1": "Used to acquire the current operation mode (i.e. �gcooling,�h �gheating,�h �gdehumidification�h or �gother�h).\n\nCooling: 0x42 Heating: 0x43 Dehumidification: 0x44 Other: 0x40\n\nName : Operation mode information\nEPC : 0xD1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_OPERATION_MODE_STATE": "Operation mode state",
		"$EPCNAME_FAN_ROTATION_LEVEL": "Fan rotation level",
		"$EPCDOC_0146_D2": "Used to acquire the rotation speed of the fan of the outdoor unit (expressed in %).\n\n0x00 to 0x64 (0 to 100%)\n\nName : Fan rotation speed\nEPC : 0xD2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_FAN_ROTATION_LEVEL": "Fan rotation level",
		"$EPCNAME_OUTDOOR_POWER_CONSUMPTION_MEASUREMENTS": "Outdoor power consumption measurements",
		"$EPCDOC_0146_DB": "Used to acquire the measured power consumption of the outdoor unit.\n\n0x0000 to 0xFFFD (0 to 65533W)\n\nName : Measured power consumption of outdoor unit\nEPC : 0xDB\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_OUTDOOR_POWER_CONSUMPTION_MEASUREMENTS": "Outdoor power consumption measurements",
		"$EPCNAME_OUTSIDE_AIR_TEMPERATURE_MEASUREMENT_VALUE_2": "Outside air temperature measurement value 2",
		"$EPCDOC_0146_EE": "Used to acquire the measured temperature of the outdoor air.\n\n0xF554 to 0x7FFD (-273,2 to 3276.5��C)\n\nName : Measured outdoor air temperature 2\nEPC : 0xEE\nData Type : signed short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_OUTSIDE_AIR_TEMPERATURE_MEASUREMENT_VALUE_2": "Outside air temperature measurement value 2",
		"$OBJNAME_0155": "Electric thermal storage heater",
		"$EPCNAME_FAN_OPERATION_STATE": "Fan operation state",
		"$ELEMNAME_FAN_OPERATION_STATE": "Fan operation state",
		"$ELEMNAME_THERMAL_STORAGE___CONTROL___FAN_WEAK___FAN_STRONG": "Thermal storage / control / fan Weak / fan Strong",
		"$EPCNAME_THERMAL_STORAGE_OPERATING_STATE": "Thermal storage operating state",
		"$ELEMNAME_THERMAL_STORAGE_OPERATING_STATE": "Thermal storage operating state",
		"$EPCNAME_HEAT_STORAGE_TEMPERATURE_SET_VALUE": "Heat storage temperature set value",
		"$ELEMNAME_HEAT_STORAGE_TEMPERATURE_SET_VALUE": "Heat storage temperature set value",
		"$EPCNAME_HEAT_STORAGE_TEMPERATURE_MEASUREMENT_VALUE": "Heat storage temperature measurement value",
		"$ELEMNAME_HEAT_STORAGE_TEMPERATURE_MEASUREMENT_VALUE": "Heat storage temperature measurement value",
		"$EPCNAME_DAYTIME_HEAT_STORAGE_SETTING": "Daytime heat storage setting",
		"$ELEMNAME_DAYTIME_HEAT_STORAGE_SETTING": "Daytime heat storage setting",
		"$EPCNAME_DAYTIME_HEAT_STORAGE_PROPRIETY_STATE": "Daytime heat storage propriety state",
		"$ELEMNAME_DAYTIME_HEAT_STORAGE_PROPRIETY_STATE": "Daytime heat storage propriety state",
		"$EPCNAME_MIDNIGHT_POWER_ENERGIZATION_TIME_SETTING": "Midnight power energization time setting",
		"$ELEMNAME_MIDNIGHT_POWER_ENERGIZATION_TIME_SETTING": "Midnight power energization time setting",
		"$EPCNAME_MIDNIGHT_POWER_START_TIME_SETTING": "Midnight power start time setting",
		"$ELEMNAME_MIDNIGHT_POWER_START_TIME_SETTING": "Midnight power start time setting",
		"$EPCNAME_HEAT_DISSIPATION_METHOD": "Heat dissipation method",
		"$ELEMNAME_HEAT_DISSIPATION_METHOD": "Heat dissipation method",
		"$EPCNAME_CHILD_LOCK_SETTING": "Child lock setting",
		"$ELEMNAME_CHILD_LOCK_SETTING": "Child lock setting",
		"$EPCNAME_FAN_TIMER_1_RESERVATION_SETTING": "Fan Timer 1 reservation setting",
		"$ELEMNAME_FAN_TIMER_1_RESERVATION_SETTING": "Fan Timer 1 reservation setting",
		"$EPCNAME_FAN_TIMER_1_START_TIME_SETTING": "Fan Timer 1 start time setting",
		"$ELEMNAME_FAN_TIMER_1_START_TIME_SETTING": "Fan Timer 1 start time setting",
		"$EPCNAME_FAN_TIMER_1_END_TIME_SETTING": "Fan Timer 1 end time setting",
		"$ELEMNAME_FAN_TIMER_1_END_TIME_SETTING": "Fan Timer 1 end time setting",
		"$EPCNAME_FAN_TIMER_2_RESERVATION_SETTING": "Fan Timer 2 reservation setting",
		"$ELEMNAME_FAN_TIMER_2_RESERVATION_SETTING": "Fan Timer 2 reservation setting",
		"$EPCNAME_FAN_TIMER_2_START_TIME_SETTING": "Fan Timer 2 start time setting",
		"$ELEMNAME_FAN_TIMER_2_START_TIME_SETTING": "Fan Timer 2 start time setting",
		"$EPCNAME_FAN_TIMER_2_END_TIME_SETTING": "Fan Timer 2 end time setting",
		"$ELEMNAME_FAN_TIMER_2_END_TIME_SETTING": "Fan Timer 2 end time setting",
		"$OBJNAME_0260": "Electric blind / sunshade",
		"$EPCDOC_0260_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_ABNORMAL_CONTENTS": "Abnormal contents (return possible abnormal)",
		"$EPCDOC_0260_89": "Describes the fault.\n\nSee “2.5 ‘Fault Description’ Property.”\n\nData Type : unsigned short\nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_UPPER_1_BYTE": "Upper 1 byte",
		"$ELEMNAME_LOWER_1_BYTE": "Lower 1 byte",
		"$EPCNAME_TIMER_OPERATION_SETTING": "Timer operation setting",
		"$ELEMNAME_TIMER_OPERATION_SETTING": "Timer operation setting",
		"$EPCNAME_WIND_DETECTION_STATE": "Wind detection state",
		"$ELEMNAME_WIND_DETECTION_STATE": "Wind detection state",
		"$EPCNAME_SUNLIGHT_DETECTION_STATE": "Sunlight detection state",
		"$ELEMNAME_SUNLIGHT_DETECTION_STATE": "Sunlight detection state",
		"$EPCNAME_OPEN_SPEED_SETTING": "Open (overhang) speed setting",
		"$ELEMNAME_OPEN_SPEED_SETTING": "Open (overhang) speed setting",
		"$EPCNAME_CLOSED_SPEED_SETTING": "Closed (storage) speed setting",
		"$ELEMNAME_CLOSED_SPEED_SETTING": "Closed (storage) speed setting",
		"$EPCNAME_OPERATING_TIME_SETTING": "Operating time setting",
		"$ELEMNAME_OPERATING_TIME_SETTING": "Operating time setting",
		"$EPCNAME_AUTOMATIC_OPERATION_SETTING": "Automatic operation setting",
		"$ELEMNAME_AUTOMATIC_OPERATION_SETTING": "Automatic operation setting",
		"$EPCNAME_OPENING_AND_CLOSING_OPERATION_SETTING": "Opening and closing operation setting",
		"$EPCDOC_0260_E0": "Open/close\n\nOpen = 0x41, close = 0x42\n\nName : Open/close setting\nEPC : 0xE0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_OPENING_AND_CLOSING_OPERATION_SETTING": "Opening and closing operation setting",
		"$EPCNAME_OPENING_LEVEL_SETTING": "Opening level setting",
		"$EPCDOC_0260_E1": "Used to specify the Degree-of-opening level by selecting a level from among the 8 predefined levels, and to acquire the current setting.\n\n0x31 to 0x38\n\nName : Degree-of-openi ng level\nEPC : 0xE1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_OPENING_LEVEL_SETTING": "Opening level setting",
		"$EPCNAME_BLIND_ANGLE_SETTING": "Blind angle setting",
		"$EPCDOC_0260_E2": "Shade angle value\n\n0x00.0xB4 (0.180. )\n\nName : Set value of shade angle\nEPC : 0xE2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_BLIND_ANGLE_SETTING": "Blind angle setting",
		"$EPCNAME_OPENING_AND_CLOSING_SPEED_SETTING": "Opening and closing speed setting",
		"$EPCDOC_0260_E3": "Low/Medium/High\n\nLow = 0x41, Medium = 0x42, High = 0x43\n\nName : Shade open/close speed\nEPC : 0xE3\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_OPENING_AND_CLOSING_SPEED_SETTING": "Opening and closing speed setting",
		"$EPCNAME_ELECTRIC_LOCK_SETTING": "Electric lock setting",
		"$ELEMNAME_ELECTRIC_LOCK_SETTING": "Electric lock setting",
		"$EPCNAME_REMOTE_CONTROL_SETTING_STATE": "Remote control setting state",
		"$ELEMNAME_REMOTE_CONTROL_SETTING_STATE": "Remote control setting state",
		"$EPCNAME_SELECT_OPEN_DEGREES_OPERATION_SETTING": "Select Open (overhang) degrees operation setting",
		"$ELEMNAME_SELECT_OPEN_DEGREES_OPERATION_SETTING": "Select Open (overhang) degrees operation setting",
		"$EPCNAME_OPENING_AND_CLOSING_STATE": "Opening and closing state",
		"$ELEMNAME_OPENING_AND_CLOSING_STATE": "Opening and closing state",
		"$EPCNAME_ONE_TIME_OPEN_SPEED_SETTING": "One-time Open (overhang) speed setting",
		"$ELEMNAME_ONE_TIME_OPEN_SPEED_SETTING": "One-time Open (overhang) speed setting",
		"$EPCNAME_ONE_TIME_CLOSED_SPEED_SETTING": "One-time closed (storage) speed setting",
		"$ELEMNAME_ONE_TIME_CLOSED_SPEED_SETTING": "One-time closed (storage) speed setting",
		"$OBJNAME_0261": "Electric shutter",
		"$ELEMNAME_ABNORMAL_CONTENTS": "Abnormal contents (return possible abnormal)",
		"$EPCNAME_OPENING_SPEED_SETTING": "Opening speed setting",
		"$ELEMNAME_OPENING_SPEED_SETTING": "Opening speed setting",
		"$EPCNAME_CLOSING_SPEED_SETTING": "Closing speed setting",
		"$ELEMNAME_CLOSING_SPEED_SETTING": "Closing speed setting",
		"$EPCNAME_SELECT_OPENING_OPERATION_SETTING": "Select opening operation setting",
		"$ELEMNAME_SELECT_OPENING_OPERATION_SETTING": "Select opening operation setting",
		"$EPCNAME_SLIT_OPENING_SETTING": "Slit opening setting",
		"$ELEMNAME_SLIT_OPENING_SETTING": "Slit opening setting",
		"$EPCNAME_ONE_TIME_OPENING_SPEED_SETTING": "One-time opening speed setting",
		"$ELEMNAME_ONE_TIME_OPENING_SPEED_SETTING": "One-time opening speed setting",
		"$EPCNAME_ONE_TIME_CLOSING_SPEED_SETTING": "One-time closing speed setting",
		"$ELEMNAME_ONE_TIME_CLOSING_SPEED_SETTING": "One-time closing speed setting",
		"$OBJNAME_0263": "Electric shutters shutter",
		"$OBJNAME_0264": "Electric gate",
		"$OBJNAME_0265": "Electric windows",
		"$EPCNAME_REGISTRATION_TEMPERATURE_DETECTION_STATE": "Registration temperature detection state",
		"$ELEMNAME_REGISTRATION_TEMPERATURE_DETECTION_STATE": "Registration temperature detection state",
		"$OBJNAME_0266": "Electric entrance door, sliding door",
		"$EPCNAME_OPEN_TIME_SETTING": "Open time setting",
		"$ELEMNAME_OPEN_TIME_SETTING": "Open time setting",
		"$OBJNAME_0267": "Sprinkler (for the garden)",
		"$EPCNAME_WATERING_VALVE_OPENING_AND_CLOSING_SET": "Watering valve opening and closing set",
		"$ELEMNAME_WATERING_VALVE_OPENING_AND_CLOSING_SET": "Watering valve opening and closing set",
		"$EPCNAME_WATERING_INTERVAL_SETTING": "Watering interval setting",
		"$ELEMNAME_WATERING_INTERVAL_SETTING": "Watering interval setting",
		"$EPCNAME_WATERING_TIMES_SETTING": "Watering times setting",
		"$ELEMNAME_WATERING_TIMES_SETTING": "Watering times setting",
		"$EPCNAME_WATERING_TIME_SETTING_1": "Watering time setting 1",
		"$ELEMNAME_WATERING_TIME_SETTING_1": "Watering time setting 1",
		"$EPCNAME_WATERING_TIME_SETTING_2": "Watering time setting 2",
		"$ELEMNAME_WATERING_TIME_SETTING_2": "Watering time setting 2",
		"$EPCNAME_WATERING_TIME_SETTING": "Watering time setting",
		"$ELEMNAME_WATERING_TIME_SETTING": "Watering time setting",
		"$OBJNAME_026B": "Electric water heater",
		"$EPCDOC_026B_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_026B_90": "0x31 to 0x38\n\nReservation ON = 0x41 Reservation OFF = 0x42\n\nName : ON timer reservation setting\nEPC : 0x90\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_026B_91": "ON timer setting (HH:MM)\n\n0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)\n\nName : ON timer setting\nEPC : 0x91\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_AUTOMATIC_SETTING_BOILING": "Automatic setting boiling",
		"$EPCDOC_026B_B0": "Used to specify whether or not to use the automatic water heating function, and to acquire the current setting.\n\nAutomatic water heating function used: 0x41 Non-automatic water heating function stopped: 0x43 Non-automatic water heating function used: 0x42\n\nName : �gAutomatic water heating�h setting\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_AUTOMATIC_SETTING_BOILING": "Automatic setting boiling",
		"$EPCNAME_AUTOMATIC_SETTING_TEMPERATURE_OF_THE_HOT_WATER_BOILING": "Automatic setting temperature of the hot water boiling",
		"$EPCDOC_026B_B1": "Used to specify whether or not to use the automatic water temperature control function, and to acquire the current setting.\n\nAutomatic water temperature control function used: 0x41 Automatic water temperature control function not used: 0x42\n\nName : �gAutomatic water temperature control�h setting\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_AUTOMATIC_SETTING_TEMPERATURE_OF_THE_HOT_WATER_BOILING": "Automatic setting temperature of the hot water boiling",
		"$EPCNAME_STATE_IN_BOILING": "State in boiling",
		"$EPCDOC_026B_B2": "This property indicates the current status of the water heater in terms of whether it is heating water or not.\n\nHeating = 0x41 Not heating = 0x42\n\nName : Water heater status\nEPC : 0xB2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_STATE_IN_BOILING": "State in boiling",
		"$EPCNAME_BOILING_HOT_WATER_TEMPERATURE_SET_VALUE": "Boiling hot water temperature set value",
		"$EPCDOC_026B_B3": "Used to specify (in ��C) the temperature of heated water to achieve, and to acquire the current setting.\n\n0x00 to 0x64 (0 to 100��C)\n\nName : Water heating temperature setting\nEPC : 0xB3\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory\n",
		"$ELEMNAME_BOILING_HOT_WATER_TEMPERATURE_SET_VALUE": "Boiling hot water temperature set value",
		"$EPCNAME_MANUAL_BOILING_STOP_DATES_SET_VALUE": "Manual boiling stop dates set value",
		"$ELEMNAME_MANUAL_BOILING_STOP_DATES_SET_VALUE": "Manual boiling stop dates set value",
		"$EPCNAME_MANUAL_BOILING_OFF_TIMER_RELATIVE_TIME_SETTING_VALUE": "Manual boiling OFF timer relative time setting value",
		"$ELEMNAME_MANUAL_BOILING_OFF_TIMER_RELATIVE_TIME_SETTING_VALUE": "Manual boiling OFF timer relative time setting value",
		"$EPCNAME_SETTING_TANK_OPERATION_MODE": "Setting tank operation mode",
		"$ELEMNAME_SETTING_TANK_OPERATION_MODE": "Setting tank operation mode",
		"$EPCNAME_BOILING_INCREASED_PERMISSION_SETTINGS_DURING_THE_DAY": "Boiling increased permission settings during the day",
		"$EPCDOC_026B_C0": "Used to specify whether or not to permit daytime reheating, and to acquire the current setting.\n\nDaytime reheating permitted: 0x41 Daytime reheating not permitted: 0x42\n\nName : �gDaytime reheating permission�h setting\nEPC : 0xC0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_BOILING_INCREASED_PERMISSION_SETTINGS_DURING_THE_DAY": "Boiling increased permission settings during the day",
		"$EPCNAME_WATER_HEATER_WATER_TEMPERATURE_MEASUREMENT_VALUE": "Water heater water temperature measurement value",
		"$EPCDOC_026B_C1": "This property indicates the current temperature of the water in the water heater.\n\n0x00 to 0x64 (0 to 100��C)\n\nName : Measured temperature of water in water heater\nEPC : 0xC1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_WATER_HEATER_WATER_TEMPERATURE_MEASUREMENT_VALUE": "Water heater water temperature measurement value",
		"$EPCNAME_ALARM_CONDITION": "Alarm condition",
		"$ELEMNAME_ALARM_CONDITION": "Alarm condition",
		"$ELEMNAME_RESERVE": "Reserve",
		"$EPCNAME_STATE_IN_THE_HOT_WATER_SUPPLY": "State in the hot water supply",
		"$ELEMNAME_STATE_IN_THE_HOT_WATER_SUPPLY": "State in the hot water supply",
		"$EPCNAME_BATH_WARM_OPERATION_RELATIVE_TIME_SETTING": "Bath warm operation relative time setting",
		"$ELEMNAME_BATH_WARM_OPERATION_RELATIVE_TIME_SETTING": "Bath warm operation relative time setting",
		"$EPCNAME_HOT_WATER_SUPPLY_TEMPERATURE_SET_VALUE": "Hot water supply temperature set value",
		"$EPCDOC_026B_D1": "Used to specify the temperature of water supplied from the water heater in ��C, and to acquire the current setting.\n\n0x00 to 0x64 (0 to 100��C)\n\nName : �gTemperature of supplied water�h setting\nEPC : 0xD1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_HOT_WATER_SUPPLY_TEMPERATURE_SET_VALUE": "Hot water supply temperature set value",
		"$EPCNAME_BATH_TEMPERATURE_SET_VALUE": "Bath temperature set value",
		"$EPCDOC_026B_D3": "Used to specify (in ��C) the temperature up to which the water heater will heat bath water, and to acquire the current setting.\n\n0x00 to 0x64 (0 to 100��C)\n\nName : Bath water temperature setting\nEPC : 0xD3\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_BATH_TEMPERATURE_SET_VALUE": "Bath temperature set value",
		"$EPCNAME_BATH_HOT_WATER_SETTING_4": "Bath hot water setting 4",
		"$ELEMNAME_BATH_HOT_WATER_SETTING_4": "Bath hot water setting 4",
		"$EPCNAME_BATH_HOT_WATER_SETTING_4_SETTING_THE_MAXIMUM_POSSIBLE_LEVEL": "Bath hot water setting 4 setting the maximum possible level",
		"$ELEMNAME_BATH_HOT_WATER_SETTING_4_SETTING_THE_MAXIMUM_POSSIBLE_LEVEL": "Bath hot water setting 4 setting the maximum possible level",
		"$EPCNAME_VOLUME_SET_VALUE": "Volume set value",
		"$ELEMNAME_VOLUME_SET_VALUE": "Volume set value",
		"$EPCNAME_MUTE_SETTING": "Mute setting",
		"$ELEMNAME_MUTE_SETTING": "Mute setting",
		"$EPCNAME_HOT_WATER_SUPPLY_CAN_BE_HOT_WATER_VALUE": "Hot water supply can be hot water value",
		"$ELEMNAME_HOT_WATER_SUPPLY_CAN_BE_HOT_WATER_VALUE": "Hot water supply can be hot water value",
		"$EPCNAME_WINTER_H___P_UNIT_RATED_POWER_CONSUMPTION": "Winter H / P unit rated power consumption",
		"$EPCDOC_026B_DB": "This property indicates the rated power consumption of the heat pump in wintertime (December to Mar.ch)\n\n0x0000-0xFFFD(0-65,533)\n\nName : Rated power consumption of H/P unit in wintertime\nEPC : 0xDB\nData Type : unsigned short\nData Size(Byte) : 2 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_WINTER_H___P_UNIT_RATED_POWER_CONSUMPTION": "Winter H / P unit rated power consumption",
		"$EPCNAME_INTERIM_PERIOD_H___P_UNIT_RATED_POWER_CONSUMPTION": "Interim period H / P unit rated power consumption",
		"$EPCDOC_026B_DC": "This property indicates the rated power consumption of the heat pump in in-between seasons (April, May, October, November)\n\n0x0000-0xFFFD(0-65,533)\n\nName : Rated power consumption of H/P unit in in-between seasons\nEPC : 0xDC\nData Type : unsigned short\nData Size(Byte) : 2 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_INTERIM_PERIOD_H___P_UNIT_RATED_POWER_CONSUMPTION": "Interim period H / P unit rated power consumption",
		"$EPCNAME_SUMMER_H___P_UNIT_RATED_POWER_CONSUMPTION": "Summer H / P unit rated power consumption",
		"$EPCDOC_026B_DD": "This property indicates the rated power consumption of the heat pump in summertime (June to September)\n\n0x0000-0xFFFD(0-65,533)\n\nName : Rated power consumption of H/P unit in summertime\nEPC : 0xDD\nData Type : unsigned short\nData Size(Byte) : 2 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_SUMMER_H___P_UNIT_RATED_POWER_CONSUMPTION": "Summer H / P unit rated power consumption",
		"$EPCNAME_BOILING_HOT_WATER_SETTING": "Boiling hot water setting",
		"$EPCDOC_026B_E0": "Used to specify (in %) the volume of bath water the bathtub will contain upon completion of heating, and to acquire the current setting.\n\n0x00 to 0x64 (0 to 100%)\n\nName : Bath water volume setting\nEPC : 0xE0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_BOILING_HOT_WATER_SETTING": "Boiling hot water setting",
		"$EPCNAME_REMAINING_HOT_WATER_MEASUREMENT_VALUE": "Remaining hot water measurement value",
		"$EPCDOC_026B_E1": "This property indicates the measured amount of water left in the tank in liters.\n\n0x0000 to 0xFFFD (0 to 65533 liters)\n\nName : Measured amount of water remaining in tank\nEPC : 0xE1\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_REMAINING_HOT_WATER_MEASUREMENT_VALUE": "Remaining hot water measurement value",
		"$EPCNAME_TANK_CAPACITY_VALUE": "Tank capacity value",
		"$EPCDOC_026B_E2": "This property indicates the tank capacity in liters.\n\n0x0000 to 0xFFFD (0 to 65533 liters)\n\nName : Tank capacity\nEPC : 0xE2\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_TANK_CAPACITY_VALUE": "Tank capacity value",
		"$EPCNAME_SET_BATH_AUTOMATIC_MODE": "Set bath automatic mode",
		"$EPCDOC_026B_E3": "Used to specify whether or not to use the �gautomatic bath water heating�h mode, and to acquire the current setting.\n\n�gAutomatic bath water heating�h mode ON = 0x41 �gAutomatic bath water heating�h mode OFF = 0x42\n\nName : �gAutomatic bath water heating�h mode setting\nEPC : 0xE3\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_SET_BATH_AUTOMATIC_MODE": "Set bath automatic mode",
		"$EPCNAME_OPERATION_SETTING_REHEATING_MANUAL_BATH": "Operation setting reheating manual bath",
		"$ELEMNAME_OPERATION_SETTING_REHEATING_MANUAL_BATH": "Operation setting reheating manual bath",
		"$EPCNAME_HOT_WATER_OPERATION_SETTING_PLUS_MANUAL_BATH": "Hot water operation setting plus manual bath",
		"$EPCDOC_026B_E5": "Used to specify whether or not to use the function to add hot water to the bath water in the bathtub, and to acquire the current setting.\n\n�gAddition of hot water�h function ON = 0x41 �gAddition of hot water�h function OFF = 0x42\n\nName : �gAddition of hot water�h function setting\nEPC : 0xE5\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_HOT_WATER_OPERATION_SETTING_PLUS_MANUAL_BATH": "Hot water operation setting plus manual bath",
		"$EPCNAME_MANUAL_BATH_TEPID_OPERATION_SETTING": "Manual bath tepid operation setting",
		"$EPCDOC_026B_E6": "Used to specify whether or not to use the �gslight bath water temperature lowering�h function, and to acquire the current setting.\n\n�gSlight bath water temperature lowering�h function ON = 0x41 �gSlight bath water temperature lowering�h function OFF = 0x42\n\nName : �gSlight bath water temperature lowering�h function setting\nEPC : 0xE6\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_MANUAL_BATH_TEPID_OPERATION_SETTING": "Manual bath tepid operation setting",
		"$EPCNAME_BATH_HOT_WATER_SETTING_1": "Bath hot water setting 1",
		"$EPCDOC_026B_E7": "Used to specify the bath water volume in liters, and to acquire the current setting.\n\n0x00 to 0xFD (0 to 253 liters)\n\nName : Bath water volume setting 1\nEPC : 0xE7\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_BATH_HOT_WATER_SETTING_1": "Bath hot water setting 1",
		"$EPCNAME_BATH_HOT_WATER_SETTING_2": "Bath hot water setting 2",
		"$EPCDOC_026B_E8": "Used to specify the bath water volume by selecting a level from among the 8 predefined levels, and to acquire the current setting.\n\n0x31 to 0x38\n\nName : Bath water volume setting 2\nEPC : 0xE8\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_BATH_HOT_WATER_SETTING_2": "Bath hot water setting 2",
		"$EPCNAME_BATHROOM_PRIORITY_SETTING": "Bathroom priority setting",
		"$ELEMNAME_BATHROOM_PRIORITY_SETTING": "Bathroom priority setting",
		"$EPCNAME_BATH_OPERATING_STATE_MONITORING": "Bath operating state monitoring",
		"$ELEMNAME_BATH_OPERATING_STATE_MONITORING": "Bath operating state monitoring",
		"$EPCNAME_BATH_HOT_WATER_SETTING_3": "Bath hot water setting 3",
		"$EPCDOC_026B_EE": "Used to specify the bath water volume in liters, and to acquire the current setting.\n\n0x0000 to 0xFFFD (0 to 65533 liters)\n\nName : Bath water volume setting 3\nEPC : 0xEE\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_BATH_HOT_WATER_SETTING_3": "Bath hot water setting 3",
		"$OBJNAME_026E": "Electric toilet seats",
		"$EPCNAME_TOILET_SEAT_TEMPERATURE_LEVEL_SETTING": "Toilet seat temperature level setting",
		"$ELEMNAME_TOILET_SEAT_TEMPERATURE_LEVEL_SETTING": "Toilet seat temperature level setting",
		"$EPCNAME_TOILET_SEAT_HEATER_SETTING": "Toilet seat heater setting",
		"$ELEMNAME_TOILET_SEAT_HEATER_SETTING": "Toilet seat heater setting",
		"$EPCNAME_TOILET_SEAT_HEATER_TEMPORARY_STOP_SETTING": "Toilet seat heater temporary stop setting",
		"$ELEMNAME_TOILET_SEAT_HEATER_TEMPORARY_STOP_SETTING": "Toilet seat heater temporary stop setting",
		"$EPCNAME_TOILET_SEAT_HEATER_PAUSE_START_TIME_SETTING": "Toilet seat heater pause start time setting",
		"$ELEMNAME_TOILET_SEAT_HEATER_PAUSE_START_TIME_SETTING": "Toilet seat heater pause start time setting",
		"$EPCNAME_TOILET_SEAT_HEATER_PAUSE_TIME_SETTING_VALUE": "Toilet seat heater pause time setting value",
		"$ELEMNAME_TOILET_SEAT_HEATER_PAUSE_TIME_SETTING_VALUE": "Toilet seat heater pause time setting value",
		"$EPCNAME_ROOM_HEATING_TEMPERATURE_LEVEL_SETTING": "Room heating temperature level setting",
		"$ELEMNAME_ROOM_HEATING_TEMPERATURE_LEVEL_SETTING": "Room heating temperature level setting",
		"$EPCNAME_ROOM_HEATING_SETTING": "Room heating setting",
		"$ELEMNAME_ROOM_HEATING_SETTING": "Room heating setting",
		"$EPCNAME_ROOM_HEATING_STATE": "Room heating state",
		"$ELEMNAME_ROOM_HEATING_STATE": "Room heating state",
		"$EPCNAME_ROOM_HEATING_START_TIME_SETTING": "Room heating start time setting",
		"$ELEMNAME_ROOM_HEATING_START_TIME_SETTING": "Room heating start time setting",
		"$EPCNAME_ROOM_HEATING_OPERATION_TIME_SETTING_VALUE": "Room heating operation time setting value",
		"$ELEMNAME_ROOM_HEATING_OPERATION_TIME_SETTING_VALUE": "Room heating operation time setting value",
		"$EPCNAME_SEATING_DETECTION_STATE": "Seating detection state",
		"$ELEMNAME_SEATING_DETECTION_STATE": "Seating detection state",
		"$OBJNAME_026F": "Electric lock",
		"$EPCNAME_LOCK_SETTING_1": "Lock setting 1",
		"$ELEMNAME_LOCK_SETTING_1": "Lock setting 1",
		"$EPCNAME_LOCKING_SETTING_2": "Locking setting 2",
		"$ELEMNAME_LOCKING_SETTING_2": "Locking setting 2",
		"$EPCNAME_DOOR_GUARD_LOCKED_STATE": "Door Guard locked state",
		"$ELEMNAME_DOOR_GUARD_LOCKED_STATE": "Door Guard locked state",
		"$EPCNAME_DOOR_OPENING_AND_CLOSING_STATE": "Door opening and closing state",
		"$ELEMNAME_DOOR_OPENING_AND_CLOSING_STATE": "Door opening and closing state",
		"$EPCNAME_OCCUPANCY_ABSENT_STATE": "Occupancy-absent state",
		"$ELEMNAME_OCCUPANCY_ABSENT_STATE": "Occupancy-absent state",
		"$EPCNAME_ALARM_STATE": "Alarm state",
		"$ELEMNAME_ALARM_STATE": "Alarm state",
		"$EPCNAME_SET_AUTOMATIC_LOCKING_MODE": "Set automatic locking mode",
		"$ELEMNAME_SET_AUTOMATIC_LOCKING_MODE": "Set automatic locking mode",
		"$EPCNAME_REMAINING_BATTERY_POWER_STATE": "Remaining battery power state",
		"$ELEMNAME_REMAINING_BATTERY_POWER_STATE": "Remaining battery power state",
		"$OBJNAME_0272": "Instantaneous type water heater",
		"$EPCNAME_AUTO_ON_TIMER_RESERVATION_SETTING_BATH": "Auto ON timer reservation setting bath",
		"$ELEMNAME_AUTO_ON_TIMER_RESERVATION_SETTING_BATH": "Auto ON timer reservation setting bath",
		"$EPCNAME_BATH_AUTOMATIC_ON_TIMER_TIME_SETTING": "Bath automatic ON timer time setting",
		"$ELEMNAME_BATH_AUTOMATIC_ON_TIMER_TIME_SETTING": "Bath automatic ON timer time setting",
		"$EPCNAME_BATH_AUTOMATIC_ON_TIMER_RELATIVE_TIME_SETTING": "Bath automatic ON timer relative time setting",
		"$ELEMNAME_BATH_AUTOMATIC_ON_TIMER_RELATIVE_TIME_SETTING": "Bath automatic ON timer relative time setting",
		"$EPCNAME_WATER_HEATER_COMBUSTION_STATE": "Water heater combustion state",
		"$ELEMNAME_WATER_HEATER_COMBUSTION_STATE": "Water heater combustion state",
		"$EPCNAME_HOT_WATER_SUPPLY_HEAT_INSULATION_SET": "Hot water supply heat insulation set",
		"$ELEMNAME_HOT_WATER_SUPPLY_HEAT_INSULATION_SET": "Hot water supply heat insulation set",
		"$EPCNAME_AUTOMATIC_OPERATION_TIME_SETTING_VALUE": "Automatic operation time setting value",
		"$ELEMNAME_AUTOMATIC_OPERATION_TIME_SETTING_VALUE": "Automatic operation time setting value",
		"$EPCNAME_AUTOMATIC_OPERATION_REMAINING_TIME": "Automatic operation remaining time",
		"$ELEMNAME_AUTOMATIC_OPERATION_REMAINING_TIME": "Automatic operation remaining time",
		"$EPCNAME_BATH_WATER_HEATER_COMBUSTION_STATE": "Bath water heater combustion state",
		"$ELEMNAME_BATH_WATER_HEATER_COMBUSTION_STATE": "Bath water heater combustion state",
		"$EPCNAME_OPERATION_SETTING_BATH_REHEATING": "Operation setting bath reheating",
		"$ELEMNAME_OPERATION_SETTING_BATH_REHEATING": "Operation setting bath reheating",
		"$EPCNAME_HOT_WATER_OPERATION_SETTING_PLUS_BATH": "Hot water operation setting plus bath",
		"$ELEMNAME_HOT_WATER_OPERATION_SETTING_PLUS_BATH": "Hot water operation setting plus bath",
		"$EPCNAME_BATH_TEPID_OPERATION_SETTING": "Bath tepid operation setting",
		"$ELEMNAME_BATH_TEPID_OPERATION_SETTING": "Bath tepid operation setting",
		"$EPCNAME_SHOWER_HOT_WATER_SUPPLY_STATE": "Shower hot water supply state",
		"$ELEMNAME_SHOWER_HOT_WATER_SUPPLY_STATE": "Shower hot water supply state",
		"$EPCNAME_KITCHEN_HOT_WATER_SUPPLY_STATE": "Kitchen hot water supply state",
		"$ELEMNAME_KITCHEN_HOT_WATER_SUPPLY_STATE": "Kitchen hot water supply state",
		"$EPCNAME_HOT_WATER_SUPPLY_WARMTH_ON_TIMER_RESERVATION_SETTING": "Hot water supply warmth ON timer reservation setting",
		"$ELEMNAME_HOT_WATER_SUPPLY_WARMTH_ON_TIMER_RESERVATION_SETTING": "Hot water supply warmth ON timer reservation setting",
		"$EPCNAME_HOT_WATER_SUPPLY_WARMTH_ON_TIMER_TIME_SETTING": "Hot water supply warmth ON timer time setting",
		"$ELEMNAME_HOT_WATER_SUPPLY_WARMTH_ON_TIMER_TIME_SETTING": "Hot water supply warmth ON timer time setting",
		"$OBJNAME_0273": "Bathroom heating dryer",
		"$EPCNAME_ON_TIMER_RESERVATION_SETTING_1": "ON timer reservation setting 1",
		"$ELEMNAME_ON_TIMER_RESERVATION_SETTING_1": "ON timer reservation setting 1",
		"$EPCNAME_OPERATION_SETTING": "Operation setting",
		"$ELEMNAME_OPERATION_SETTING": "Operation setting",
		"$EPCNAME_VENTILATION_OPERATION_SETTING": "Ventilation operation setting",
		"$ELEMNAME_VENTILATION_OPERATION_SETTING": "Ventilation operation setting",
		"$EPCNAME_BATHING_BEFORE_THE_PRE_HEATING_OPERATION_SET": "Bathing before the pre-heating operation set",
		"$ELEMNAME_BATHING_BEFORE_THE_PRE_HEATING_OPERATION_SET": "Bathing before the pre-heating operation set",
		"$EPCNAME_HEATING_OPERATION_SETTING_WHILE_BATHING": "Heating operation setting while bathing",
		"$ELEMNAME_HEATING_OPERATION_SETTING_WHILE_BATHING": "Heating operation setting while bathing",
		"$EPCNAME_THE_DRYING_OPERATION_SETTING": "The drying operation setting",
		"$ELEMNAME_THE_DRYING_OPERATION_SETTING": "The drying operation setting",
		"$EPCNAME_COOL_BREEZE_OPERATION_SETTING": "Cool breeze operation setting",
		"$ELEMNAME_COOL_BREEZE_OPERATION_SETTING": "Cool breeze operation setting",
		"$EPCNAME_ON_TIMER_RESERVATION_SETTING_2": "ON timer reservation setting 2",
		"$ELEMNAME_ON_TIMER_RESERVATION_SETTING_2": "ON timer reservation setting 2",
		"$OBJNAME_0279": "Residential solar power generation",
		"$EPCNAME_GRID_CONNECTED_STATE": "Grid-connected state",
		"$ELEMNAME_GRID_CONNECTED_STATE": "Grid-connected state",
		"$EPCNAME_INSTANTANEOUS_POWER_GENERATION_POWER_MEASUREMENT_VALUE": "Instantaneous power generation power measurement value",
		"$ELEMNAME_INSTANTANEOUS_POWER_GENERATION_POWER_MEASUREMENT_VALUE": "Instantaneous power generation power measurement value",
		"$EPCNAME_THE_INTEGRATED_POWER_GENERATION_AMOUNT_MEASUREMENT_VALUE": "The integrated power generation amount measurement value",
		"$ELEMNAME_THE_INTEGRATED_POWER_GENERATION_AMOUNT_MEASUREMENT_VALUE": "The integrated power generation amount measurement value",
		"$EPCNAME_THE_INTEGRATED_POWER_GENERATION_AMOUNT_OF_POWER_RESET_SETTING": "The integrated power generation amount of power reset setting",
		"$ELEMNAME_THE_INTEGRATED_POWER_GENERATION_AMOUNT_OF_POWER_RESET_SETTING": "The integrated power generation amount of power reset setting",
		"$EPCNAME_INTEGRATED_POWER_PURCHASE_POWER_AMOUNT_MEASUREMENT_VALUE": "Integrated power purchase power amount measurement value",
		"$ELEMNAME_INTEGRATED_POWER_PURCHASE_POWER_AMOUNT_MEASUREMENT_VALUE": "Integrated power purchase power amount measurement value",
		"$EPCNAME_INTEGRATED_POWER_PURCHASE_AMOUNT_OF_POWER_RESET_SETTING": "Integrated power purchase amount of power reset setting",
		"$ELEMNAME_INTEGRATED_POWER_PURCHASE_AMOUNT_OF_POWER_RESET_SETTING": "Integrated power purchase amount of power reset setting",
		"$EPCNAME_ELECTRIC_POWER_GENERATION_LIMIT_SETTING_1": "Electric power generation limit setting 1",
		"$ELEMNAME_ELECTRIC_POWER_GENERATION_LIMIT_SETTING_1": "Electric power generation limit setting 1",
		"$EPCNAME_ELECTRIC_POWER_GENERATION_LIMIT_SETTING_2": "Electric power generation limit setting 2",
		"$ELEMNAME_ELECTRIC_POWER_GENERATION_LIMIT_SETTING_2": "Electric power generation limit setting 2",
		"$EPCNAME_SALE_OF_ELECTRICITY_POWER_LIMIT_SET": "Sale of electricity power limit set",
		"$ELEMNAME_SALE_OF_ELECTRICITY_POWER_LIMIT_SET": "Sale of electricity power limit set",
		"$EPCNAME_THE_RATED_POWER_GENERATION_POWER_VALUE": "The rated power generation power value (at the time of independence)",
		"$ELEMNAME_THE_RATED_POWER_GENERATION_POWER_VALUE": "The rated power generation power value (at the time of independence)",
		"$OBJNAME_027A": "Hot and cold water heat source machine",
		"$EPCDOC_027A_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_027A_90": "Reservation ON/OFF\n\nON=0x41, OFF=0x42\n\nName : ON timer reservation setting\nEPC : 0x90\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_027A_91": "Timer value HH:MM\n\n0-0x17: 0-0x3B (=0-23):(=0-59)\n\nName : ON timer setting\nEPC : 0x91\nData Type : unsigned char x 2\nData Size(Byte) : 2 Bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_027A_92": "Timer value HH:MM\n\n0-0x17: 0-0x3B (=0-23):(=0-59)\n\nName : Relative ON timer setting\nEPC : 0x92\nData Type : unsigned char x 2\nData Size(Byte) : 2 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_027A_94": "Reservation ON/OFF\n\nON��0x41, OFF��0x42\n\nName : OFF timer reservation setting\nEPC : 0x94\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_027A_95": "Timer value HH:MM\n\n0-0x17: 0-0x3B (=0-23):(=0-59)\n\nName : Time set by OFF timer\nEPC : 0x95\nData Type : unsigned char �~2\nData Size(Byte) : 2 Bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_027A_96": "Timer value HH:MM\n\n0-0x17: 0-0x3B (=0-23):(=0-59)\n\nName : Relative OFF timer setting\nEPC : 0x96\nData Type : unsigned char �~2\nData Size(Byte) : 2 Bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_027A_E0": "Set the operation mode of heating (hot water)/cooling (cold water) and gets the status\n\nHeating��0x41,Cooling��0x42\n\nName : Operation mode setting\nEPC : 0xE0\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_WATER_TEMPERATURE_SETTING_1": "Water temperature setting 1",
		"$EPCDOC_027A_E1": "This property indicates water temperature setting�B\n\n0x00-0x64�i0-100���j AUTO��0x71\n\nName : Water temperature setting 1\nEPC : 0xE1\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory\n",
		"$ELEMNAME_WATER_TEMPERATURE_SETTING_1": "Water temperature setting 1",
		"$EPCNAME_WATER_TEMPERATURE_SETTING_2": "Water temperature setting 2",
		"$EPCDOC_027A_E2": "This property indicates water temperature setting level by 15 steps\n\nCooling (cold water):0x21-0x2F Heating (hot water):0x31-0x3F indicated the minimum to maximumlevel respectively AUTO=0x41\n\nName : Water temperature setting 2\nEPC : 0xE2\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory\n",
		"$ELEMNAME_WATER_TEMPERATURE_SETTING_2": "Water temperature setting 2",
		"$EPCNAME_FORWARD_WATER_TEMPERATURE_MEASUREMENT_VALUE": "Forward water temperature measurement value (outlet water temperature)",
		"$EPCDOC_027A_E3": "Measured temperature of outward water\n\n0x00-0x64�i0-100���j\n\nName : Measured temperature of outward water (Exit water Temperature)\nEPC : 0xE3\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_FORWARD_WATER_TEMPERATURE_MEASUREMENT_VALUE": "Forward water temperature measurement value (outlet water temperature)",
		"$EPCNAME_RETURN_WATER_TEMPERATURE_MEASUREMENT_VALUE": "Return water temperature measurement value (inlet water temperature)",
		"$EPCDOC_027A_E4": "Measured temperature of inward water\n\n0x00-0x64�i0-100���j\n\nName : Measured temperature of inward water (Entrance water temperature)\nEPC : 0xE4\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_RETURN_WATER_TEMPERATURE_MEASUREMENT_VALUE": "Return water temperature measurement value (inlet water temperature)",
		"$EPCNAME_SPECIAL_OPERATION_SET": "Special operation set",
		"$EPCDOC_027A_E5": "Sets Nornal Operation/ modest o peration/high power operation and gets the status\n\nNornal Operation=0x41, modest operation=0x42�high power operation=0x43\n\nName : Special operation setting\nEPC : 0xE5\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_SPECIAL_OPERATION_SET": "Special operation set",
		"$EPCNAME_DAILY_TIMER_SETTING": "Daily timer setting",
		"$EPCDOC_027A_E6": "Daily timer ON/OFF Up tp 2 kinds of timers can be used\n\nTimer OFF=0x40, timer 1=0x41 timer 2=0x42\n\nName : Daily timer setting\nEPC : 0xE6\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_DAILY_TIMER_SETTING": "Daily timer setting",
		"$EPCNAME_DAILY_TIMER_1_SETTING": "Daily Timer 1 setting",
		"$EPCDOC_027A_E7": "Time set by daily timer\n\nSet the time in the unit of 30 minutes, dividing 24 hours by 30 minutes and allocated 6 bytes. Each bit 1: worked 0: stopped\n\nName : Daily timer setting 1\nEPC : 0xE7\nData Type : unsigned char x 6\nData Size(Byte) : 6 Bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_DAILY_TIMER_1_SETTING": "Daily Timer 1 setting",
		"$EPCNAME_DAILY_TIMER_2_SETTING": "Daily timer 2 setting",
		"$EPCDOC_027A_E8": "Time set by daily timer\n\nSet the time in the unit of 30 minutes, dividing 24 hours by 30 minutes and allocated 6 bytes. Each bit 1: worked 0: stopped\n\nName : Daily timer setting 2\nEPC : 0xE8\nData Type : unsigned char x 6\nData Size(Byte) : 6 Bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_DAILY_TIMER_2_SETTING": "Daily timer 2 setting",
		"$ELEMNAME_HEATING___COOLING": "Heating / cooling",
		"$EPCNAME_POWER_CONSUMPTION_MEASUREMENT_METHOD": "Power consumption measurement method",
		"$ELEMNAME_POWER_CONSUMPTION_MEASUREMENT_METHOD": "Power consumption measurement method",
		"$OBJNAME_027B": "Floor heating",
		"$EPCDOC_027B_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_027B_90": "Reservation ON/OFF\n\nON=0x41, OFF=0x42\n\nName : ON timer reservation setting\nEPC : 0x90\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_027B_91": "Timer value HH:MM\n\n0-0x17: 0-0x3B (=0-23):(=0-59)\n\nName : Time set by ON timer\nEPC : 0x91\nData Type : unsigned char x 2\nData Size(Byte) : 2 Bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_027B_92": "Timer value HH:MM\n\n0-0x17: 0-0x3B (=0-23):(=0-59)\n\nName : Relative ON timer setting\nEPC : 0x92\nData Type : unsigned char x 2\nData Size(Byte) : 2 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_027B_94": "Reservation ON/OFF\n\nON��0x41, OFF��0x42\n\nName : OFF timer reservation setting\nEPC : 0x94\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_027B_95": "Timer value HH:MM\n\n0-0x17:  0-0x3B (=0-23):(=0-59)\n\nName : Time set by OFF timer\nEPC : 0x95\nData Type : unsigned char �~2\nData Size(Byte) : 2 Bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_027B_96": "Timer value HH:MM\n\n0-0x17:  0-0x3B (=0-23):(=0-59)\n\nName : Relative OFF timer setting\nEPC : 0x96\nData Type : unsigned char �~2\nData Size(Byte) : 2 Bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_TEMPERATURE_SETTING_1": "Temperature setting 1",
		"$EPCDOC_027B_E0": "This property indicates set temperature\n\n0x00-0x32�i0-50���j AUTO��0x71\n\nName : Temperature setting 1\nEPC : 0xE0\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory\n",
		"$ELEMNAME_TEMPERATURE_SETTING_1": "Temperature setting 1",
		"$EPCNAME_TEMPERATURE_SETTING_2": "Temperature setting 2",
		"$EPCDOC_027B_E1": "This property indicates set temperature level by 15 steps\n\n0x31-0x3F 0x31 indicates the minimum level, 0x3F indicates the maximumlevel AUTO=0x41\n\nName : Temperature setting 2\nEPC : 0xE1\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory\n",
		"$ELEMNAME_TEMPERATURE_SETTING_2": "Temperature setting 2",
		"$EPCDOC_027B_E2": "Measured room temperature\n\n0x81-0x7D�i-127-125���j\n\nName : Measured room teemperature\nEPC : 0xE2\nData Type : signed char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCNAME_FLOOR_TEMPERATURE_MEASUREMENT_VALUE": "Floor temperature measurement value",
		"$EPCDOC_027B_E3": "Measured floor temperature\n\n0x00-0x32�i0-50���j\n\nName : Measured floor temperature\nEPC : 0xE3\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_FLOOR_TEMPERATURE_MEASUREMENT_VALUE": "Floor temperature measurement value",
		"$EPCNAME_ZONE_SWITCH_SETTING": "Zone switch setting",
		"$EPCDOC_027B_E4": "Sets the target zone for control and gets the number of controllable zones\n\nb0-b7 is allocated to 0 to 7 Each bit 1: with control, 0: without control\n\nName : Zone change setting\nEPC : 0xE4\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_ZONE_SWITCH_SETTING": "Zone switch setting",
		"$EPCDOC_027B_E5": "Sets Nornal Operation/modest operation/high power operation and gets the status\n\nNornal Operation=0x41, modest operation=0x42�high power operation=0x43\n\nName : Special operation setting\nEPC : 0xE5\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_027B_E6": "Daily timer ON/OFF Up tp 2 kinds of timers can be used\n\nTimer OFF=0x40, timer 1=0x41, timer 2=0x42\n\nName : Daily timer setting\nEPC : 0xE6\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_027B_E7": "Time set by daily timer\n\nSet the time in the unit of 30 minutes, deviding 24 hours by 30 minutes and allocated to 6 bytes. Each bit 1: worked 0: stopped\n\nName : Daily timer setting 1\nEPC : 0xE7\nData Type : unsigned char x 6\nData Size(Byte) : 6 Bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_027B_E8": "Time set by daily timer\n\nSet the time in the unit of 30 minutes, deviding 24 hours by 30 minutes and allocated to 6 bytes. Each bit 1: worked 0: stopped\n\nName : Daily timer setting 2\nEPC : 0xE8\nData Type : unsigned char x 6\nData Size(Byte) : 6 Bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$OBJNAME_027C": "Fuel cell",
		"$EPCDOC_027C_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_027C_C1": "This property indicates the current temperature of the water in the water heater in    .\n\n0x00-0x64 i0-100   j\n\nName : Measured temperature of water in water heater\nEPC : 0xC1\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCNAME_THE_RATED_POWER_GENERATION_AMOUNT": "The rated power generation amount",
		"$EPCDOC_027C_C2": "This property indicates the rated power generation output in watts.\n\n0x0000-0xFFFD  i0-65533W j\n\nName : Rated power generation output\nEPC : 0xC2\nData Type : unsigned short\nData Size(Byte) : 2 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_THE_RATED_POWER_GENERATION_AMOUNT": "The rated power generation amount",
		"$EPCNAME_THE_HOT_WATER_TANK_HEAT": "The hot water tank heat",
		"$EPCDOC_027C_C3": "This property indicates the heating value of the hot water storage tank in MJ.\n\n0x0000-0xFFFD  i0-65533MJ j\n\nName : Heating value of hot water storage tank\nEPC : 0xC3\nData Type : unsigned short\nData Size(Byte) : 2 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_THE_HOT_WATER_TANK_HEAT": "The hot water tank heat",
		"$EPCDOC_027C_C4": "This property indicates the instantaneous power generation output in watts.\n\n0x0000-0xFFFD  i0-65533W j\n\nName : Measured instantaneous power generation output\nEPC : 0xC4\nData Type : unsigned short\nData Size(Byte) : 2 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$EPCDOC_027C_C5": "This property indicates the cumulative power generation output in increments of 0.001kWh.\n\n0x0-0x3B9AC9FF  i0-999,999.999kWh j\n\nName : Measured cumulative power generation output\nEPC : 0xC5\nData Type : unsigned long\nData Size(Byte) : 4 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$EPCDOC_027C_C6": "Resets the cumulative power generation output by writing 0x00.\n\nReset  0x00\n\nName : Cumulative power generation output reset setting\nEPC : 0xC6\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : undefined\n",
		"$EPCNAME_INSTANTANEOUS_GAS_CONSUMPTION_MEASUREMENT_VALUE": "Instantaneous gas consumption measurement value",
		"$EPCDOC_027C_C7": "This property indicates the instantaneous gas consumption in increments of 0.001m3.\n\n0x0-0xFFFD  i0-65.533m3 j\n\nName : Measured instantaneous gas consumption\nEPC : 0xC7\nData Type : unsigned short\nData Size(Byte) : 2 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_INSTANTANEOUS_GAS_CONSUMPTION_MEASUREMENT_VALUE": "Instantaneous gas consumption measurement value",
		"$EPCNAME_INTEGRATED_GAS_CONSUMPTION_MEASUREMENT_VALUE": "Integrated gas consumption measurement value",
		"$EPCDOC_027C_C8": "This property indicates the cumulative gas consumption in increments of 0.001m3.\n\n0x0-0x3B9AC9FF  i0-999,999.999m3 j\n\nName : Measured cumulative gas consumption\nEPC : 0xC8\nData Type : unsigned long\nData Size(Byte) : 4 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_INTEGRATED_GAS_CONSUMPTION_MEASUREMENT_VALUE": "Integrated gas consumption measurement value",
		"$EPCNAME_INTEGRATED_GAS_CONSUMPTION_RESET_SETTING": "Integrated gas consumption reset setting",
		"$EPCDOC_027C_C9": "Resets the cumulative gas consumption by writing 0x00.\n\nReset  0x00\n\nName : Cumulative gas consumption reset setting\nEPC : 0xC9\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : undefined\n",
		"$ELEMNAME_INTEGRATED_GAS_CONSUMPTION_RESET_SETTING": "Integrated gas consumption reset setting",
		"$EPCNAME_POWER_GENERATION_OPERATION_SETTING": "Power generation operation setting",
		"$EPCDOC_027C_CA": "This property indicates the ON/OFF status of power generation.\n\nPower generation ON=0x41 C Power generation OFF  0x42\n\nName : Power generation setting\nEPC : 0xCA\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_POWER_GENERATION_OPERATION_SETTING": "Power generation operation setting",
		"$EPCNAME_POWER_GENERATION_OPERATION_STATE": "Power generation operation state",
		"$ELEMNAME_POWER_GENERATION_OPERATION_STATE": "Power generation operation state",
		"$EPCNAME_HOME_INSTANTANEOUS_POWER_CONSUMPTION_MEASUREMENTS": "Home instantaneous power consumption measurements",
		"$ELEMNAME_HOME_INSTANTANEOUS_POWER_CONSUMPTION_MEASUREMENTS": "Home instantaneous power consumption measurements",
		"$EPCNAME_HOME_CUMULATIVE_POWER_CONSUMPTION_AMOUNT_MEASUREMENT_VALUE": "Home cumulative power consumption amount measurement value",
		"$ELEMNAME_HOME_CUMULATIVE_POWER_CONSUMPTION_AMOUNT_MEASUREMENT_VALUE": "Home cumulative power consumption amount measurement value",
		"$EPCNAME_HOME_CUMULATIVE_POWER_CONSUMPTION_RESET_SETTING": "Home cumulative power consumption reset setting",
		"$ELEMNAME_HOME_CUMULATIVE_POWER_CONSUMPTION_RESET_SETTING": "Home cumulative power consumption reset setting",
		"$EPCDOC_027C_E1": "This property indicates the measured amount of the remaining hot water in liters.\n\n0x0000-0xFFFD i0-65533 liters j\n\nName : Measured remaining hot water amount\nEPC : 0xE1\nData Type : unsigned short\nData Size(Byte) : 2 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCDOC_027C_E2": "This property indicates the tank capacity in liters.\n\n0x0000-0xFFFD i0-65533 liters j\n\nName : Tank capacity\nEPC : 0xE2\nData Type : unsigned short\nData Size(Byte) : 2 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$OBJNAME_027D": "Storage battery",
		"$EPCNAME_MINIMUM_MAXIMUM_CHARGING_POWER_VALUE": "Minimum maximum charging power value",
		"$ELEMNAME_MIN___MAX_CHARGING_POWER_VALUE": "Min / Max charging power value",
		"$EPCNAME_MINIMUM_AND_MAXIMUM_DISCHARGE_POWER_VALUE": "Minimum and maximum discharge power value",
		"$ELEMNAME_MIN___MAX_DISCHARGE_POWER_VALUE": "Min / Max discharge power value",
		"$EPCNAME_MINIMUM_MAXIMUM_CHARGING_CURRENT_VALUE": "Minimum maximum charging current value",
		"$ELEMNAME_MINIMUM___MAXIMUM_CHARGING_CURRENT_VALUE": "Minimum / maximum charging current value",
		"$EPCNAME_MINIMUM_AND_MAXIMUM_DISCHARGE_CURRENT_VALUE": "Minimum and maximum discharge current value",
		"$ELEMNAME_MINIMUM___MAXIMUM_DISCHARGE_CURRENT_VALUE": "Minimum / maximum discharge current value",
		"$EPCNAME_RUNNING_OPERATION_STATE": "Running operation state",
		"$ELEMNAME_RUNNING_OPERATION_STATE": "Running operation state",
		"$EPCNAME_RATED_AMOUNT_OF_POWER": "Rated amount of power",
		"$ELEMNAME_RATED_AMOUNT_OF_POWER": "Rated amount of power",
		"$EPCNAME_RATING_CAPACITY": "Rating capacity",
		"$ELEMNAME_RATING_CAPACITY": "Rating capacity",
		"$EPCNAME_RATED_VOLTAGE": "Rated voltage",
		"$ELEMNAME_RATED_VOLTAGE": "Rated voltage",
		"$EPCNAME_INSTANTANEOUS_CHARGE_AND_DISCHARGE_POWER_MEASUREMENTS": "Instantaneous charge and discharge power measurements",
		"$ELEMNAME_INSTANTANEOUS_CHARGE_AND_DISCHARGE_POWER_MEASUREMENTS": "Instantaneous charge and discharge power measurements",
		"$EPCNAME_INSTANTANEOUS_CHARGE_AND_DISCHARGE_CURRENT_MEASUREMENT_VALUE": "Instantaneous charge and discharge current measurement value",
		"$ELEMNAME_INSTANTANEOUS_CHARGE_AND_DISCHARGE_CURRENT_MEASUREMENT_VALUE": "Instantaneous charge and discharge current measurement value",
		"$EPCNAME_INSTANT_CHARGE_AND_DISCHARGE_VOLTAGE_MEASUREMENT_VALUE": "Instant charge and discharge voltage measurement value",
		"$ELEMNAME_INSTANT_CHARGE_AND_DISCHARGE_VOLTAGE_MEASUREMENT_VALUE": "Instant charge and discharge voltage measurement value",
		"$EPCNAME_CUMULATIVE_DISCHARGE_POWER_AMOUNT_MEASUREMENT_VALUE": "Cumulative discharge power amount measurement value",
		"$ELEMNAME_CUMULATIVE_DISCHARGE_POWER_AMOUNT_MEASUREMENT_VALUE": "Cumulative discharge power amount measurement value",
		"$EPCNAME_THE_ACCUMULATED_AMOUNT_OF_DISCHARGE_POWER_RESET_SETTING": "The accumulated amount of discharge power reset setting",
		"$ELEMNAME_THE_ACCUMULATED_AMOUNT_OF_DISCHARGE_POWER_RESET_SETTING": "The accumulated amount of discharge power reset setting",
		"$EPCNAME_CUMULATIVE_CHARGING_POWER_AMOUNT_MEASUREMENT_VALUE": "Cumulative charging power amount measurement value",
		"$ELEMNAME_CUMULATIVE_CHARGING_POWER_AMOUNT_MEASUREMENT_VALUE": "Cumulative charging power amount measurement value",
		"$EPCNAME_THE_ACCUMULATED_CHARGE_AMOUNT_OF_POWER_RESET_SETTING": "The accumulated charge amount of power reset setting",
		"$ELEMNAME_THE_ACCUMULATED_CHARGE_AMOUNT_OF_POWER_RESET_SETTING": "The accumulated charge amount of power reset setting",
		"$EPCNAME_THE_CHARGE_DISCHARGE_AMOUNT_SET_VALUE_1": "The charge-discharge amount set value 1",
		"$ELEMNAME_THE_CHARGE_DISCHARGE_AMOUNT_SET_VALUE_1": "The charge-discharge amount set value 1",
		"$EPCNAME_THE_CHARGE_DISCHARGE_AMOUNT_SET_VALUE_2": "The charge-discharge amount set value 2",
		"$ELEMNAME_THE_CHARGE_DISCHARGE_AMOUNT_SET_VALUE_2": "The charge-discharge amount set value 2",
		"$EPCNAME_BATTERY_POWER_LEVEL_1": "Battery power level 1",
		"$ELEMNAME_BATTERY_POWER_LEVEL_1": "Battery power level 1",
		"$EPCNAME_BATTERY_POWER_LEVEL_2": "Battery power level 2",
		"$ELEMNAME_BATTERY_POWER_LEVEL_2": "Battery power level 2",
		"$EPCNAME_BATTERY_POWER_LEVEL_3": "Battery power level 3",
		"$ELEMNAME_BATTERY_POWER_LEVEL_3": "Battery power level 3",
		"$EPCNAME_DETERIORATION_STATE": "Deterioration state",
		"$ELEMNAME_DETERIORATION_STATE": "Deterioration state",
		"$EPCNAME_STORAGE_BATTERY_TYPE": "Storage battery type",
		"$ELEMNAME_STORAGE_BATTERY_TYPE": "Storage battery type",
		"$EPCNAME_CHARGE_AMOUNT_SET_VALUE_1": "Charge amount set value 1",
		"$ELEMNAME_CHARGE_AMOUNT_SET_VALUE_1": "Charge amount set value 1",
		"$EPCNAME_DISCHARGE_AMOUNT_SET_VALUE_1": "Discharge amount set value 1",
		"$ELEMNAME_DISCHARGE_AMOUNT_SET_VALUE_1": "Discharge amount set value 1",
		"$EPCNAME_CHARGE_AMOUNT_SET_VALUE_2": "Charge amount set value 2",
		"$ELEMNAME_CHARGE_AMOUNT_SET_VALUE_2": "Charge amount set value 2",
		"$EPCNAME_DISCHARGE_AMOUNT_SET_VALUE_2": "Discharge amount set value 2",
		"$ELEMNAME_DISCHARGE_AMOUNT_SET_VALUE_2": "Discharge amount set value 2",
		"$EPCNAME_CHARGING_POWER_SETTING": "Charging power setting",
		"$ELEMNAME_CHARGING_POWER_SETTING": "Charging power setting",
		"$EPCNAME_DISCHARGE_POWER_SETTING": "Discharge power setting",
		"$ELEMNAME_DISCHARGE_POWER_SETTING": "Discharge power setting",
		"$EPCNAME_CHARGING_CURRENT_SETTING_VALUE": "Charging current setting value",
		"$ELEMNAME_CHARGING_CURRENT_SETTING_VALUE": "Charging current setting value",
		"$EPCNAME_DISCHARGE_CURRENT_SETTING_VALUE": "Discharge current setting value",
		"$ELEMNAME_DISCHARGE_CURRENT_SETTING_VALUE": "Discharge current setting value",
		"$OBJNAME_027E": "Electric vehicle charging and discharging device",
		"$EPCNAME_DISCHARGE_CAPACITY_VALUE_OF_THE_IN_VEHICLE_BATTERY_1": "Discharge capacity value of the in-vehicle battery 1",
		"$ELEMNAME_DISCHARGE_CAPACITY_VALUE_OF_THE_IN_VEHICLE_BATTERY_1": "Discharge capacity value of the in-vehicle battery 1",
		"$EPCNAME_DISCHARGE_CAPACITY_VALUE_OF_THE_VEHICLE_MOUNTED_BATTERY_2": "Discharge capacity value of the vehicle-mounted battery 2",
		"$ELEMNAME_DISCHARGE_CAPACITY_VALUE_OF_THE_VEHICLE_MOUNTED_BATTERY_2": "Discharge capacity value of the vehicle-mounted battery 2",
		"$EPCNAME_DISCHARGE_THE_REMAINING_CAPACITY_OF_THE_ON_VEHICLE_BATTERY_1": "Discharge the remaining capacity of the on-vehicle battery 1",
		"$ELEMNAME_DISCHARGE_THE_REMAINING_CAPACITY_OF_THE_ON_VEHICLE_BATTERY_1": "Discharge the remaining capacity of the on-vehicle battery 1",
		"$EPCNAME_OF_THE_VEHICLE_MOUNTED_BATTERY_DISCHARGE_POSSIBLE_REMAINING_CAPACITY_2": "Of the vehicle-mounted battery discharge possible remaining capacity 2",
		"$ELEMNAME_OF_THE_VEHICLE_MOUNTED_BATTERY_DISCHARGE_POSSIBLE_REMAINING_CAPACITY_2": "Of the vehicle-mounted battery discharge possible remaining capacity 2",
		"$EPCNAME_DISCHARGE_THE_REMAINING_CAPACITY_3_OF_THE_VEHICLE_MOUNTED_BATTERY": "Discharge the remaining capacity 3 of the vehicle-mounted battery",
		"$ELEMNAME_DISCHARGE_THE_REMAINING_CAPACITY_3_OF_THE_VEHICLE_MOUNTED_BATTERY": "Discharge the remaining capacity 3 of the vehicle-mounted battery",
		"$EPCNAME_RATED_CHARGING_CAPABILITY": "Rated charging capability",
		"$ELEMNAME_RATED_CHARGING_CAPABILITY": "Rated charging capability",
		"$EPCNAME_RATED_DISCHARGE_CAPACITY": "Rated discharge capacity",
		"$ELEMNAME_RATED_DISCHARGE_CAPACITY": "Rated discharge capacity",
		"$EPCNAME_VEHICLE_CONNECTION_AND_CHARGING_AND_DISCHARGING_PROPRIETY_STATE": "Vehicle connection and charging and discharging propriety state",
		"$ELEMNAME_VEHICLE_CONNECTION_AND_CHARGING_AND_DISCHARGING_PROPRIETY_STATE": "Vehicle connection and charging and discharging propriety state",
		"$EPCNAME_CHARGE_DISCHARGE_UNIT_TYPE": "Charge-discharge unit type",
		"$ELEMNAME_CHARGE_DISCHARGE_UNIT_TYPE": "Charge-discharge unit type",
		"$EPCNAME_VEHICLE_CONNECTION_CONFIRMATION": "Vehicle connection confirmation",
		"$ELEMNAME_VEHICLE_CONNECTION_CONFIRMATION": "Vehicle connection confirmation",
		"$EPCNAME_USE_OF_A_VEHICLE_MOUNTED_BATTERY_CAPACITY_VALUE_OF_1": "Use of a vehicle-mounted battery capacity value of 1",
		"$ELEMNAME_USE_OF_A_VEHICLE_MOUNTED_BATTERY_CAPACITY_VALUE_OF_1": "Use of a vehicle-mounted battery capacity value of 1",
		"$EPCNAME_USE_OF_A_VEHICLE_MOUNTED_BATTERY_CAPACITY_VALUE_OF_2": "Use of a vehicle-mounted battery capacity value of 2",
		"$ELEMNAME_USE_OF_A_VEHICLE_MOUNTED_BATTERY_CAPACITY_VALUE_OF_2": "Use of a vehicle-mounted battery capacity value of 2",
		"$EPCNAME_THE_REMAINING_BATTERY_CAPACITY_OF_THE_VEHICLE_MOUNTED_BATTERY_1": "The remaining battery capacity of the vehicle-mounted battery 1",
		"$ELEMNAME_THE_REMAINING_BATTERY_CAPACITY_OF_THE_VEHICLE_MOUNTED_BATTERY_1": "The remaining battery capacity of the vehicle-mounted battery 1",
		"$EPCNAME_BATTERY_OF_A_VEHICLE_MOUNTED_BATTERY_REMAINING_CAPACITY_2": "Battery of a vehicle-mounted battery remaining capacity 2",
		"$ELEMNAME_BATTERY_OF_A_VEHICLE_MOUNTED_BATTERY_REMAINING_CAPACITY_2": "Battery of a vehicle-mounted battery remaining capacity 2",
		"$EPCNAME_THE_REMAINING_BATTERY_CAPACITY_3_OF_THE_VEHICLE_MOUNTED_BATTERY": "The remaining battery capacity 3 of the vehicle-mounted battery",
		"$ELEMNAME_THE_REMAINING_BATTERY_CAPACITY_3_OF_THE_VEHICLE_MOUNTED_BATTERY": "The remaining battery capacity 3 of the vehicle-mounted battery",
		"$OBJNAME_027F": "Engine cogeneration",
		"$OBJNAME_0280": "The power meter",
		"$EPCNAME_INTEGRAL_POWER_CONSUMPTION_UNIT": "Integral power consumption unit (forward, reverse direction measurement value)",
		"$ELEMNAME_INTEGRAL_POWER_CONSUMPTION_UNIT": "Integral power consumption unit (forward, reverse direction measurement value)",
		"$EPCNAME_INTEGRAL_POWER_CONSUMPTION_MEASUREMENT_VALUE_HISTORY_1": "Integral power consumption measurement value history 1 (reverse direction measurement value)",
		"$ELEMNAME_INTEGRAL_POWER_CONSUMPTION_MEASUREMENT_VALUE_HISTORY_1": "Integral power consumption measurement value history 1",
		"$OBJNAME_0281": "Water flow meter",
		"$EPCNAME_WATER_FLOW_CLASSIFICATION": "Water flow classification",
		"$ELEMNAME_WATER_FLOW_CLASSIFICATION": "Water flow classification",
		"$EPCNAME_OWNER_CLASSIFICATION": "Owner classification",
		"$ELEMNAME_OWNER_CLASSIFICATION": "Owner classification",
		"$EPCNAME_INTEGRATED_WATER_FLOW_RATE_MEASUREMENT_VALUE": "Integrated water flow rate measurement value",
		"$ELEMNAME_INTEGRATED_WATER_FLOW_RATE_MEASUREMENT_VALUE": "Integrated water flow rate measurement value",
		"$EPCNAME_INTEGRATED_WATER_FLOW_RATE_MEASUREMENT_VALUE_UNIT": "Integrated water flow rate measurement value Unit",
		"$ELEMNAME_INTEGRATED_WATER_FLOW_RATE_MEASUREMENT_VALUE_UNIT": "Integrated water flow rate measurement value Unit",
		"$EPCNAME_INTEGRATED_WATER_FLOW_RATE_MEASUREMENT_VALUE_HISTORY": "Integrated water flow rate measurement value history",
		"$ELEMNAME_INTEGRATED_WATER_FLOW_RATE_MEASUREMENT_VALUE_HISTORY": "Integrated water flow rate measurement value history",
		"$EPCNAME_METER_READING_DATA_ANOMALY_DETECTION_STATE": "Meter reading data anomaly detection state",
		"$ELEMNAME_METER_READING_DATA_ANOMALY_DETECTION_STATE": "Meter reading data anomaly detection state",
		"$EPCNAME_SECURITY_DATA_INFORMATION": "Security data information",
		"$ELEMNAME_SECURITY_DATA_INFORMATION": "Security data information",
		"$EPCNAME_ID_NUMBER_SETTING": "ID number setting",
		"$ELEMNAME_ID_NUMBER_SETTING": "ID number setting",
		"$EPCNAME_TEST_MATURITY_INFORMATION": "Test maturity information",
		"$ELEMNAME_TEST_MATURITY_INFORMATION": "Test maturity information",
		"$OBJNAME_0282": "Gas meter",
		"$EPCDOC_0282_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0282_E0": "This property indicates integral gas consumption in units of 0.001 m3.\n\n0x0.0x3B9AC9FF (0.999999,999m3)\n\nName : Integral gas consumption measurement value\nEPC : 0xE0\nData Type : unsigned long\nData Size(Byte) : 4 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$EPCNAME_INTEGRATED_GAS_CONSUMPTION_MEASUREMENT_VALUE_HISTORY": "Integrated gas consumption measurement value history",
		"$EPCDOC_0282_E2": "This property indicates integral gas consumption measurement result log for past 24 hours as data in 30-minute segments.\n\n0x0.0x3B9AC9FF (0.999999,999m3)\n\nName : Integral gas consumption measurement log\nEPC : 0xE2\nData Type : unsigned long x 48\nData Size(Byte) : 192 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_INTEGRATED_GAS_CONSUMPTION_MEASUREMENT_VALUE_HISTORY": "Integrated gas consumption measurement value history",
		"$OBJNAME_0283": "LP gas meters",
		"$EPCDOC_0283_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_SUPPLY_PRESSURE_DATA_MAXIMUM_VALUE": "Supply pressure data maximum value",
		"$EPCDOC_0283_D0": "This property indicates maximum value of supply pressure data in units of 0.01 kPa.\n\n0x0000.0xFFFD (0.655.33) (0.655.33 kPa)\n\nName : Maximum value of supply pressure data\nEPC : 0xD0\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_SUPPLY_PRESSURE_DATA_MAXIMUM_VALUE": "Supply pressure data maximum value",
		"$EPCNAME_SUPPLY_PRESSURE_DATA_MINIMUM_VALUE": "Supply pressure data minimum value",
		"$EPCDOC_0283_D1": "This property indicates minimum value of supply pressure data in units of 0.01 kPa.\n\n0x0000.0xFFFD (0.655.33) (0.655.33 kPa)\n\nName : Minimum value of supply pressure data\nEPC : 0xD1\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_SUPPLY_PRESSURE_DATA_MINIMUM_VALUE": "Supply pressure data minimum value",
		"$EPCNAME_SUPPLY_PRESSURE_DATA_CURRENT_VALUE": "Supply pressure data current value",
		"$EPCDOC_0283_D2": "This property indicates current value of supply pressure data in units of 0.01 kPa.\n\n0x0000.0xFFFD (0.655.33) (0.655.33 kPa)\n\nName : Current value of supply pressure data\nEPC : 0xD2\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_SUPPLY_PRESSURE_DATA_CURRENT_VALUE": "Supply pressure data current value",
		"$EPCNAME_OCCLUSION_PRESSURE_DATA_MAXIMUM_VALUE": "Occlusion pressure data maximum value",
		"$EPCDOC_0283_D3": "This property indicates minimum value of supply pressure data in units of 0.01 kPa.\n\n0x0000.0xFFFD (0.655.33) (0.655.33 kPa)\n\nName : Maximum value of block pressure data\nEPC : 0xD3\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_OCCLUSION_PRESSURE_DATA_MAXIMUM_VALUE": "Occlusion pressure data maximum value",
		"$EPCNAME_OCCLUSION_PRESSURE_DATA_MINIMUM_VALUE": "Occlusion pressure data minimum value",
		"$EPCDOC_0283_D4": "This property indicates minimum value of supply pressure data in units of 0.01 kPa.\n\n0x0000.0xFFFD (0.655.33) (0.655.33 kPa)\n\nName : Minimum value of block pressure data\nEPC : 0xD4\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_OCCLUSION_PRESSURE_DATA_MINIMUM_VALUE": "Occlusion pressure data minimum value",
		"$EPCNAME_OCCLUSION_PRESSURE_DATA_CURRENT_VALUE": "Occlusion pressure data current value",
		"$EPCDOC_0283_D5": "This property indicates current value of block pressure data in units of 0.01 kPa.\n\n0x0000.0xFFFD (0.655.33) (0.655.33 kPa)\n\nName : Current value of block pressure data\nEPC : 0xD5\nData Type : unsigned short\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_OCCLUSION_PRESSURE_DATA_CURRENT_VALUE": "Occlusion pressure data current value",
		"$EPCNAME_OCCLUSION_PRESSURE_AND_SUPPLY_PRESSURE_ABNORMALITY_DATE_INFORMATION_ON_THE_NUMBER_OF_TIMES": "Occlusion pressure and supply pressure abnormality date information on the number of times",
		"$EPCDOC_0283_D6": "This property indicates number of days on which block pressure/supply pressure errors occurred in 1 byte each.\n\nNumber of block pressure error days: Number of supply pressure error days: Number of block pressure error times: Number of supply pressure error times\n\nName : Number of block pressure/supply pressure error days:time\nEPC : 0xD6\nData Type : unsigned char x 4\nData Size(Byte) : 4 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_OCCLUSION_PRESSURE_ABNORMAL_NUMBER_OF_DAYS___SUPPLY_PRESSURE_ABNORMAL_NUMBER_OF_DAYS": "Occlusion pressure abnormal number of days / supply pressure abnormal number of days",
		"$ELEMNAME_OCCLUSION_PRESSURE_ABNORMAL_NUMBER_OF_TIMES:_SUPPLY_PRESSURE_ABNORMAL_NUMBER_OF_TIMES": "Occlusion pressure abnormal number of times: supply pressure abnormal number of times",
		"$EPCNAME_TEST_CALL_SETTING": "Test call setting",
		"$EPCDOC_0283_D7": "Performs test call operation setup.\n\nTest call operation ON 0x41 Test call operation OFF 0x42\n\nName : Test call setting\nEPC : 0xD7\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_TEST_CALL_SETTING": "Test call setting",
		"$EPCNAME_METER_READING_DATA_ACCUMULATED_GAS_CONSUMPTION_MEASUREMENT_VALUE_1": "Meter reading data accumulated gas consumption measurement value 1",
		"$EPCDOC_0283_E0": "This property indicates integral gas consumption in units of 0.0001 m3.\n\n0.0x005F5E0FF (0.9999,9999 m3)\n\nName : Integral gas consumption of metering data 1\nEPC : 0xE0\nData Type : unsigned long\nData Size(Byte) : 4 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_METER_READING_DATA_ACCUMULATED_GAS_CONSUMPTION_MEASUREMENT_VALUE_1": "Meter reading data accumulated gas consumption measurement value 1",
		"$EPCNAME_METER_READING_DATA_ACCUMULATED_GAS_CONSUMPTION_MEASUREMENT_VALUE_2": "Meter reading data accumulated gas consumption measurement value 2",
		"$EPCDOC_0283_E1": "This property indicates integral gas consumption in units of 0.001 m3.\n\n0.0x005F5E0FF (0.99999,999 m3)\n\nName : Integral gas consumption of metering data 2\nEPC : 0xE1\nData Type : unsigned long\nData Size(Byte) : 4 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_METER_READING_DATA_ACCUMULATED_GAS_CONSUMPTION_MEASUREMENT_VALUE_2": "Meter reading data accumulated gas consumption measurement value 2",
		"$EPCDOC_0283_E2": "This property indicates status where meter detected metering data error.\n\nError detection status found = 0x41 Error detection status not found = 0x42\n\nName : Error detection statusof metering data\nEPC : 0xE2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n\nAnnouncement at status change\n",
		"$EPCNAME_SECURITY_DATA_INFORMATION_1": "Security data information 1",
		"$EPCDOC_0283_E3": "This property indicates security data to define security information on meter operation by bit allocation.\n\n0.0xFFFFFFFF\n\nName : Security data 1\nEPC : 0xE3\nData Type : unsigned long\nData Size(Byte) : 4 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_SECURITY_DATA_INFORMATION_1": "Security data information 1",
		"$EPCNAME_SECURITY_DATA_INFORMATION_2": "Security data information 2",
		"$EPCDOC_0283_E4": "This property indicates security data to define security information on meter operation by bit allocation.\n\n0.0xFFFFFFFF\n\nName : Security data 2\nEPC : 0xE4\nData Type : unsigned long\nData Size(Byte) : 4 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_SECURITY_DATA_INFORMATION_2": "Security data information 2",
		"$EPCNAME_CENTER_VALVE_SHUT_OFF_STATE": "Center valve shut-off state",
		"$EPCDOC_0283_E5": "This property indicates status where gas shut-off valve of meter has been shut off by center.\n\nCenter valve shut-off status found = 0x41 Center valve shut-off status not found = 0x42\n\nName : Center valve shut-off status\nEPC : 0xE5\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n\nAnnouncement at status change\n",
		"$ELEMNAME_CENTER_VALVE_SHUT_OFF_STATE": "Center valve shut-off state",
		"$EPCNAME_CENTER_VALVE_SHUT_OFF_RETURN_PERMIT_STATE": "Center valve shut-off return permit state",
		"$EPCDOC_0283_E6": "This property indicates status where gas shut-off valve of meter has been shut off by center.\n\nCenter valve shut-off reset enable = 0x41 Center valve shut-off reset not enable = 0x42\n\nName : Center valve shut-off recovery permission setting status\nEPC : 0xE6\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_CENTER_VALVE_SHUT_OFF_RETURN_PERMIT_STATE": "Center valve shut-off return permit state",
		"$EPCNAME_EMERGENCY_VALVE_SHUT_OFF_STATE": "Emergency valve shut-off state",
		"$EPCDOC_0283_E7": "This property indicates status where gas shut-off valve of meter has been shut off.\n\nEmergency valve shut-off status found = 0x41 Emergency valve shut-off status not found = 0x42\n\nName : Emergency valve shut-off status\nEPC : 0xE7\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_EMERGENCY_VALVE_SHUT_OFF_STATE": "Emergency valve shut-off state",
		"$EPCNAME_SHUT_OFF_VALVE_OPENING_AND_CLOSING_STATE": "Shut-off valve opening and closing state",
		"$EPCDOC_0283_E8": "This property indicates open/close status of shut-off valve.\n\nShut-off valve open status = 0x41 Shut-off valve close status = 0x42\n\nName : Shut-off valve open/close status\nEPC : 0xE8\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_SHUT_OFF_VALVE_OPENING_AND_CLOSING_STATE": "Shut-off valve opening and closing state",
		"$EPCNAME_REMAINING_MANAGEMENT_WARNING_LEVEL": "Remaining management warning level",
		"$EPCDOC_0283_E9": "This property indicates status as warning where residual volume is very small.\n\nResidual volume control warning level 1 0x31 Residual volume control warning level 2 0x32 Residual volume control warning level 3 0x33 No residual volume control warning 0x42\n\nName : Residual volume control warning\nEPC : 0xE9\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n\nAnnouncement at status change\n",
		"$ELEMNAME_REMAINING_MANAGEMENT_WARNING_LEVEL": "Remaining management warning level",
		"$EPCNAME_REMAINING_MANAGEMENT_WARNING_LEVEL_SET_VALUE_1": "Remaining management warning level set value 1",
		"$EPCDOC_0283_EA": "Sets �gSmall residual volume detection level 1�h.\n\n0.0xFFFFFF (0.16,777,215)\n\nName : Set value of residual volume control warning level 1\nEPC : 0xEA\nData Type : unsigned char x 3\nData Size(Byte) : 3 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_REMAINING_MANAGEMENT_WARNING_LEVEL_SET_VALUE_1": "Remaining management warning level set value 1",
		"$EPCNAME_REMAINING_MANAGEMENT_WARNING_LEVEL_SETTING_2": "Remaining management warning level setting 2",
		"$EPCDOC_0283_EB": "Sets �gSmall residual volume detection level 2�h.\n\n0.0xFFFFFF (0.16,777,215)\n\nName : Set value of residual volume control warning level 2\nEPC : 0xEB\nData Type : unsigned char x 3\nData Size(Byte) : 3 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_REMAINING_MANAGEMENT_WARNING_LEVEL_SETTING_2": "Remaining management warning level setting 2",
		"$EPCNAME_REMAINING_MANAGEMENT_WARNING_LEVEL_SETTING_3": "Remaining management warning level setting 3",
		"$EPCDOC_0283_EC": "Sets �gSmall residual volume detection level 3�h.\n\n0.0xFFFFFF (0.16,777,215)\n\nName : Set value of residual volume control warning level 3\nEPC : 0xEC\nData Type : unsigned char x3\nData Size(Byte) : 3 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_REMAINING_MANAGEMENT_WARNING_LEVEL_SETTING_3": "Remaining management warning level setting 3",
		"$EPCNAME_SMALL_LEAKAGE_TIMER_VALUE": "Small leakage timer value (no pressure rise)",
		"$EPCDOC_0283_ED": "This property indicates number of days on which gas flow rate is continued.\n\n0.0xFD (0.253) (0 to 253 days)\n\nName : Slight leak timer value (gas flow rate continuation)\nEPC : 0xED\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_SMALL_LEAKAGE_TIMER_VALUE": "Small leakage timer value (no pressure rise)",
		"$EPCDOC_0283_EE": "This property indicates number of days on which gas leak monitoring is performed without gas pressure increase.\n\n0.0xFD (0.253) (0 to 253 days)\n\nName : Slight leak timer value (without pressure increase)\nEPC : 0xEE\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCNAME_BLOCKING_REASON_HISTORY_INFORMATION": "Blocking reason history information",
		"$EPCDOC_0283_EF": "Defines log of reasons for gas shut-off by shut-off valve in 1 byte each with bits assigned. Shows the last three logs. Log 3: log 2: log 1\n\n0xFF: 0xFF: 0xFF\n\nName : Shut-off reason log\nEPC : 0xEF\nData Type : unsigned char x 3\nData Size(Byte) : 3 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_HISTORY_3___HISTORY_2___HISTORY_1": "History 3 / history 2 / history 1",
		"$OBJNAME_0287": "Panelboard Metering",
		"$EPCNAME_CHIEF_RATED_CAPACITY": "Chief rated capacity",
		"$ELEMNAME_CHIEF_RATED_CAPACITY": "Chief rated capacity",
		"$EPCNAME_MEASURING_THE_NUMBER_OF_CHANNELS": "Measuring the number of channels (two-way)",
		"$ELEMNAME_MEASURING_THE_NUMBER_OF_CHANNELS": "Measuring the number of channels (two-way)",
		"$EPCNAME_INTEGRAL_POWER_CONSUMPTION_MEASUREMENT_CHANNEL_RANGE_SPECIFICATION": "Integral power consumption measurement channel range specification (two-way)",
		"$ELEMNAME_ACQUISITION_START_CHANNEL": "Acquisition start channel",
		"$ELEMNAME_RANGE": "range",
		"$EPCNAME_INTEGRAL_POWER_CONSUMPTION_MEASUREMENT_VALUE_LIST": "Integral power consumption measurement value list (two-way)",
		"$ELEMNAME_ELECTRIC_ENERGY": "Electric energy",
		"$EPCNAME_INSTANTANEOUS_CURRENT_MEASUREMENT_CHANNEL_RANGE_SPECIFICATION": "Instantaneous current measurement channel range specification (two-way)",
		"$EPCNAME_INSTANTANEOUS_CURRENT_MEASUREMENT_VALUE_LIST": "Instantaneous current measurement value list (two-way)",
		"$ELEMNAME_CURRENT": "Current (R-phase / T phase)",
		"$EPCNAME_INSTANTANEOUS_POWER_MEASUREMENT_CHANNEL_RANGE_SPECIFICATION": "Instantaneous power measurement channel range specification (two-way)",
		"$EPCNAME_INSTANTANEOUS_POWER_MEASUREMENT_VALUE_LIST": "Instantaneous power measurement value list (two-way)",
		"$ELEMNAME_POWER": "Power",
		"$ELEMNAME_THE_AMOUNT_OF_POWER": "The amount of power (forward / reverse)",
		"$EPCNAME_INTEGRAL_POWER_CONSUMPTION_MEASUREMENT_VALUE": "Integral power consumption measurement value (reverse direction measurement value)",
		"$ELEMNAME_INTEGRAL_POWER_CONSUMPTION_MEASUREMENT_VALUE": "Integral power consumption measurement value (reverse direction measurement value)",
		"$EPCNAME_INTEGRAL_POWER_CONSUMPTION_MEASUREMENT_VALUE_HISTORY": "Integral power consumption measurement value history (reverse)",
		"$ELEMNAME_INTEGRAL_POWER_CONSUMPTION_MEASUREMENT_VALUE_HISTORY": "Integral power consumption measurement value history (reverse)",
		"$EPCNAME_ACCUMULATED_HISTORY_COLLECTION_DATE": "Accumulated history collection date",
		"$ELEMNAME_ACCUMULATED_HISTORY_COLLECTION_DATE": "Accumulated history collection date",
		"$EPCNAME_INSTANTANEOUS_POWER_MEASUREMENT_VALUE": "Instantaneous power measurement value",
		"$ELEMNAME_INSTANTANEOUS_POWER_MEASUREMENT_VALUE": "Instantaneous power measurement value",
		"$EPCNAME_INSTANTANEOUS_CURRENT_MEASUREMENT_VALUE": "Instantaneous current measurement value",
		"$EPCNAME_INSTANTANEOUS_VOLTAGE_MEASUREMENTS": "Instantaneous voltage measurements",
		"$ELEMNAME_VOLTAGE": "Voltage (RS (N) / S (N) -T)",
		"$EPCNAME_MEASUREMENT_CHANNEL_1": "Measurement channel 1",
		"$EPCNAME_MEASUREMENT_CHANNEL_2": "Measurement channel 2",
		"$EPCNAME_MEASUREMENT_CHANNEL_3": "Measurement channel 3",
		"$EPCNAME_MEASUREMENT_CHANNEL_4": "Measurement Channel 4",
		"$EPCNAME_MEASUREMENT_CHANNEL_5": "Measurement Channel 5",
		"$EPCNAME_MEASUREMENT_CHANNEL_6": "Measurement channel 6",
		"$EPCNAME_MEASUREMENT_CHANNEL_7": "Measurement channel 7",
		"$EPCNAME_MEASUREMENT_CHANNEL_8": "Measurement channel 8",
		"$EPCNAME_MEASUREMENT_CHANNEL_9": "Measurement channel 9",
		"$EPCNAME_MEASUREMENT_CHANNEL_10": "Measurement channel 10",
		"$EPCNAME_MEASUREMENT_CHANNEL_11": "Measurement channel 11",
		"$EPCNAME_MEASUREMENT_CHANNEL_12": "Measurement channel 12",
		"$EPCNAME_MEASUREMENT_CHANNEL_13": "Measurement channel 13",
		"$EPCNAME_MEASUREMENT_CHANNEL_14": "Measurement channel 14",
		"$EPCNAME_MEASUREMENT_CHANNEL_15": "Measurement channel 15",
		"$EPCNAME_MEASUREMENT_CHANNEL_16": "Measurement channel 16",
		"$EPCNAME_MEASUREMENT_CHANNEL_17": "Measurement channel 17",
		"$EPCNAME_MEASUREMENT_CHANNEL_18": "Measurement channel 18",
		"$EPCNAME_MEASUREMENT_CHANNEL_19": "Measurement channel 19",
		"$EPCNAME_MEASUREMENT_CHANNEL_20": "Measurement channel 20",
		"$EPCNAME_MEASUREMENT_CHANNEL_21": "Measurement channel 21",
		"$EPCNAME_MEASUREMENT_CHANNEL_22": "Measurement channel 22",
		"$EPCNAME_MEASUREMENT_CHANNEL_23": "Measurement channel 23",
		"$EPCNAME_MEASUREMENT_CHANNEL_24": "Measurement channel 24",
		"$EPCNAME_MEASUREMENT_CHANNEL_25": "Measurement channel 25",
		"$EPCNAME_MEASUREMENT_CHANNEL_26": "Measurement channel 26",
		"$EPCNAME_MEASUREMENT_CHANNEL_27": "Measurement channel 27",
		"$EPCNAME_MEASUREMENT_CHANNEL_28": "Measurement channel 28",
		"$EPCNAME_MEASUREMENT_CHANNEL_29": "Measurement channel 29",
		"$EPCNAME_MEASUREMENT_CHANNEL_30": "Measurement channel 30",
		"$EPCNAME_MEASUREMENT_CHANNEL_31": "Measurement channel 31",
		"$EPCNAME_MEASUREMENT_CHANNEL_32": "Measurement channel 32",
		"$OBJNAME_0288": "Low voltage smart power meter",
		"$EPCDOC_0288_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_COEFFICIENT": "coefficient",
		"$EPCDOC_0288_D3": "This property indicates the composite transformation ratio using a 6-digit decimal notation number (initial value = 1).\n\n0x00000000-0x000F423F (000000-999999)\n\nName : Composite transformation ratio\nEPC : 0xD3\nData Type : unsigned long\nData Size(Byte) : 4 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_COEFFICIENT": "coefficient",
		"$EPCNAME_THE_ACCUMULATED_AMOUNT_OF_POWER_THE_NUMBER_OF_SIGNIFICANT_DIGITS": "The accumulated amount of power the number of significant digits",
		"$ELEMNAME_THE_ACCUMULATED_AMOUNT_OF_POWER_THE_NUMBER_OF_SIGNIFICANT_DIGITS": "The accumulated amount of power the number of significant digits",
		"$EPCDOC_0288_E0": "This property indicates the measured cumulative amount of electric energy using an 8-digit decimal notation number.\n\n0x00000000-0x05F5E0FF (0-99,999,999)\n\nName : Measured cumulative amount of electric energy (normal direction)\nEPC : 0xE0\nData Type : unsigned long\nData Size(Byte) : 4 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$EPCDOC_0288_E1": "This property indicates the unit (multiplying factor) used for the measured cumulative amount of electric energy and the historical data of measured cumulative amounts of electric energy.\n\n0x00: 1kWh 0x01: 0.1kWh 0x02: 0.01kWh 0x03: 0.001kWh (Initial value) 0x04: 0.0001kWh 0x0A: 10kWh 0x0B: 100kWh 0x0C: 1000kWh 0x0D: 10000kWh\n\nName : Unit for cumulative amounts of electric energy (normal and reverse directions)\nEPC : 0xE1\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$EPCDOC_0288_E2": "This property indicates the day for which the historical data of measured cumulative amounts of electric energy is to be retrieved and the historical data of measured cumulative amounts of electric energy (8 digits), which consists of 48 pieces of half-hourly data for the preceding 24 hours.\n\n0x0000-0x0063: 0x00000000-0x05F5E0FF (0-99) : (0-99,999,999)\n\nName : Historical data of measured cumulative amounts of electric energy (normal direction)\nEPC : 0xE2\nData Type : unsigned short + unsigned long x48\nData Size(Byte) : 194 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCDOC_0288_E3": "This property indicates the measured cumulative amount of electric energy using an 8-digit decimal notation number.\n\n0x00000000-0x05F5E0FF (0-99,999,999)\n\nName : Measured cumulative amount of electric energy (reverse direction)\nEPC : 0xE3\nData Type : unsigned long\nData Size(Byte) : 4 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCDOC_0288_E4": "This property indicates the day for which the historical data of measured cumulative amounts of electric energy is to be retrieved and the historical data of measured cumulative amounts of electric energy (8 digits), which consists of 48 pieces of half-hourly data for the preceding 24 hours.\n\n0x0000-0x0063: 0x00000000-0x05F5E0FF (0-99) : (0-99,999,999)\n\nName : Historical data of measured cumulative amounts of electric energy (reverse direction)\nEPC : 0xE4\nData Type : unsigned short �{ unsigned long �~48\nData Size(Byte) : 194 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCNAME_ACCUMULATED_HISTORY_COLLECTION_DAY_1": "Accumulated history collection day 1",
		"$EPCDOC_0288_E5": "This property indicates the day for which the historical data of measured cumulative amounts of electric energy (which consists of 48 pieces of half-hourly data for the preceding 24 hours) is to be retrieved.\n\n0x00-0x63 ( 0-99) 0: current day 1  . 99: previous day . day that precedes the current day by 99 days\n\nName : Day for which the historical data of measured cumulative amounts of electric energy is to be retrieved\nEPC : 0xE5\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_ACCUMULATED_HISTORY_COLLECTION_DAY_1": "Accumulated history collection day 1",
		"$EPCDOC_0288_E7": "This property indicates the measured effective instantaneous amount of electric energy in watts.\n\n0x80000001-0x7FFFFFFD (-2,147,483,647- 2,147,483,645)\n\nName : Measured instantaneous amount of electric energy\nEPC : 0xE7\nData Type : signed long\nData Size(Byte) : 4 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCDOC_0288_E8": "This property indicates the measured effective instantaneous R and T phase currents in amperes. In the case of a single-phase, two-wire system, 0x7FFE shall be used for the T phase.\n\n0x8001-0x7FFD�iR phase�j : 0x8001-0x7FFD�iT phase�j (-3,276.7-3,276.5): (-3,276.7-3,276.5)\n\nName : Measured instantaneous currents\nEPC : 0xE8\nData Type : signed short �~2\nData Size(Byte) : 4 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_R_PHASE___T_PHASE": "R-phase / T phase",
		"$EPCNAME_ORDINARY_INTEGRAL_POWER_CONSUMPTION_MEASUREMENT_VALUE": "Ordinary integral power consumption measurement value (reverse direction measurement value)",
		"$ELEMNAME_DATE": "Date",
		"$ELEMNAME_TIME": "Time",
		"$EPCNAME_INTEGRAL_POWER_CONSUMPTION_MEASUREMENT_VALUE_HISTORY_2": "Integral power consumption measurement value history 2 (forward, reverse direction measurement value)",
		"$ELEMNAME_TIME_&AMP;_FRAME": "Time &amp; Frame",
		"$EPCNAME_ACCUMULATED_HISTORY_COLLECTION_DAY_2": "Accumulated history collection day 2",
		"$OBJNAME_0289": "Smart Gas Meters",
		"$EPCDOC_0289_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_INTEGRATED_GAS_CONSUMPTION_MEASUREMENT_VALUE_INFORMATION_WITH_DATE_AND_TIME": "Integrated gas consumption measurement value information with date and time",
		"$ELEMNAME_GAS_CONSUMPTION": "Gas consumption",
		"$EPCNAME_GAS_CONSUMPTION_HISTORY_INFORMATION": "Gas consumption history information",
		"$ELEMNAME_HISTORY_DATA": "History data",
		"$ELEMNAME_START_TIME_OF_CONSUMPTION": "Start time of consumption",
		"$ELEMNAME_INTEGRATION_TIME_INTERVAL": "Integration time interval",
		"$EPCNAME_GAS_DIVISION_SETTING": "Gas division setting",
		"$EPCDOC_0289_E0": "This property indicates the type of the gas meter.\n\n0x30�Fcity gas 0x31�FLP gas 0x32�Fnatural gas 0x33�Fothers\n\nName : Gas meter classification\nEPC : 0xE0\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_GAS_DIVISION_SETTING": "Gas division setting",
		"$EPCNAME_OWNER_CLASSIFICATION_SETTING": "Owner classification setting",
		"$EPCDOC_0289_E1": "This property indicates the type of the owner of the meter.\n\n0x30�Fnot specified 0x31�Fcity gas 0x32�FLP gas 0x33�Fprivate-sector company 0x34�Findividual\n\nName : Owner classification\nEPC : 0xE1\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_OWNER_CLASSIFICATION_SETTING": "Owner classification setting",
		"$EPCDOC_0289_E2": "This property indicates the measured cumulative gas consumption in m3.\n\n0-0x3B9AC9FF (0-999,999,999�j\n\nName : Measured cumulative gas consumption\nEPC : 0xE2\nData Type : unsigned long\nData Size(Byte) : 4 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$EPCNAME_INTEGRATED_GAS_CONSUMPTION_MEASUREMENT_VALUE_UNIT": "Integrated gas consumption measurement value Unit",
		"$EPCDOC_0289_E3": "This property indicates the unit (multiplying factor) for the measured cumulative gas consumption and the historical data of measured cumulative gas consumptions.\n\n0x00: 1��3 0x01: 0.1��3 0x02: 0.01��3 0x03: 0.001��3�iinitial value�j 0x04: 0.0001��3 0x05: 0.00001��3 0x06: 0.000001��3\n\nName : Unit for measured cumulative gas consumptions\nEPC : 0xE3\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_INTEGRATED_GAS_CONSUMPTION_MEASUREMENT_VALUE_UNIT": "Integrated gas consumption measurement value Unit",
		"$EPCNAME_INTEGRATED_GAS_CONSUMPTION_HISTORY_INFORMATION": "Integrated gas consumption history information",
		"$EPCDOC_0289_E4": "This property indicates the day for which the historical data of measured cumulative gas consumptions is to be retrieved and the historical data of measured cumulative gas consumptions, which consists of 48 pieces of half-hourly data for the preceding 24 hours.\n\n0x0000-0x0063: 0x0-0x3B9AC9FF (0-99) : (0-999,999.999�j\n\nName : Historical data of measured cumulative gas consumptions\nEPC : 0xE4\nData Type : unsigned short �{ unsigned long �~48\nData Size(Byte) : 194 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_COLLECTION_DATE": "Collection date",
		"$ELEMNAME_HISTORY": "History",
		"$EPCNAME_INTEGRATED_GAS_CONSUMPTION_HISTORY_COLLECTION_DATE_SET": "Integrated gas consumption history collection date set",
		"$EPCDOC_0289_E5": "This property indicates the day for which the historical data of measured cumulative gas consumptions (which consists of 48 pieces of half-hourly data for the preceding 24 hours) is to be retrieved.\n\n0x00-0x63 ( 0-99) 0: current day 1 - 99: previous day - day that precedes the current day by 99 days\n\nName : Day for which the historical data of measured cumulative gas consumptions is to be retrieved\nEPC : 0xE5\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_INTEGRATED_GAS_CONSUMPTION_HISTORY_COLLECTION_DATE_SET": "Integrated gas consumption history collection date set",
		"$EPCDOC_0289_E6": "This property indicates whether the meter has detected an abnormal value in the metering data.\n\nAbnormal value detected: 0x41 No abnormal value detected: 0x42\n\nName : Detection of abnormal value in metering data\nEPC : 0xE6\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n\nAnnouncement at status change\n",
		"$EPCDOC_0289_E7": "Provides security information about the abnormal states detected by the meter in the form of security data that identifies the abnormal states by means of bit assignment.\n\nFor details, refer to the explanations under (9).\n\nName : Security data information\nEPC : 0xE7\nData Type : unsigned char �~10\nData Size(Byte) : 10 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCDOC_0289_E8": "This property indicates whether the Center has closed the gas shutoff valve of the meter.\n\nCenter has closed the valve: 0x41 Center has not closed the valve: 0x42\n\nName : Valve closure by the Center\nEPC : 0xE8\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n\nAnnouncement at status change\n",
		"$EPCDOC_0289_E9": "This property indicates whether permission has been given by the Center to reopen the gas shutoff valve of the meter closed by the Center.\n\nPermission has been given by the Center to reopen the gas shutoff valve closed by the Center: 0x41 Permission to reopen the gas shutoff valve closed by the Center has not been given by the Center: 0x42\n\nName : Permission from the Center to reopen the valve closed by the Center\nEPC : 0xE9\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCDOC_0289_EA": "This property indicates whether the gas shutoff valve of the meter has been closed in response to an emergency.\n\nEmergency closure of the shutoff valve has occurred: 0x41 No emergency closure of the shutoff valve has occurred: 0x42\n\nName : Emergency closure of shutoff valve\nEPC : 0xEA\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCDOC_0289_EB": "This property indicates whether the shutoff valve is open or closed.\n\nShutoff valve open: 0x41 Shutoff valve closed: 0x42\n\nName : Shutoff valve status\nEPC : 0xEB\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCDOC_0289_EC": "This property indicates the reasons for the 3 past shutoff valve-based gas shutoffs by means of bit assignment with one byte used for each of the 3 shutoff reasons. Historical data3�FHistorical data2�FHistorical data 1\n\n0xFF: 0xFF: 0xFF\n\nName : Historical data of shutoff reasons\nEPC : 0xEC\nData Type : unsigned char �~3\nData Size(Byte) : 3 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCDOC_0289_ED": "This property indicates the ID number of the meter.\n\n000000-FFFFFF �iInitial .value .: .�g000000�h�j\n\nName : ID number setting\nEPC : 0xED\nData Type : unsigned char\nData Size(Byte) : 6 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_TEST_MATURITY_SETTING": "Test maturity setting",
		"$EPCDOC_0289_EE": "This property indicates the month and year in which the verification of the meter will expire.\n\nYYYYMM YYYY�iYear�j�CMM�iMonth�j\n\nName : Verification expiration information\nEPC : 0xEE\nData Type : unsigned char\nData Size(Byte) : 6 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_TEST_MATURITY_SETTING": "Test maturity setting",
		"$OBJNAME_028A": "High-voltage smart power meter",
		"$EPCNAME_MONTHLY_MAXIMUM_DEMAND_POWER": "Monthly maximum demand power",
		"$ELEMNAME_MONTHLY_MAXIMUM_DEMAND_POWER": "Monthly maximum demand power",
		"$EPCNAME_THE_CUMULATIVE_MAXIMUM_DEMAND_POWER": "The cumulative maximum demand power",
		"$ELEMNAME_THE_CUMULATIVE_MAXIMUM_DEMAND_POWER": "The cumulative maximum demand power",
		"$EPCNAME_ORDINARY_DEMAND_POWER": "Ordinary demand power (30-minute average power)",
		"$EPCNAME_DEMAND_POWER_NUMBER_OF_SIGNIFICANT_DIGITS": "Demand power number of significant digits",
		"$ELEMNAME_DEMAND_POWER_NUMBER_OF_SIGNIFICANT_DIGITS": "Demand power number of significant digits",
		"$EPCNAME_DEMAND_POWER_UNIT": "Demand power unit",
		"$ELEMNAME_DEMAND_POWER_UNIT": "Demand power unit",
		"$EPCNAME_DEMAND_POWER_MEASUREMENT_VALUE_HISTORY": "Demand power measurement value history",
		"$EPCNAME_THE_CUMULATIVE_MAXIMUM_DEMAND_POWER_UNIT": "The cumulative maximum demand power unit",
		"$ELEMNAME_THE_CUMULATIVE_MAXIMUM_DEMAND_POWER_UNIT": "The cumulative maximum demand power unit",
		"$EPCNAME_FORCE_MEASUREMENT_ACCUMULATED_REACTIVE_ENERGY_MEASUREMENT_VALUE": "Force measurement accumulated reactive energy (delay) measurement value",
		"$ELEMNAME_REACTIVE_ENERGY": "Reactive energy",
		"$EPCNAME_ORDINARY_FORCE_MEASURING_CUMULATIVE_REACTIVE_ENERGY_MEASUREMENT_VALUE": "Ordinary force measuring cumulative reactive energy (delay) measurement value",
		"$EPCNAME_FORCE_MEASUREMENT_ACCUMULATED_REACTIVE_ENERGY_THE_NUMBER_OF_SIGNIFICANT_DIGITS": "Force measurement accumulated reactive energy (delay) the number of significant digits",
		"$ELEMNAME_FORCE_MEASUREMENT_ACCUMULATED_REACTIVE_ENERGY_THE_NUMBER_OF_SIGNIFICANT_DIGITS": "Force measurement accumulated reactive energy (delay) the number of significant digits",
		"$EPCNAME_FORCE_MEASUREMENT_ACCUMULATED_REACTIVE_ENERGY_UNITS": "Force measurement accumulated reactive energy (delay) units",
		"$ELEMNAME_FORCE_MEASUREMENT_ACCUMULATED_REACTIVE_ENERGY_UNITS": "Force measurement accumulated reactive energy (delay) units",
		"$EPCNAME_FORCE_MEASUREMENT_ACCUMULATED_REACTIVE_ENERGY_MEASUREMENT_VALUE_HISTORY": "Force measurement accumulated reactive energy (delay) measurement value history",
		"$EPCNAME_MAGNIFICATION_OF_THE_COEFFICIENT": "Magnification of the coefficient",
		"$ELEMNAME_MAGNIFICATION_OF_THE_COEFFICIENT": "Magnification of the coefficient",
		"$EPCNAME_FIXED_DATE": "Fixed date",
		"$ELEMNAME_FIXED_DATE": "Fixed date",
		"$EPCNAME_THE_INTEGRATED_ACTIVE_POWER_AMOUNT_MEASUREMENT_VALUE": "The integrated active power amount measurement value",
		"$EPCNAME_ORDINARY_CUMULATIVE_ACTIVE_POWER_AMOUNT_MEASUREMENT_VALUE": "Ordinary cumulative active power amount measurement value",
		"$EPCNAME_FORCE_MEASUREMENT_INTEGRATED_ACTIVE_POWER_AMOUNT_MEASUREMENT_VALUE": "Force measurement integrated active power amount measurement value",
		"$EPCNAME_THE_INTEGRATED_ACTIVE_POWER_AMOUNT_THE_NUMBER_OF_SIGNIFICANT_DIGITS": "The integrated active power amount the number of significant digits",
		"$ELEMNAME_THE_INTEGRATED_ACTIVE_POWER_AMOUNT_THE_NUMBER_OF_SIGNIFICANT_DIGITS": "The integrated active power amount the number of significant digits",
		"$EPCNAME_CUMULATIVE_ACTIVE_ENERGY_UNIT": "Cumulative active energy unit",
		"$ELEMNAME_CUMULATIVE_ACTIVE_ENERGY_UNIT": "Cumulative active energy unit",
		"$EPCNAME_THE_INTEGRATED_ACTIVE_POWER_AMOUNT_MEASUREMENT_VALUE_HISTORY": "The integrated active power amount measurement value history",
		"$OBJNAME_0290": "Generic illumination",
		"$EPCDOC_0290_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0290_90": "Reservation ON/OFF\n\nReservation ON��0x41, Reservation OFF��0x42\n\nName : ON timer reservation setting\nEPC : 0x90\nData Type : unsign ed char\nData Size(Byte) : 1 Byt e\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0290_91": "Timer value HH:MM\n\n0-0x17: 0 -0x3B (=0-23):(=0 -59)\n\nName : ON timer setting\nEPC : 0x91\nData Type : unsign ed char �~2\nData Size(Byte) : 2 Byt e\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0290_94": "Reservation ON/OFF\n\nReservation ON��0x41, Reservation OFF��0x42\n\nName : OFF timer reservation setting\nEPC : 0x94\nData Type : unsign ed char\nData Size(Byte) : 1 Byt e\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0290_95": "Timer value HH:MM\n\n0-0x17: 0 -0x3B (=0-23):(=0 -59)\n\nName : OFF timer setting\nEPC : 0x95\nData Type : unsign ed char �~2\nData Size(Byte) : 2 Byt e\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_ILLUMINANCE_LEVEL_SETTING": "Illuminance level setting",
		"$EPCDOC_0290_B0": "This property indicates illuminance level in %.\n\n0x00.0x64 (0.100%)\n\nName : Illuminance level\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_ILLUMINANCE_LEVEL_SETTING": "Illuminance level setting",
		"$EPCNAME_LIGHT_COLOR_SETTING": "Light color setting",
		"$EPCDOC_0290_B1": "Used to specify the light color.\n\nincandescent lamp color��0x41, white��0x42, daylight white��0x43, daylight color��0x44\n\nName : Light color setting\nEPC : 0xB1\nData Type : unsign ed char\nData Size(Byte) : 1 Byt e\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_LIGHT_COLOR_SETTING": "Light color setting",
		"$EPCNAME_ILLUMINANCE_LEVEL_THE_NUMBER_OF_STAGES_SET": "Illuminance level the number of stages set",
		"$EPCDOC_0290_B2": "Used to specify the illuminance level in terms of steps and acquire the current setting.\n\nFrom 0x01 to the maximum specifiable illuminance level value (from dark to bright)\n\nName : Illuminance level step setting\nEPC : 0xB2\nData Type : unsign ed char\nData Size(Byte) : 1 Byt e\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_ILLUMINANCE_LEVEL_THE_NUMBER_OF_STAGES_SET": "Illuminance level the number of stages set",
		"$EPCNAME_LIGHT_COLOR_LEVEL_THE_NUMBER_OF_STAGES_SET": "Light color level the number of stages set",
		"$EPCDOC_0290_B3": "Used to specify the light color in terms of steps and acquire the current setting.\n\nFrom 0x01 to the maximum specifiable light color value (from incandescent lamp color to white)\n\nName : Light color step setting\nEPC : 0xB3\nData Type : unsign ed char\nData Size(Byte) : 1 Byt e\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_LIGHT_COLOR_LEVEL_THE_NUMBER_OF_STAGES_SET": "Light color level the number of stages set",
		"$EPCNAME_CAN_BE_SET_LEVEL_MAXIMUM_VALUE": "Can be set level maximum value",
		"$EPCDOC_0290_B4": "Used to acquire the maximum specifiable illuminance level value and the maximum specifiable light color value.\n\nFirst byte: illuminance Second byte: light color 0x01-0xFF(Step 1 -Step 255) 0x00(when the function is not implemented)\n\nName : Maximum specifiable values\nEPC : 0xB4\nData Type : unsign ed char �~2\nData Size(Byte) : 2 Byt e\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_ILLUMINATION___LIGHT_COLOR": "Illumination / light color",
		"$EPCNAME_NIGHTLIGHT_CAN_BE_SET_LEVEL_MAXIMUM_VALUE": "Nightlight can be set level maximum value",
		"$EPCNAME_LIGHTING_MODE_SETTING": "Lighting mode setting",
		"$ELEMNAME_LIGHTING_MODE_SETTING": "Lighting mode setting",
		"$EPCNAME_ILLUMINANCE_LEVEL_SET_DURING_NORMAL_LAMP_MODE": "Illuminance level set during normal lamp mode",
		"$ELEMNAME_ILLUMINANCE_LEVEL_SET_DURING_NORMAL_LAMP_MODE": "Illuminance level set during normal lamp mode",
		"$EPCNAME_ILLUMINANCE_LEVEL_THE_NUMBER_OF_STAGES_SET_IN_THE_NORMAL_LIGHT_MODE": "Illuminance level the number of stages set in the normal light mode",
		"$ELEMNAME_ILLUMINANCE_LEVEL_THE_NUMBER_OF_STAGES_SET_IN_THE_NORMAL_LIGHT_MODE": "Illuminance level the number of stages set in the normal light mode",
		"$EPCNAME_NIGHT_LIGHT_MODE_ILLUMINATION_LEVEL_SETTING": "Night-light mode illumination level setting",
		"$ELEMNAME_NIGHT_LIGHT_MODE_ILLUMINATION_LEVEL_SETTING": "Night-light mode illumination level setting",
		"$EPCNAME_NIGHT_LIGHT_MODE_ILLUMINATION_LEVEL_THE_NUMBER_OF_STAGES_SET": "Night-light mode illumination level the number of stages set",
		"$ELEMNAME_NIGHT_LIGHT_MODE_ILLUMINATION_LEVEL_THE_NUMBER_OF_STAGES_SET": "Night-light mode illumination level the number of stages set",
		"$EPCNAME_LIGHT_COLOR_SETTING_DURING_NORMAL_LAMP_MODE": "Light color setting during normal lamp mode",
		"$ELEMNAME_LIGHT_COLOR_SETTING_DURING_NORMAL_LAMP_MODE": "Light color setting during normal lamp mode",
		"$EPCNAME_LIGHT_COLOR_LEVEL_THE_NUMBER_OF_STAGES_SET_IN_THE_NORMAL_LIGHT_MODE": "Light color level the number of stages set in the normal light mode",
		"$ELEMNAME_LIGHT_COLOR_LEVEL_THE_NUMBER_OF_STAGES_SET_IN_THE_NORMAL_LIGHT_MODE": "Light color level the number of stages set in the normal light mode",
		"$EPCNAME_NIGHT_LIGHT_MODE_LIGHT_COLOR_SETTING": "Night-light mode light color setting",
		"$ELEMNAME_NIGHT_LIGHT_MODE_LIGHT_COLOR_SETTING": "Night-light mode light color setting",
		"$EPCNAME_NIGHT_LIGHT_MODE_LIGHT_COLOR_LEVEL_THE_NUMBER_OF_STAGES_SET": "Night-light mode light color level the number of stages set",
		"$ELEMNAME_NIGHT_LIGHT_MODE_LIGHT_COLOR_LEVEL_THE_NUMBER_OF_STAGES_SET": "Night-light mode light color level the number of stages set",
		"$EPCNAME_AUTOMATIC_MODE_LIGHTING_MODE_STATE": "Automatic mode lighting mode state",
		"$ELEMNAME_AUTOMATIC_MODE_LIGHTING_MODE_STATE": "Automatic mode lighting mode state",
		"$EPCNAME_COLOR_LIGHT_MODE_RGB_SETTING": "Color light mode RGB setting",
		"$ELEMNAME_R___G___B": "R / G / B",
		"$OBJNAME_0291": "Single-function lighting",
		"$OBJNAME_02A0": "buzzer",
		"$EPCDOC_02A0_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_SOUND_GENERATING_SET": "Sound generating set",
		"$EPCDOC_02A0_B1": "This property indicates buzzer sound generation setting.\n\nBuzzer enabled = 0x41, buzzer disabled = 0x42\n\nName : Sound generation setting\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_SOUND_GENERATING_SET": "Sound generating set",
		"$EPCNAME_BUZZER_SOUND_TYPE_SETTING": "Buzzer sound type setting",
		"$EPCDOC_02A0_E0": "This property indicates 8 different types of buzzer sound.\n\n0x31.0x38\n\nName : Buzzer sound type\nEPC : 0xE0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_BUZZER_SOUND_TYPE_SETTING": "Buzzer sound type setting",
		"$OBJNAME_02A1": "Electric car charger",
		"$ELEMNAME_MINIMUM_MAXIMUM": "Minimum Maximum",
		"$OBJNAME_03B2": "Electric pot",
		"$EPCDOC_03B2_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_LID_OPENING_AND_CLOSING_STATE": "Lid opening and closing state",
		"$EPCDOC_03B2_B0": "Cover open/close status\n\nCover open = 0x41, cover closed = 0x42\n\nName : Cover open/close status\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_LID_OPENING_AND_CLOSING_STATE": "Lid opening and closing state",
		"$EPCNAME_HOT_WATER_SHORTAGE_WARNING_STATE": "Hot water shortage warning state",
		"$EPCDOC_03B2_B1": "Notifies that electric hot water pot is emptied of water.\n\nNo-water condition found = 0x41 No-water condition not found = 0x40\n\nName : No-water warning\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n\nAnnouncement at status change\n",
		"$ELEMNAME_HOT_WATER_SHORTAGE_WARNING_STATE": "Hot water shortage warning state",
		"$EPCNAME_BOILING_SETTING": "Boiling setting",
		"$EPCDOC_03B2_B2": "Boil-up setting\n\nBoil-up start - 0x41 Boil-up stop/warmer = 0x42\n\nName : Boil-up setting\nEPC : 0xB2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_BOILING_SETTING": "Boiling setting",
		"$EPCNAME_BOILING___WARM_MODE_SETTING": "Boiling / warm mode setting",
		"$EPCDOC_03B2_E0": "This property indicates citric acid cleaning, normal warmer, or power-saving warmer mode.\n\nCitric acid cleaning = 0x41, normal warmer = 0x42, power-saving warmer = 0x43\n\nName : Boil-up/warmer mode setting\nEPC : 0xE0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_BOILING___WARM_MODE_SETTING": "Boiling / warm mode setting",
		"$EPCNAME_KEEP_WARM_TEMPERATURE_SETTINGS": "Keep warm temperature settings",
		"$EPCDOC_03B2_E1": "This property indicates set value of warmer temperature in .C.\n\n0x00.0x64 (0.100)\n\nName : Set value of warmer temperature\nEPC : 0xE1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_KEEP_WARM_TEMPERATURE_SETTINGS": "Keep warm temperature settings",
		"$EPCNAME_THE_TEEMING_STATE": "The teeming state",
		"$EPCDOC_03B2_E2": "Hot water discharge status\n\nHot water discharged = 0x41, hot water not discharged = 0x42\n\nName : Hot water discharge status\nEPC : 0xE2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n\nAnnouncement at status change\n",
		"$ELEMNAME_THE_TEEMING_STATE": "The teeming state",
		"$EPCNAME_LOCK_STATE": "Lock state",
		"$EPCDOC_03B2_E3": "Hot water discharge lock status\n\nLocked = 0x41, unlocked = 0x42\n\nName : Lock status\nEPC : 0xE3\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_LOCK_STATE": "Lock state",
		"$OBJNAME_03B7": "Refrigerator-freezer",
		"$EPCDOC_03B7_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_RAPID_FREEZING_OPERATION_SETTING": "Rapid freezing operation setting",
		"$EPCDOC_03B7_A0": "Used to specify whether or not to use the �gQuick freeze�h function of the refrigerator, and to acquire the current setting.\n\n�gNormal operation�h mode: 0x41 �gQuick freeze�h mode: 0x42 �gStandby for fast freezing�h mode: 0x43\n\nName : Quick freeze function setting\nEPC : 0xA0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_RAPID_FREEZING_OPERATION_SETTING": "Rapid freezing operation setting",
		"$EPCNAME_RAPID_REFRIGERATION_OPERATION_SETTING": "Rapid refrigeration operation setting",
		"$EPCDOC_03B7_A1": "Used to specify whether or not to use the �gquick refrigeration�h function of the refrigerator, and to acquire the current setting.\n\n�gNormal operation�h mode: 0x41 �gQuick refrigeration�h mode: 0x42 �gStandby for quick refrigeration�h mode: 0x43\n\nName : Quick refrigeration function setting\nEPC : 0xA1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_RAPID_REFRIGERATION_OPERATION_SETTING": "Rapid refrigeration operation setting",
		"$EPCNAME_ICE_PERMISSION_SETTINGS": "Ice permission settings",
		"$EPCDOC_03B7_A4": "Used to specify whether or not to enable the automatic icemaker of the refrigerator, and to acquire the current setting.\n\n�gEnable icemaker�h option: 0x41 �gDisable icemaker�h option: 0x42 �gTemporarily disable icemaker�h option: 0x43\n\nName : Icemaker setting\nEPC : 0xA4\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_ICE_PERMISSION_SETTINGS": "Ice permission settings",
		"$EPCNAME_ICE_MAKING_OPERATION_STATE": "Ice-making operation state",
		"$EPCDOC_03B7_A5": "Used to acquire the status of the automatic icemaker of the refrigerator.\n\n�gIce-making in progress�h state: 0x41 �gIce-making stopped�h state: 0x42\n\nName : Icemaker operation status\nEPC : 0xA5\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_ICE_MAKING_OPERATION_STATE": "Ice-making operation state",
		"$EPCNAME_WATER_SUPPLY_TANK_STATE_FOR_ICE": "Water supply tank state for ice",
		"$EPCDOC_03B7_A6": "Used to acquire the status of the tank of the automatic icemaker of the refrigerator in terms of whether it contains water or not.\n\nIcemaker tank contains water: 0x41 There is no water left in the icemaker tank or the icemaker tank has not been positioned correctly in the refrigerator: 0x42\n\nName : Icemaker tank status\nEPC : 0xA6\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_WATER_SUPPLY_TANK_STATE_FOR_ICE": "Water supply tank state for ice",
		"$EPCNAME_REFRIGERATING_ROOM_HUMIDIFICATION_OPERATION_SETTING": "Refrigerating room humidification operation setting",
		"$EPCDOC_03B7_A8": "Used to specify whether or not to use the refrigerator compartment humidification function, and to acquire the current setting.\n\nON = 0x41 OFF = 0x42\n\nName : Refrigerator compartment humidification function setting\nEPC : 0xA8\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_REFRIGERATING_ROOM_HUMIDIFICATION_OPERATION_SETTING": "Refrigerating room humidification operation setting",
		"$EPCNAME_CRISPER_HUMIDIFICATION_OPERATION_SETTING": "Crisper humidification operation setting",
		"$EPCDOC_03B7_A9": "Used to specify whether or not to use the vegetable compartment humidification function, and to acquire the current setting.\n\nON = 0x41 OFF = 0x42\n\nName : Vegetable compartment humidification function setting\nEPC : 0xA9\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_CRISPER_HUMIDIFICATION_OPERATION_SETTING": "Crisper humidification operation setting",
		"$EPCNAME_DEODORIZING_OPERATION_SETTING": "Deodorizing operation setting",
		"$EPCDOC_03B7_AD": "Used to specify whether or not to use the deodorization function of the refrigerator, and to acquire the current setting.\n\nON = 0x41 OFF = 0x42\n\nName : Deodorization function setting\nEPC : 0xAD\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_DEODORIZING_OPERATION_SETTING": "Deodorizing operation setting",
		"$EPCDOC_03B7_B0": "Door open/close status\n\nDoor open = 0x41, Door close = 0x42\n\nName : Door open/close status\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$EPCNAME_DOOR_OPEN_WARNING_STATE": "Door open warning state",
		"$EPCDOC_03B7_B1": "Door open warning status\n\nDoor open warning found = 0x41 Door open warning not found = 0x42\n\nName : Door open warning\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n\nAnnouncement at status change\n",
		"$ELEMNAME_DOOR_OPEN_WARNING_STATE": "Door open warning state",
		"$EPCNAME_REFRIGERATION_COMPARTMENT_DOOR_OPENING_AND_CLOSING_STATE": "Refrigeration compartment door opening and closing state",
		"$EPCDOC_03B7_B2": "Used to acquire the status (i.e. open or closed) of the refrigerator compartment door.\n\nOpen = 0x41, closed = 0x42\n\nName : Refrigerator compartment door status\nEPC : 0xB2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_REFRIGERATION_COMPARTMENT_DOOR_OPENING_AND_CLOSING_STATE": "Refrigeration compartment door opening and closing state",
		"$EPCNAME_FREEZER_COMPARTMENT_DOOR_OPENING_AND_CLOSING_STATE": "Freezer compartment door opening and closing state",
		"$EPCDOC_03B7_B3": "Used to acquire the status (i.e. open or closed) of the freezer compartment door.\n\nOpen = 0x41, closed = 0x42\n\nName : Freezer compartment door status\nEPC : 0xB3\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_FREEZER_COMPARTMENT_DOOR_OPENING_AND_CLOSING_STATE": "Freezer compartment door opening and closing state",
		"$EPCNAME_ICE_GREENHOUSE_DOOR_OPENING_AND_CLOSING_STATE": "Ice greenhouse door opening and closing state",
		"$EPCDOC_03B7_B4": "Used to acquire the status (i.e. open or closed) of the ice compartment door.\n\nOpen = 0x41, closed = 0x42\n\nName : Ice compartment door status\nEPC : 0xB4\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_ICE_GREENHOUSE_DOOR_OPENING_AND_CLOSING_STATE": "Ice greenhouse door opening and closing state",
		"$EPCNAME_VEGETABLE_COMPARTMENT_DOOR_OPENING_AND_CLOSING_STATE": "Vegetable compartment door opening and closing state",
		"$EPCDOC_03B7_B5": "Used to acquire the status (i.e. open or closed) of the vegetable compartment door.\n\nOpen = 0x41, closed = 0x42\n\nName : Vegetable compartment door status\nEPC : 0xB5\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_VEGETABLE_COMPARTMENT_DOOR_OPENING_AND_CLOSING_STATE": "Vegetable compartment door opening and closing state",
		"$EPCNAME_SWITCH_COMPARTMENT_DOOR_OPENING_AND_CLOSING_STATE": "Switch compartment door opening and closing state",
		"$EPCDOC_03B7_B6": "Used to acquire the status (i.e. open or closed) of the multi-refrigerating mode compartment door.\n\nOpen = 0x41, closed = 0x42\n\nName : Multi-refrigera- ting mode compartment door\nEPC : 0xB6\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_SWITCH_COMPARTMENT_DOOR_OPENING_AND_CLOSING_STATE": "Switch compartment door opening and closing state",
		"$EPCNAME_REFRIGERATING_COMPARTMENT_TEMPERATURE_MEASUREMENT_VALUE": "Refrigerating compartment temperature measurement value",
		"$EPCDOC_03B7_D1": "Used to acquire the measured refrigerator compartment temperature (��C).\n\n0x81 to 0x7E (-127 to 126��C)\n\nName : Measured refrigerator compartment temperature\nEPC : 0xD1\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_REFRIGERATING_COMPARTMENT_TEMPERATURE_MEASUREMENT_VALUE": "Refrigerating compartment temperature measurement value",
		"$EPCNAME_FREEZER_COMPARTMENT_TEMPERATURE_MEASUREMENT_VALUE": "Freezer compartment temperature measurement value",
		"$EPCDOC_03B7_D2": "Used to acquire the measured freezer compartment temperature (��C).\n\n0x81 to 0x7E (-127 to 126��C)\n\nName : Measured freezer compartment temperature\nEPC : 0xD2\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_FREEZER_COMPARTMENT_TEMPERATURE_MEASUREMENT_VALUE": "Freezer compartment temperature measurement value",
		"$EPCNAME_ICE_GREENHOUSE_TEMPERATURE_MEASUREMENT_VALUE": "Ice greenhouse temperature measurement value",
		"$EPCDOC_03B7_D3": "Used to acquire the measured meat and fish compartment temperature (��C).\n\n0x81 to 0x7E (-127 to 126��C)\n\nName : Measured subzero-fresh compartment temperature\nEPC : 0xD3\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_ICE_GREENHOUSE_TEMPERATURE_MEASUREMENT_VALUE": "Ice greenhouse temperature measurement value",
		"$EPCNAME_VEGETABLE_COMPARTMENT_TEMPERATURE_MEASUREMENT_VALUE": "Vegetable compartment temperature measurement value",
		"$EPCDOC_03B7_D4": "Used to acquire the measured vegetable compartment temperature (��C).\n\n0x81 to 0x7E (-127 to 126��C)\n\nName : Measured vegetable compartment temperature\nEPC : 0xD4\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_VEGETABLE_COMPARTMENT_TEMPERATURE_MEASUREMENT_VALUE": "Vegetable compartment temperature measurement value",
		"$EPCNAME_SWITCH_COMPARTMENT_TEMPERATURE_MEASUREMENT_VALUE": "Switch compartment temperature measurement value",
		"$EPCDOC_03B7_D5": "Used to acquire the measured multi-refrigerating mode compartment temperature (��C).\n\n0x81 to 0x7E (-127 to 126��C)\n\nName : Measured multi-refrigeratin g mode compartment temperature\nEPC : 0xD5\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_SWITCH_COMPARTMENT_TEMPERATURE_MEASUREMENT_VALUE": "Switch compartment temperature measurement value",
		"$EPCNAME_COMPRESSOR_SPEED_LEVEL": "Compressor speed level",
		"$EPCDOC_03B7_D8": "Used to acquire the rotation speed of the compressor. The rotation speed is expressed in terms of a level.\n\nFirst byte: Maximum rotation speed L (0x01 to 0xFF (1 to 255)) Second byte: Rotation speed of the actual compressor: 0x00 to L (zero speed to highest speed)\n\nName : Compressor rotation speed\nEPC : 0xD8\nData Type : unsigned char\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_THE_MAXIMUM_SPEED_LEVEL": "The maximum speed level",
		"$ELEMNAME_ROTATIONAL_SPEED_LEVEL": "Rotational speed level",
		"$EPCDOC_03B7_DA": "Used to acquire the measured electric current consumption.\n\n0x0000 to 0xFFFD (0 to 6553.3A)\n\nName : Measured electric current consumption\nEPC : 0xDA\nData Type : unsigned char\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCDOC_03B7_DC": "Used to acquire the rated power consumption.\n\n0x0000 to 0xFFFD (0 to 65533W)\n\nName : Rated power consumption\nEPC : 0xDC\nData Type : unsigned char\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_RATED_POWER_CONSUMPTION_VALUE": "Rated power consumption value",
		"$EPCNAME_SETTABLE_TEMPERATURE_LEVEL_MAXIMUM_VALUE": "Settable temperature level maximum value",
		"$EPCDOC_03B7_E0": "Used to acquire the maximum allowable temperature setting levels for the individual compartments of the refrigerator.\n\nFirst byte: Refrigerator compartment Second byte: Freezer compartment Third byte:subzero-fresh compartment Fourth byte: Vegetable compartment Fifth byte: Multi-refrigerating mode compartment Sixth to eighth bytes: Reserved for future use. 0x01 to 0xFF (Level 1 to 255) 0x00 = no compartment\n\nName : Maximum allowable temperature setting level\nEPC : 0xE0\nData Type : unsigned char x 8\nData Size(Byte) : 8 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_REFRIGERATING_CHAMBER___REFRIGERATOR___ICE_GREENHOUSE___CRISPER___SWITCHING_ROOM": "Refrigerating chamber / Refrigerator / ice greenhouse / crisper / switching room",
		"$EPCNAME_REFRIGERATING_COMPARTMENT_TEMPERATURE_SETTING_VALUE": "Refrigerating compartment temperature setting value",
		"$EPCDOC_03B7_E2": "Used to specify the refrigerator compartment temperature in ��C, and to acquire the current setting.\n\n0x81 to 0x7E (-127 to 126��C)\n\nName : Refrigerator compartment temperature setting\nEPC : 0xE2\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_REFRIGERATING_COMPARTMENT_TEMPERATURE_SETTING_VALUE": "Refrigerating compartment temperature setting value",
		"$EPCNAME_FREEZER_COMPARTMENT_TEMPERATURE_SETTING_VALUE": "Freezer compartment temperature setting value",
		"$EPCDOC_03B7_E3": "Used to specify the freezer compartment temperature in ��C, and to acquire the current setting.\n\n0x81 to 0x7E (-127 to 126��C)\n\nName : Freezer compartment temperature setting\nEPC : 0xE3\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_FREEZER_COMPARTMENT_TEMPERATURE_SETTING_VALUE": "Freezer compartment temperature setting value",
		"$EPCNAME_ICE_GREENHOUSE_TEMPERATURE_SET_VALUE": "Ice greenhouse temperature set value",
		"$EPCDOC_03B7_E4": "Used to specify the ice compartment temperature in ��C, and to acquire the current setting.\n\n0x81 to 0x7E (-127 to 126��C)\n\nName : Ice temperature setting\nEPC : 0xE4\nData Type : signed char\nData Size(Byte) : 1 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_ICE_GREENHOUSE_TEMPERATURE_SET_VALUE": "Ice greenhouse temperature set value",
		"$EPCNAME_VEGETABLE_COMPARTMENT_TEMPERATURE_SETTING_VALUE": "Vegetable compartment temperature setting value",
		"$EPCDOC_03B7_E5": "Used to specify the vegetable compartment temperature in ��C, and to acquire the current setting.\n\n0x81 to 0x7E (-127 to 126��C)\n\nName : Vegetable compartment temperature setting\nEPC : 0xE5\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_VEGETABLE_COMPARTMENT_TEMPERATURE_SETTING_VALUE": "Vegetable compartment temperature setting value",
		"$EPCNAME_SWITCH_COMPARTMENT_TEMPERATURE_SETTING_VALUE": "Switch compartment temperature setting value",
		"$EPCDOC_03B7_E6": "Used to specify the multi-refrigerating mode compartment temperature in ��C, and to acquire the current setting.\n\n0x81 to 0x7E (-127 to 126��C)\n\nName : Multi-refrigera- ting mode compartment temperature setting\nEPC : 0xE6\nData Type : signed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_SWITCH_COMPARTMENT_TEMPERATURE_SETTING_VALUE": "Switch compartment temperature setting value",
		"$EPCNAME_REFRIGERATING_COMPARTMENT_TEMPERATURE_LEVEL_SETTING": "Refrigerating compartment temperature level setting",
		"$EPCDOC_03B7_E9": "Used to specify the refrigerator compartment temperature by selecting a level from among the predefined levels, and to acquire the current setting.\n\n0x01 to maximum allowable temperature setting level (highest to lowest temperature)\n\nName : Refrigerator compartment temperature level setting\nEPC : 0xE9\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_REFRIGERATING_COMPARTMENT_TEMPERATURE_LEVEL_SETTING": "Refrigerating compartment temperature level setting",
		"$EPCNAME_FREEZER_COMPARTMENT_TEMPERATURE_LEVEL_SETTING": "Freezer compartment temperature level setting",
		"$EPCDOC_03B7_EA": "Used to specify the freezer compartment temperature by selecting a level from among the predefined levels, and to acquire the current setting.\n\n0x01 to maximum allowable temperature setting level (highest to lowest temperature)\n\nName : Freezer compartment temperature level setting\nEPC : 0xEA\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_FREEZER_COMPARTMENT_TEMPERATURE_LEVEL_SETTING": "Freezer compartment temperature level setting",
		"$EPCNAME_ICE_GREENHOUSE_TEMPERATURE_LEVEL_SETTING": "Ice greenhouse temperature level setting",
		"$EPCDOC_03B7_EB": "Used to specify ice compartment temperature by selecting a level from among the predefined levels, and to acquire the current setting.\n\n0x01 to maximum allowable temperature setting level (highest to lowest temperature)\n\nName : ice compartment temperature level setting\nEPC : 0xEB\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_ICE_GREENHOUSE_TEMPERATURE_LEVEL_SETTING": "Ice greenhouse temperature level setting",
		"$EPCNAME_VEGETABLE_COMPARTMENT_TEMPERATURE_LEVEL_SETTING": "Vegetable compartment temperature level setting",
		"$EPCDOC_03B7_EC": "Used to specify the vegetable compartment temperature by selecting a level from among the predefined levels, and to acquire the current setting.\n\n0x01 to maximum allowable temperature setting level (highest to lowest temperature)\n\nName : Vegetable compartment temperature level setting\nEPC : 0xEC\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_VEGETABLE_COMPARTMENT_TEMPERATURE_LEVEL_SETTING": "Vegetable compartment temperature level setting",
		"$EPCNAME_SETTING_THE_SWITCHING_CHAMBER_TEMPERATURE_LEVEL": "Setting the switching chamber temperature level",
		"$EPCDOC_03B7_ED": "Used to specify the multi-refrigerating mode compartment temperature by selecting a level from among the predefined levels, and to acquire the current setting.\n\n0x01 to maximum allowable temperature setting level (highest to lowest temperature)\n\nName : Multi-refrigera- ting mode compartment temperature level setting\nEPC : 0xED\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_SETTING_THE_SWITCHING_CHAMBER_TEMPERATURE_LEVEL": "Setting the switching chamber temperature level",
		"$OBJNAME_03B8": "Microwave Oven",
		"$EPCDOC_03B8_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_03B8_B0": "Used to acquire the status (i.e. open or closed) of the door of the combination microwave oven.\n\nDoor open = 0x41, door closed = 0x42\n\nName : Door open/close status\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCNAME_HEATING_STATE": "Heating state",
		"$EPCDOC_03B8_B1": "Used to acquire the status of the combination microwave oven.\n\nInitial state = 0x40 Heating = 0x41 Heating suspended = 0x42 Reporting completion of heating cycle = 0x43 Setting = 0x44 Preheating = 0x45 Preheat temperature maintenance = 0x46 Heating temporarily stopped for manual cooking action = 0x47\n\nName : Heating status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_HEATING_STATE": "Heating state",
		"$EPCNAME_HEATING_SETTING": "Heating setting",
		"$EPCDOC_03B8_B2": "Used to specify whether to start, stop or suspend heating, and to acquire the current setting (i.e. current heating status).\n\nStart/restart heating (heating started/restarted) = 0x41 Suspend heating (heating suspended) = 0x42 Stop heating (heating stopped) = 0x43\n\nName : Heating setting\nEPC : 0xB2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_HEATING_SETTING": "Heating setting",
		"$EPCNAME_AUTOMATIC_MENU_COURSE_SET": "Automatic menu course set",
		"$EPCDOC_03B8_D0": "Used, when the value of the �gautomatic heating setting�h property is 0x41 (= automatic heating), to select an automatic heating cycle, and to acquire the current setting.\n\n0 to 0xFE: Automatic heating cycle code (See the automatic heating cycle code table in the subsection entitled �gAutomatic heating menu setting.�h) No automatic heating cycle specified = 0xFF\n\nName : Automatic heating menu setting\nEPC : 0xD0\nData Type : unsigned cha\nData Size(Byte) : 1 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_AUTOMATIC_MENU_COURSE_SET": "Automatic menu course set",
		"$EPCNAME_SET_OVEN_MODE": "Set oven mode",
		"$EPCDOC_03B8_D1": "Used, when the value of the �gheating mode setting�h property (EPC = 0xE0) is 0x43 (= oven), to specify the sub-mode to use, and to acquire the current setting.\n\nAutomatic selection mode = 0x40 Convection oven mode = 0x41 Circulation oven mode = 0x42 Hybrid oven mode = 0x43 No sub-mode specified = 0xFF\n\nName : Oven mode setting\nEPC : 0xD1\nData Type : unsigned cha\nData Size(Byte) : 1 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_SET_OVEN_MODE": "Set oven mode",
		"$EPCNAME_OVEN_PREHEATED_SETTING": "Oven preheated setting",
		"$EPCDOC_03B8_D5": "Used, when the value of the �gheating mode setting�h property (EPC = 0xE0) is 0x43 (oven), to specify whether or not to preheat the chamber for the selected oven sub-mode, and to acquire the current setting.\n\nWith preheating = 0x41 Without preheating = 0x42 Not specified = 0xFF\n\nName : Oven preheating setting\nEPC : 0xD5\nData Type : unsigned char\nData Size(Byte) : 1 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_OVEN_PREHEATED_SETTING": "Oven preheated setting",
		"$EPCNAME_SETTING_FERMENTATION_MODE": "Setting fermentation mode",
		"$EPCDOC_03B8_D6": "Used, when the value of the �gheating mode setting�h property (EPC = 0xE0) is 0x46 (= fermenting), to specify the sub-mode to use, and to acquire the current setting.\n\nAutomatic selection mode = 0x40 Convection fermentation mode = 0x41 Circulation fermentation mode = 0x42 Hybrid fermentation mode = 0x43 Microwave fermentation mode = 0x51 No mode specified = 0xFF\n\nName : Fermenting mode setting\nEPC : 0xD6\nData Type : unsigned char\nData Size(Byte) : 1 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_SETTING_FERMENTATION_MODE": "Setting fermentation mode",
		"$EPCNAME_SETTING_HEATING_MODE": "Setting heating mode",
		"$EPCDOC_03B8_E0": "Used to specify the heating mode of the combination microwave oven, and to acquire the current setting (i.e. current mode).\n\nMicrowave heating = 0x41 Defrosting = 0x42 Oven = 0x43 Grill = 0x44 Toaster = 0x45 Fermenting = 0x46 Stewing = 0x47 Steaming = 0x48 Two-stage microwave heating = 0x51 No mode specified = 0xFF\n\nName : Heating mode setting\nEPC : 0xE0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_SETTING_HEATING_MODE": "Setting heating mode",
		"$EPCNAME_AUTOMATIC_HEATING_SETTING": "Automatic heating setting",
		"$EPCDOC_03B8_E1": "Used to specify whether or not to use the combination microwave oven�fs automatic heating mode, and to acquire the current setting.\n\nAutomatic = 0x41 Manual = 0x42 Not specified = 0xFF\n\nName : Automatic heating setting\nEPC : 0xE1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_AUTOMATIC_HEATING_SETTING": "Automatic heating setting",
		"$EPCNAME_SETTING_AUTOMATIC_HEATING_LEVEL": "Setting automatic heating level",
		"$EPCDOC_03B8_E2": "Used to specify, by selecting a level from among the five predefined levels, the level of automatic heating for the option specified by the �gautomatic heating menu setting�h property, and to acquire the current setting.\n\n0x31 to 0x35 (lowest to highest) Not specified = 0xFF\n\nName : Automatic heating level setting\nEPC : 0xE2\nData Type : unsigned cha\nData Size(Byte) : 1 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_SETTING_AUTOMATIC_HEATING_LEVEL": "Setting automatic heating level",
		"$EPCNAME_INSIDE_TEMPERATURE_SETTING": "Inside temperature setting",
		"$EPCDOC_03B8_E3": "Used, when the value of the �gheating mode setting�h property (EPC = 0xE0) is 0x43 (= oven) or 0x46 (= fermenting), to specify the temperature in the chamber in 0.1��C increments, and to acquire the current setting.\n\n0xF554 to 0x7FFE (-273.2 to 3276.6��C) 0x8001: Automatic 0x8002: Not specified\n\nName : Chamber temperature setting\nEPC : 0xE3\nData Type : \nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_INSIDE_TEMPERATURE_SETTING": "Inside temperature setting",
		"$EPCNAME_FINISH_TEMPERATURE_SET_VALUE": "Finish temperature set value",
		"$EPCDOC_03B8_E4": "Used to specify the as-heated food temperature in 0.1��C increments, and to acquire the current setting.\n\n0xF554 to 0x7FFE (-273.2 to 3276.6��) 0x8002: Not specified\n\nName : Food temperature setting\nEPC : 0xE4\nData Type : \nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_FINISH_TEMPERATURE_SET_VALUE": "Finish temperature set value",
		"$EPCNAME_HEATING_TIME_SETTING": "Heating time setting",
		"$EPCDOC_03B8_E5": "Used to specify the duration of heating in the HH:MM:SS format, and to acquire the current setting.\n\n0 to 0x17: 0 to 0x3B: 0 to 0x3B (= 0 to 23) (= 0 to 59) (= 0 to 59)\n\nName : Heating time setting\nEPC : 0xE5\nData Type : \nData Size(Byte) : 3\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_HEATING_TIME_SETTING": "Heating time setting",
		"$EPCNAME_HEATING_THE_REMAINING_TIME_SET_VALUE": "Heating the remaining time set value",
		"$EPCDOC_03B8_E6": "Used to specify the time remaining to complete the heating cycle in the HH:MM:SS format, and to acquire the current setting.\n\n0 to 0x17: 0 to 0x3B: 0 to 0x3B (= 0 to 23) (= 0 to 59) (= 0 to 59)\n\nName : Remaining heating time setting\nEPC : 0xE6\nData Type : \nData Size(Byte) : 3\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_HEATING_THE_REMAINING_TIME_SET_VALUE": "Heating the remaining time set value",
		"$EPCNAME_MICROWAVE_HEATING_OUTPUT_SET_VALUE": "Microwave heating output set value",
		"$EPCDOC_03B8_E7": "Used, when the value of the �gheating mode setting�h property (EPC = 0xE0) is 0x41 (= microwave heating), 0x42 (= defrosting), 0x47 (= stewing) or 0x48 (= steaming) or when the value of the �gheating mode setting�h property (EPC = 0xE0) is 0x46 (= fermenting) and the value of the �gfermenting mode setting�h property (EPC = 0xD6) is 0x51 (= microwave fermentation mode), to specify the microwave heating power in 1W increments, and to acquire the current setting.\n\n0x0000 to 0xFFFD (0 to 65533W)\n\nName : Microwave heating power setting\nEPC : 0xE7\nData Type : \nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_MICROWAVE_HEATING_OUTPUT_SET_VALUE": "Microwave heating output set value",
		"$EPCNAME_MIDDLE_NOTIFICATION_PATTERN_SET": "Middle notification pattern set",
		"$EPCDOC_03B8_E8": "Used, when it is necessary to instruct the combination microwave oven to temporarily stop heating at a point during a heating cycle to allow the user to perform manual reversing, mixing, etc. and display a message to instruct the user on the manual action to be performed, to specify the prompt message to be displayed and the timing of the message (in terms of a percentage of the total duration of the heating cycle that is allowed to elapse (from the start of the heating cycle) before the message is displayed), and to acquire the current settings. Up to 4 messages may be specified.\n\nFirst byte: Prompt message code (See the prompt message code table in the subsection entitled �gPrompt message setting.�h) Second byte: Timing value (0 to 0x64 (0 to 100%))\n\nName : Prompt message setting\nEPC : 0xE8\nData Type : \nData Size(Byte) : 8\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_MIDDLE_NOTIFICATION_PATTERN_SET": "Middle notification pattern set",
		"$EPCNAME_ACCESSORIES_SET": "Accessories set",
		"$EPCDOC_03B8_E9": "Used to specify, by means of a 2-byte bit map, what accessory or accessories to the combination microwave oven to use, and to acquire the current setting.\n\nThe value contained in a bit in the bit map shall be �g1�h if the accessory represented by that bit is used and �g0�h if the accessory represented by that bit is not used (See the bitmap composition table in the subsection entitled �g�fAccessories to combination microwave oven�f setting�h).\n\nName : �gAccessories to combination microwave oven�h setting\nEPC : 0xE9\nData Type : \nData Size(Byte) : 2\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_ACCESSORIES_SET": "Accessories set",
		"$EPCNAME_DISPLAY_STRING_SETTING": "Display string setting",
		"$EPCDOC_03B8_EA": "Used to input character strings (up to 20 characters) to use on the display of the combination microwave oven.\n\nShift-JIS code characters x 20\n\nName : Display character string setting\nEPC : 0xEA\nData Type : \nData Size(Byte) : 40\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : undefined\n",
		"$ELEMNAME_DISPLAY_STRING_SETTING": "Display string setting",
		"$EPCNAME_MICROWAVE_TWO_STAGE_HEATING_TIME_SETTING": "Microwave two-stage heating time setting",
		"$EPCDOC_03B8_EB": "Used, when the value of the �gheating mode setting�h property (EPC = 0xE0) is 0x51 (two-stage microwave heating), to specify the duration of the first and second microwave heating cycles in the HH:MM:SS format, and to acquire the current setting. Three bytes shall be used for each heating cycle, with the first and second sets of bytes used for the first and second heating cycles, respectively.\n\nDuration of first microwave heating cycle (first through third bytes): 0 to 0x17: 0 to 0x3B: 0 to 0x3B (= 0 to 23): (= 0 to 59): (= 0 to 59) Duration of second microwave heating cycle (fourth through sixth bytes): 0 to 0x17: 0 to 0x3B: 0 to 0x3B (= 0 to 23): (= 0 to 59): (= 0 to 59)\n\nName : Two-stage microwave heating setting (duration)\nEPC : 0xEB\nData Type : \nData Size(Byte) : 6\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_1_STAGE___2_STAGE": "1-stage / 2-stage",
		"$EPCNAME_MICROWAVE_TWO_STAGE_HEATING_OUTPUT_SET_VALUE": "Microwave two-stage heating output set value",
		"$EPCDOC_03B8_EC": "Used, when the value of the �gheating mode setting�h property (EPC = 0xE0) is 0x51 (two-stage microwave heating), to specify the heating power for the first and second microwave heating cycles in 1W increments, and to acquire the current setting. Two bytes shall be used for each heating cycle, with the first and second pairs of bytes used for the first and second heating cycles, respectively.\n\nHeating power for first microwave heating cycle (first and second bytes): 0x0000 to 0xFFFD (0 to 65533W) Heating power for second microwave heating cycle (third and fourth bytes): 0x0000 to 0xFFFD (0 to 65533W)\n\nName : Two-stage microwave heating setting (heating power)\nEPC : 0xEC\nData Type : \nData Size(Byte) : 4\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_MICROWAVE_TWO_STAGE_HEATING_OUTPUT_SET_VALUE": "Microwave two-stage heating output set value",
		"$OBJNAME_03B9": "Cooking Heater",
		"$EPCDOC_03B9_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_03B9_96": "Relative time setting of the left stove OFF timer: relative time setting of the right stove OFF timer: relative time setting of the far-side stove OFF timer: relative time setting of the roaster OFF timer\n\nUsed to set the relative time settings of the OFF timers (in the HH:MM:SS format), activate the relevant timers and acquire the updated current relative time settings of the OFF timers. (0 to 0x17 : 0 to 0x3B: 0 to 0x3B)  ~ 4 (= 0 to 23) : (= 0 to 59): (= 0 to 59) No setting: 0xFFFFFF\n\nName : Relative time settings of OFF timers\nEPC : 0x96\nData Type : unsigned char x 3 x 4\nData Size(Byte) : 1 byte x 3 x 4\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_LEFT___RIGHT___BACK___ROASTER": "Left / right / back / roaster",
		"$EPCDOC_03B9_A1": "Child lock ON/OFF setting\n\nChild lock OFF: 0x40 Child lock ON: 0x41\n\nName : Child lock setting\nEPC : 0xA1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_RADIANT_HEATER_LOCK_SETTING": "Radiant heater lock setting",
		"$EPCDOC_03B9_A2": "Radiant heater lock ON/OFF\n\nRadiant heater lock OFF: 0x40 Radiant heater lock ON: 0x41\n\nName : Radiant heater lock setting\nEPC : 0xA2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_RADIANT_HEATER_LOCK_SETTING": "Radiant heater lock setting",
		"$EPCDOC_03B9_B1": "Heating status of the left stove: heating status of the right stove: heating status of the far-side stove: heating status of the roaster.\n\nStanding by: 0x40 Operating: 0x41 Temporarily stopped: 0x42 Heating prohibited: 0x50 Unknown: 0xFF\n\nName : Heating status\nEPC : 0xB1\nData Type : unsigned char x 4\nData Size(Byte) : 1 byte x 4\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$EPCDOC_03B9_B2": "Left stove setting: right stove setting: far-side stove setting: roaster setting\n\nStop heating: 0x40 Start/resume heating: 0x41 Temporarily stop heating: 0x42 No setting: 0xFF\n\nName : Heating setting\nEPC : 0xB2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_BATCH_STOP_SETTING": "Batch stop setting",
		"$EPCDOC_03B9_B3": "Used to stop the heating on all of the left stove, right stove, far-side stove and roaster.\n\nStop the heating on all of the left stove, right stove, far-side stove and roaster: 0x40\n\nName :  gAll stop h setting\nEPC : 0xB3\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : undefined\n",
		"$ELEMNAME_BATCH_STOP_SETTING": "Batch stop setting",
		"$EPCNAME_SET_STOVE_HEATING_MODE": "Set stove heating mode",
		"$EPCDOC_03B9_E0": "Heating mode of the left stove: heating mode of the right stove: heating mode of the far-side stove\n\nHeating power control mode: 0x41 Deep-frying mode (tempura, etc.): 0x42 Water heating mode: 0x43 Rice boiling mode: 0x44 Stir-frying mode: 0x45 No setting: 0xFF\n\nName :  gHeating modes of stoves h setting\nEPC : 0xE0\nData Type : unsigned char x 3\nData Size(Byte) : 1 byte x 3\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_LEFT___RIGHT___BACK": "Left / right / back",
		"$EPCNAME_HEATING_TEMPERATURE_SET_VALUE": "Heating temperature set value",
		"$EPCDOC_03B9_E3": "Left stove temperature setting: right stove temperature setting: far-side stove temperature setting\n\nTemperature setting: 0x32 to 0xFA (50 to 250  ) No setting: 0xFF\n\nName : Heating temperature setting\nEPC : 0xE3\nData Type : unsigned char x 3\nData Size(Byte) : 1 byte x 3\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_HEATING_OUTPUT_SETTING": "Heating output setting",
		"$EPCDOC_03B9_E7": "Heating power of the left stove: heating power of the right stove: heating power of the far-side stove: heating power of the roaster\n\n EWhen the heating powers are specified in terms of output wattage (0 to 10000W) : 0x0000 to 0x2710  EWhen the heating powers are specified in terms of level (17 levels)                : 0x3000 to 0x3010  EWhen the heating powers are specified in terms of the state of flame: Very low flame: 0x4002 Low flame: 0x4004 Medium flame: 0x4006 High flame: 0x4008 High power: 0x400a  ENo setting: 0xFFFF\n\nName : Heating power setting\nEPC : 0xE7\nData Type : unsigned char x 4\nData Size(Byte) : 2 byte x 4\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$OBJNAME_03BB": "rice cooker",
		"$EPCDOC_03BB_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_RICE_RESERVATION_SETTING": "Rice reservation setting",
		"$EPCDOC_03BB_90": "This property indicates whether rice cooking reservation is ON or OFF.\n\nReservation ON = 0x41, Reservation OFF = 0x42\n\nName : Rice cooking reservation setting\nEPC : 0x90\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_RICE_RESERVATION_SETTING": "Rice reservation setting",
		"$EPCNAME_COOKER_RESERVATION_SETTING_TIME_SET_VALUE": "Cooker reservation setting time set value",
		"$EPCDOC_03BB_91": "Timer value (HH:MM)\n\n0.0x17: 0.0x3B (= 0.23):(= 0.59)\n\nName : Set value of rice cooking reservation setting time\nEPC : 0x91\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_COOKER_RESERVATION_SETTING_TIME_SET_VALUE": "Cooker reservation setting time set value",
		"$EPCNAME_COOKER_RESERVATION_SETTING_RELATIVE_TIME_SETTING": "Cooker reservation setting relative time setting",
		"$EPCDOC_03BB_92": "Timer value (HH:MM)\n\n0.0x17: 0.0x3B (= 0.23):(= 0.59)\n\nName : Set value of rice cooking reservation setting relative time\nEPC : 0x92\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_COOKER_RESERVATION_SETTING_RELATIVE_TIME_SETTING": "Cooker reservation setting relative time setting",
		"$EPCDOC_03BB_B0": "This property indicates whether the cover is open or closed.\n\nCover open = 0x41, Cover closed = 0x42\n\nName : Cover open/close status\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCNAME_RICE_STATE": "Rice state",
		"$EPCDOC_03BB_B1": "This property indicates rice cooking status.\n\nStop = 0x41, Preheating = 0x42, Rice cooking = 0x43, Steaming = 0x44, Rice cooking completion = 0x45\n\nName : Rice cooking status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_RICE_STATE": "Rice state",
		"$EPCNAME_COOKING_CONTROL_SETTING": "Cooking control setting",
		"$EPCDOC_03BB_B2": "This property indicates rice cooking control setting.\n\nRice cooking start/restart = 0x41, Rice cooking suspension = 0x42\n\nName : Rice cooking control setting\nEPC : 0xB2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : mandatory\n",
		"$ELEMNAME_COOKING_CONTROL_SETTING": "Cooking control setting",
		"$EPCNAME_KEEP_WARM_SETTING": "Keep warm setting",
		"$EPCDOC_03BB_E1": "This property indicates whether or not warmer function is enabled.\n\nWarmer enabled = 0x41, Warmer disabled = 0x42\n\nName : Warmer setting\nEPC : 0xE1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_KEEP_WARM_SETTING": "Keep warm setting",
		"$EPCNAME_THE_INNER_POT_REMOVAL_STATE": "The inner pot removal state",
		"$EPCDOC_03BB_E5": "This property indicates whether inner pot is removed or not.\n\nRemoved = 0x41, Not removed = 0x42\n\nName : Inner pot removal status\nEPC : 0xE5\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_THE_INNER_POT_REMOVAL_STATE": "The inner pot removal state",
		"$EPCNAME_LID_REMOVAL_STATE": "Lid removal state",
		"$EPCDOC_03BB_E6": "This property indicates whether or not cover is removed.\n\nRemoved = 0x41, Not removed = 0x42\n\nName : Cover removal status\nEPC : 0xE6\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_LID_REMOVAL_STATE": "Lid removal state",
		"$OBJNAME_03C5": "Washing machine",
		"$EPCDOC_03C5_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_03C5_90": "Reservation ON/OFF\n\nReservation ON = 0x41, reservation OFF = 0x42\n\nName : ON timer reservation setting\nEPC : 0x90\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_03C5_91": "Timer value (HH:MM)\n\n0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)\n\nName : ON timer setting\nEPC : 0x91\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_03C5_92": "Timer value (HH:MM)\n\n0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)\n\nName : Relative time-based ON timer setting\nEPC : 0x92\nData Type : unsigned char x 2\nData Size(Byte) : 2 bytes\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCNAME_DOOR_LID_OPENING_AND_CLOSING_STATE": "Door-lid opening and closing state",
		"$EPCDOC_03C5_B0": "This property indicates whether the door/cover is open or closed.\n\nDoor/cover open = 0x41 Door/cover closed = 0x42\n\nName : Door/cover open/close status\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_DOOR_LID_OPENING_AND_CLOSING_STATE": "Door-lid opening and closing state",
		"$EPCNAME_WASHING_SET": "Washing set",
		"$EPCDOC_03C5_B2": "Washing machine setting\n\nStart/restart the washing cycle (started/restarted) = 0x41 Suspend the washing cycle (suspended) = 0x42 Stop the washing cycle (stopped) = 0x43\n\nName : Washing machine setting\nEPC : 0xB2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_WASHING_SET": "Washing set",
		"$EPCNAME_WASHING_TRANSITION_STATE": "Washing transition state",
		"$EPCDOC_03C5_E1": "This property indicates the current stage of the washing cycle.\n\nWashing = 0x41, rinsing = 0x42, spin drying = 0x43, suspended = 0x44, washing cycle stopped/completed = 0x45\n\nName : Current stage of washing cycle\nEPC : 0xE1\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_WASHING_TRANSITION_STATE": "Washing transition state",
		"$EPCNAME_WASHING_REMAINING_TIME": "Washing remaining time",
		"$EPCDOC_03C5_E6": "This property indicates the time remaining to complete the current washing cycle in the HH:MM:SS format.\n\n0 to 0x17: 0 to 0x3B: 0 to 0x3B (= 0 to 23): (= 0 to 59): (= 0 to 59)\n\nName : Time remaining to complete washing cycle\nEPC : 0xE6\nData Type : unsigned char x 3\nData Size(Byte) : 3 bytes\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_WASHING_REMAINING_TIME": "Washing remaining time",
		"$OBJNAME_03C6": "Cloth drier",
		"$EPCDOC_03C6_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_03C6_90": "Reservation ON/OFF\n\nReservation ON  0x41 Reservation OFF  0x42\n\nName : ON timer reservation setting\nEPC : 0x90\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_03C6_91": "Timer value    HH:MM\n\n0-0x17: 0-0x3B (=0-23):(=0-59)\n\nName : ON timer setting\nEPC : 0x91\nData Type : unsigned char  ~ Q\nData Size(Byte) : 2 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_03C6_92": "Timer value    HH:MM\n\n0-0x17: 0-0x3B (=0-23):(=0-59)\n\nName : Relative time-based ON timer setting\nEPC : 0x92\nData Type : unsigned char  ~ Q\nData Size(Byte) : 2 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_03C6_B0": "This property indicates the status of the door or cover as to whether it is open or closed.\n\nDoor/cover open = 0x41 Door/cover closed = 0x42\n\nName : Door/cover open/close status\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCNAME_DRYING_SETTING": "Drying setting",
		"$EPCDOC_03C6_B2": "Drying setting\n\nStart/restart drying  0x41, Suspend drying  0x42, Stop drying  0x43\n\nName : Drying setting\nEPC : 0xB2\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_DRYING_SETTING": "Drying setting",
		"$EPCNAME_DRYING_TRANSITION_STATE": "Drying transition state",
		"$EPCDOC_03C6_E1": "Drying status\n\nDrying in progress  0x41 Drying suspended  0x42 Drying completed/stopped  0x43\n\nName : Drying status\nEPC : 0xE1\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_DRYING_TRANSITION_STATE": "Drying transition state",
		"$EPCNAME_DRYING_TIME_REMAINING": "Drying time remaining",
		"$EPCDOC_03C6_E6": "This property indicates the remaining drying time in the  gHH:MM:SS h .format.\n\n0-0x17: 0-0x3B : 0-0x3B (=0-23):(=0-59):(=0-59)\n\nName : Remaining drying time\nEPC : 0xE6\nData Type : unsigned char  ~3\nData Size(Byte) : 3 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_DRYING_TIME_REMAINING": "Drying time remaining",
		"$OBJNAME_03CE": "Showcase for business",
		"$EPCNAME_OPERATION_MODE": "Operation mode",
		"$ELEMNAME_OPERATION_MODE": "Operation mode",
		"$EPCNAME_THE_DISCHARGE_TEMPERATURE_MEASUREMENTS": "The discharge temperature measurements",
		"$ELEMNAME_THE_DISCHARGE_TEMPERATURE_MEASUREMENTS": "The discharge temperature measurements",
		"$EPCNAME_INTERNAL_LIGHTING_OPERATING_STATE": "Internal lighting operating state",
		"$ELEMNAME_INTERNAL_LIGHTING_OPERATING_STATE": "Internal lighting operating state",
		"$EPCNAME_KURAGAI_LIGHTING_OPERATING_STATE": "Kuragai lighting operating state",
		"$ELEMNAME_KURAGAI_LIGHTING_OPERATING_STATE": "Kuragai lighting operating state",
		"$EPCNAME_INSIDE_TEMPERATURE_MEASUREMENT": "Inside temperature measurement",
		"$ELEMNAME_INSIDE_TEMPERATURE_MEASUREMENT": "Inside temperature measurement",
		"$EPCNAME_REFRIGERATING_CAPACITY_VALUE": "Refrigerating capacity value",
		"$ELEMNAME_REFRIGERATING_CAPACITY_VALUE": "Refrigerating capacity value",
		"$EPCNAME_DEFROST_HEATER_POWER_CONSUMPTION": "Defrost heater power consumption",
		"$ELEMNAME_DEFROST_HEATER_POWER_CONSUMPTION": "Defrost heater power consumption",
		"$EPCNAME_FAN_MOTOR_POWER_CONSUMPTION": "Fan motor power consumption",
		"$ELEMNAME_FAN_MOTOR_POWER_CONSUMPTION": "Fan motor power consumption",
		"$EPCNAME_HEATER_MODE": "Heater mode",
		"$ELEMNAME_HEATER_MODE": "Heater mode",
		"$OBJNAME_03D3": "Washing and drying machine",
		"$EPCDOC_03D3_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_03D3_90": "Used to specify whether or not to use the ON timer-based reservation function, and to acquire the current setting.\n\nReservation ON = 0x41, reservation OFF = 0x42\n\nName : ON timer reservation setting\nEPC : 0x90\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_03D3_91": "Used to specify the time for the time-based reservation function of the ON timer and to acquire the current setting.\n\n0 to 0x17: 0 to 0x3B (= 0 to 23): (= 0 to 59)\n\nName : ON timer setting\nEPC : 0x91\nData Type : unsigned char  ~2\nData Size(Byte) : 2 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_03D3_92": "Used to specify the relative time for the relative time-based reservation function of the ON timer and to acquire the time remaining for the current reservation.\n\n0 to 0xFF: 0 to 0x3B (= 0 to 255): (= 0 to 59)\n\nName : Relative time-based ON timer setting\nEPC : 0x92\nData Type : unsigned char  ~2\nData Size(Byte) : 2 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_03D3_B0": "Used to acquire the status of the door/cover (i.e. open or closed).\n\nDoor/cover open = 0x41 Door/cover closed = 0x42\n\nName : Door/cover open/close status\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCNAME_WASHING_AND_DRYING_SETTING": "Washing and drying setting",
		"$EPCDOC_03D3_B2": "Used to specify whether to start or stop the washing, drying or washing and drying cycle, and to acquire the current status.\n\nStart/restart(ed) or in progress = 0x41 Suspend(ed) = 0x42 Stop(ped) = 0x43\n\nName : Washer and dryer setting\nEPC : 0xB2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_WASHING_AND_DRYING_SETTING": "Washing and drying setting",
		"$EPCNAME_WASHING_AND_DRYING_COURSE_SETTING_1": "Washing and drying course setting 1",
		"$EPCDOC_03D3_D0": "Used to specify the washer and dryer cycle option(s) to use in the  gwashing and drying, h  gwashing h or  gdrying h mode and to acquire the current setting(s). The value ranges shall be as follows: Washing and drying couse: 0x21 to 0x3F Washing and drying cource maker original code: 0x40 to 0x4F Washing cource: 0x61 to 0x7F Washing cource maker original code: 0x80 to 0x8F Drying cource: 0xA1 to 0xBF Drying cource maker original code: 0xC0 to 0xDF\n\n<Washing and drying cource> Standard = 0x21, silent = 0x22, heavily soiled clothes = 0x23, hard-to-remove stains = 0x24, presoaking = 0x25, blankets = 0x26, soft = 0x27, dry = 0x28, clean rinsing = 0x29, ironing/business shirts = 0x2A, hang drying = 0x2B, thick clothes = 0x2C, disinfection = 0x2D, oil stains = 0x2E, memory = 0x2F, detergent saving = 0x30, lightly soiled clothes = 0x31, quick wash of small amount of laundry = 0x32 Washing cource / maker original cource = 0x40 to 0x4F <Washing cource> Standard = 0x61, silent = 0x62, heavily soiled clothes = 0x63, hard-to-remove stains = 0x64, presoaking = 0x65, blankets = 0x66, soft = 0x67, dry = 0x68, clean rinsing = 0x69, disinfection = 0x6A, oil stains = 0x6B, memory = 0x6C, detergent saving = 0x6D, lightly soiled clothes = 0x6E, quick wash of small amount of laundry = 0x6F, tank cleaning = 0x7F Washing cource / maker original cource = 0x80 to 0x8F <Drying cource> Standard = 0xA1, blankets = 0xA2, soft = 0xA3, dry = 0xA4, ironing/business shirts = 0xA5, hang drying = 0xA6, thick clothes = 0xA7, disinfection = 0xA8, shrinkage minimization = 0xA9, finishing = 0xAA, stationary drying = 0xAB, user definition of drying time = 0xAC, garment warming = 0xAD, tank drying = 0xBF Drying cource / maker original cource = 0xC0 to 0xCF\n\nName : Washer and dryer cycle setting 1 (Note 1)\nEPC : 0xD0\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_WASHING_AND_DRYING_COURSE_SETTING_1": "Washing and drying course setting 1",
		"$EPCNAME_WASHING_AND_DRYING_COURSE_SETTING_2": "Washing and drying course setting 2",
		"$EPCDOC_03D3_D1": "Used to specify the washer and dryer cycle option(s) to use in the  gwashing and drying h mode, and to acquire the current setting(s). The drying option(s) to use shall be specified with the  gdrying cycle setting h property (EPC = 0xD2). Maker original code = 0xE0 to 0xEF\n\nNo washing = 0x20, standard = 0x21, silent = 0x22, heavily soiled clothes = 0x23, hard-to-remove stains = 0x24, presoaking = 0x25, blankets = 0x26, soft = 0x27, dry = 0x28, clean rinsing = 0x29, disinfection = 0x2D, oil stains = 0x2E, memory = 0x2F, detergent saving = 0x30, lightly soiled clothes = 0x31, quick wash of small amount of laundry = 0x32, tank cleaning = 0x3F Maker original cource = 0xE0 to 0xEF\n\nName : Washer and dryer cycle setting 2 (Note 1)\nEPC : 0xD1\nData Type : unsign ed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_WASHING_AND_DRYING_COURSE_SETTING_2": "Washing and drying course setting 2",
		"$EPCNAME_DRYING_METHOD_SETTING": "Drying method setting",
		"$EPCDOC_03D3_D2": "Used to specify the drying cycle option(s) to use, and to acquire the current setting. For the  gwashing and drying h mode, the  gwasher and dryer cycle setting 2 h property (EPC = 0xD1) shall be used. Maker original code = 0xE0 to 0xEF\n\nNo drying = 0xA0, standard = 0xA1, blankets = 0xA2, soft = 0xA3, dry = 0xA4, ironing/business shirts = 0xA5, hang drying = 0xA6, thick clothes = 0xA7, disinfection = 0xA8, shrinkage minimization = 0xA9, finishing = 0xAA, stationary drying = 0xAB, user definition of drying time = 0xAC, garment warming = 0xAD, heater current limit = 0xAE, tank drying = 0xBF Maker original cource = 0xE0 to 0xEF\n\nName : Drying cycle setting (Note1)\nEPC : 0xD2\nData Type : unsign ed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_DRYING_METHOD_SETTING": "Drying method setting",
		"$EPCNAME_CONFIGURABLE_COURSE_INFORMATION_1": "Configurable course information 1",
		"$EPCDOC_03D3_D3": "Used to acquire a bitmap list of the washer and dryer cycle options that can be specified with the  gwasher and dryer cycle setting 1 h property.\n\nWhen the value contained in the bit for the desired washer and dryer cycle option is  g1 h, the option can be specified. When the value contained in the bit for the desired washer and dryer cycle option is  g0 h, the option cannot be specified. For the requirement as to which bit must be used for which option, refer to the detailed explanation.\n\nName : Washer and dryer cycle option list 1\nEPC : 0xD3\nData Type : unsign ed char  ~12,\nData Size(Byte) : 12 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_CONFIGURABLE_COURSE_INFORMATION_1": "Configurable course information 1",
		"$EPCNAME_CONFIGURABLE_COURSE_INFORMATION_2": "Configurable course information 2",
		"$EPCDOC_03D3_D4": "Used to acquire a bitmap list of the washer and dryer cycle options that can be specified with the  gwasher and dryer cycle setting 2 h property.\n\nWhen the value contained in the bit for the desired washer and dryer cycle option is  g1 h, the option can be specified. When the value contained in the bit for the desired washer and dryer cycle option is  g0 h, the option cannot be specified. For the requirement as to which bit must be used for which option, refer to the detailed explanation.\n\nName : Washer and dryer cycle option list 2\nEPC : 0xD4\nData Type : unsign ed char  ~4,\nData Size(Byte) : 4 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_CONFIGURABLE_COURSE_INFORMATION_2": "Configurable course information 2",
		"$EPCNAME_SETTING_POSSIBLE_COURSE_INFORMATION_3": "Setting possible course information 3",
		"$EPCDOC_03D3_D5": "Used to acquire a bitmap list of the drying cycle options that can be specified with the  gdrying cycle setting h property.\n\nWhen the value contained in the bit for the desired drying cycle option is  g1 h, the option can be specified. When the value contained in the bit for the desired drying cycle option is  g0 h, the option cannot be specified. For the requirement as to which bit must be used for which option, refer to the detailed explanation.\n\nName : Washer and dryer cycle option list 3\nEPC : 0xD5\nData Type : unsign ed char  ~4,\nData Size(Byte) : 4 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_SETTING_POSSIBLE_COURSE_INFORMATION_3": "Setting possible course information 3",
		"$EPCNAME_WATER_FLOW_SETTING": "Water flow setting",
		"$EPCDOC_03D3_D6": "Used to specify the water flow rate by selecting a level from among the predefined levels and to acquire the current setting.\n\n<Absolute setting> 0x31 to 0x40 (16 levels) * 0x31 and 0x40 shall be used for the lowest and highest flow rates, respectively. <Relative setting relative to the automatic setting> - Automatic setting 0xFF - Relative setting in the positive direction 0xA0 to 0xA7: Levels 1 to 8 - Relative setting in the negative direction 0xC0 to 0xC7: Levels 1 to 8\n\nName : Water flow rate setting\nEPC : 0xD6\nData Type : unsign ed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_WATER_FLOW_SETTING": "Water flow setting",
		"$EPCNAME_DEHYDRATION_ROTATION_SPEED_SETTING_VALUE": "Dehydration rotation speed setting value",
		"$EPCDOC_03D3_D7": "Used to specify the rotation speed for spin drying in r/min. and to acquire the current setting.\n\n<Absolute setting> - 0x0000 to 0x0FFF (0 to 4095 r/min.) <Relative setting relative to the automatic setting> - Automatic setting 0xFFFF - Relative setting in the positive direction 0xA000 to 0xA7FF (1 to 2048 r/min.) - Relative setting in the negative direction 0xC000 to 0xC7FF (1 to 2048r/min.)\n\nName :  gRotation speed for spin drying h setting\nEPC : 0xD7\nData Type : unsign ed short\nData Size(Byte) : 2 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_DEHYDRATION_ROTATION_SPEED_SETTING_VALUE": "Dehydration rotation speed setting value",
		"$EPCNAME_DRYNESS_SETTING": "Dryness setting",
		"$EPCDOC_03D3_D8": "Used to specify the degree of drying to achieve by selecting a level from among the 16 predefined levels and to acquire the current setting.\n\n<Absolute setting> - 0x31 to 0x40 (16 levels) * 0x31 and 0x40 shall be used for the lowest and highest levels, respectively. <Relative setting relative to the automatic setting> - Automatic setting 0xFF - Relative setting in the positive direction 0xA0 to 0xA7: Levels 1 to 8 - Relative setting in the negative direction 0xC0 to 0xC7: Levels 1 to 8\n\nName :  gDegree of drying h setting\nEPC : 0xD8\nData Type : unsign ed char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_DRYNESS_SETTING": "Dryness setting",
		"$EPCDOC_03D3_DB": "Acquires the remaining washing time in .the . gHH:MM h .format.\n\n0-0xFE F0-0x3B (=0-254) hours F(=0-59) minutes Remaining time unknown=0xFF F 0xFF\n\nName : Remaining washing time\nEPC : 0xDB\nData Type : unsigne d char  ~2\nData Size(Byte) : 2 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCDOC_03D3_DC": "Acquires the remaining drying time .in .the . gHH:MM h .format.\n\n0-0xFE F0-0x3B (=0-254) hours F(=0-59) minutes Remaining time unknown=0xFF F0xFF\n\nName : Remaining drying time\nEPC : 0xDC\nData Type : unsign ed\nData Size(Byte) : 2 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$EPCNAME_ON_TIMER_ELAPSED_TIME": "ON timer elapsed time",
		"$EPCDOC_03D3_DF": "Used to acquire the time elapsed on the ON timer after the ON timer was activated.\n\n0 to 0xFF: 0 to 0x3B (= 0 to 255): (= 0 to 59)\n\nName : Elapsed time on the ON timer\nEPC : 0xDF\nData Type : unsigne d char  ~2\nData Size(Byte) : 2 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_ON_TIMER_ELAPSED_TIME": "ON timer elapsed time",
		"$EPCNAME_TSUKEOKI_STROKE_TIME_SETTING_VALUE": "Tsukeoki stroke time setting value",
		"$EPCDOC_03D3_E1": "Used to specify the duration of the presoaking process and to acquire the current setting.\n\n<Absolute setting> - 0x00 to 0x17: 0x00 to 0x3B (= 0 to 23 hours): (= 0 to 59 minutes) <Relative setting relative to the automatic setting> - Automatic setting 0xFF: 0xFF - Relative setting in the positive direction 0xA000 to 0xA03B: 1 to 60 minutes - Relative setting in the negative direction 0xC000 to 0xC03B: 1 to 60 minutes\n\nName : Presoaking time setting\nEPC : 0xE1\nData Type : unsigne d char  ~2\nData Size(Byte) : 2 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_TSUKEOKI_STROKE_TIME_SETTING_VALUE": "Tsukeoki stroke time setting value",
		"$EPCNAME_WASHING_AND_DRYING_TRANSITION_STATE": "Washing and drying transition state",
		"$EPCDOC_03D3_E2": "Used to acquire the current stage of the washer and dryer cycle.\n\nWashing = 0x41 Rinsing = 0x42 Spin drying = 0x43 Suspended = 0x44 Washing completed = 0x45 Washing/drying (without wrinkling minimization) completed = 0x51 Drying = 0x52 Wrinkling minimization = 0x53 Drying (with wrinkling minimization) completed = 0x54 Standing by to start = 0x61 1st rinsing = 0x71 2nd rinsing = 0x72 3rd rinsing = 0x73 4th rinsing = 0x74 5th rinsing = 0x75 6th rinsing = 0x76 7th rinsing = 0x77 8th rinsing = 0x78 1st spin drying = 0x81 2nd spin drying = 0x82 3rd spin drying = 0x83 4th spin drying = 0x84 5th spin drying = 0x85 6th spin drying = 0x86 7th spin drying = 0x87 8th spin drying = 0x88 Preheat spin drying = 0x91 Unique code defined by the manufature = 0xE0 to 0xEF\n\nName : Current stage of washer and dryer cycle\nEPC : 0xE2\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_WASHING_AND_DRYING_TRANSITION_STATE": "Washing and drying transition state",
		"$EPCNAME_THE_AMOUNT_OF_WATER_SET_1": "The amount of water set 1",
		"$EPCDOC_03D3_E3": "Used to specify the water volume in liters and to acquire the current setting.\n\n<Absolute setting> - 0x00 to 0x7F (0 to 127 liters) < Relative setting relative to the automatic setting > - Automatic setting 0xFF - Relative setting in the positive direction 0xA0 to 0xBF: 1 to 32 liters - Relative setting in the negative direction 0xC0 to 0xDF (1 to 32 liters)\n\nName : Water volume setting 1\nEPC : 0xE3\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_THE_AMOUNT_OF_WATER_SET_1": "The amount of water set 1",
		"$EPCNAME_THE_AMOUNT_OF_WATER_SET_2": "The amount of water set 2",
		"$EPCDOC_03D3_E4": "Used to specify the water volume by selecting a level from among the predefined levels and to acquire the current setting.\n\n<Absolute setting> - 0x31 to 0x40 (16 levels) - 0x31 and 0x40 shall be used for the lowest and highest water levels, respectively. < Relative setting relative to the automatic setting > - Automatic setting 0xFF - Relative setting in the positive direction 0xA0 to 0xA7: Levels 1 to 8 - Relative setting in the negative direction 0xC0 to 0xC7: Levels 1 to 8\n\nName : Water volume setting 2\nEPC : 0xE4\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_THE_AMOUNT_OF_WATER_SET_2": "The amount of water set 2",
		"$EPCNAME_WASH_TIME_SETTING": "Wash time setting",
		"$EPCDOC_03D3_E5": "Used to specify the duration of the washing process and to acquire the current setting.\n\n<Absolute setting> - 0x00 to 0x17: 0x00 to 0x3B (= 0 to 23 hours): (= 0 to 59 minutes) < Relative setting relative to the automatic setting > - Automatic setting 0xFF - Relative setting in the positive direction 0xA000 to 0xA03B: 1 to 60 minutes Relative setting in the negative direction - 0xC000 to 0xC03B: 1 to 60 minutes\n\nName : Washing time setting\nEPC : 0xE5\nData Type : unsigned char  ~2\nData Size(Byte) : 2 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_WASH_TIME_SETTING": "Wash time setting",
		"$EPCNAME_RINSE_THE_NUMBER_OF_TIMES_THE_SET_VALUE": "Rinse the number of times the set value",
		"$EPCDOC_03D3_E6": "Used to specify the number of times of rinsing and to acquire the current setting.\n\n0 to 8 times (0x00 to 0x08) Automatic = 0xFF\n\nName :  gNumber of times of rinsing h setting\nEPC : 0xE6\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_RINSE_THE_NUMBER_OF_TIMES_THE_SET_VALUE": "Rinse the number of times the set value",
		"$EPCNAME_MODE_SETTING_RINSE": "Mode setting rinse",
		"$EPCDOC_03D3_E7": "Used to specify the rinsing process(es) to use by means of a bitmap, and to acquire the current setting. Four bits are used to represent each rinsing process as follows: Bits 0 through bit 3: 1st rinsing Bits 4 through bit 7: 2nd rinsing Bits 8 through bit 11: 3rd rinsing Bits 12 through bit 15: 4th rinsing Bits 16 through bit 19: 5th rinsing Bits 20 through bit 23: 6th rinsing Bits 24 through bit 27: 7th rinsing Bits 28 through bit 31: 8th rinsing\n\n0000: Automatic mode 0001: Rinsing without additional feeding of water from the tap 0010: Rinsing with additional feeding of water from the tap 0011: Shower rinsing\n\nName : Rinsing process setting\nEPC : 0xE7\nData Type : unsigned char  ~4\nData Size(Byte) : 4 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_MODE_SETTING_RINSE": "Mode setting rinse",
		"$EPCNAME_DEHYDRATION_TIME_SETTING": "Dehydration time setting",
		"$EPCDOC_03D3_E8": "Used to specify the duration of the spin drying process in minutes and to acquire the current setting.\n\n<Absolute setting> - 0x00 to 0x3B (0 to 59 minutes) < Relative setting relative to the automatic setting > - Automatic setting 0xFF - Relative setting in the positive direction 0xA0 to 0xBF: 1 to 32 minutes - Relative setting in the negative direction 0xC0 to 0xDF: 1 to 32 minute\n\nName : Spin drying time setting\nEPC : 0xE8\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_DEHYDRATION_TIME_SETTING": "Dehydration time setting",
		"$EPCNAME_DRYING_TIME_SETTING": "Drying time setting",
		"$EPCDOC_03D3_E9": "Used to specify the duration of the drying process and to acquire the current setting.\n\n<Absolute setting> - 0x00 to 0x17: 0x00 to 0x3B (= 0 to 23 hours): (= 0 to 59 minutes) < Relative setting relative to the automatic setting > - Automatic setting 0xFF: 0xFF - Relative setting in the positive direction 0xA000 to 0xA03B: 1 to 60 minutes - Relative setting in the negative direction 0xC000 to 0xC03B: 1 to 60 minutes\n\nName : Drying time setting\nEPC : 0xE9\nData Type : unsigned char  ~2\nData Size(Byte) : 2 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_DRYING_TIME_SETTING": "Drying time setting",
		"$EPCNAME_WASH_WARM_WATER_SETTING": "Wash warm water setting",
		"$EPCDOC_03D3_EA": "Used to specify the temperature of laundry water in   and to acquire the current setting.\n\n0 to 100  C (0x00 to 0x64) Not to use warm water = 0xFE Automatic water temperature setting = 0xFF\n\nName : Warm water setting\nEPC : 0xEA\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_WASH_WARM_WATER_SETTING": "Wash warm water setting",
		"$EPCNAME_BATH_WATER_SETTING": "Bath water setting",
		"$EPCDOC_03D3_EB": "Used to specify whether or not, and when, to recycle used bathtub water, and acquire the current setting.\n\nBathtub water not used   : 0x40 Washing only                      : 0x41 Rinsing only (excluding the final rinsing)                               : 0x42 All rinsing processes        : 0x43 Washing + rinsing (excluding the final rinsing)                       : 0x44 Washing + all rinsing processes                            : 0x45\n\nName : Bathtub water recycle setting\nEPC : 0xEB\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_BATH_WATER_SETTING": "Bath water setting",
		"$EPCNAME_SOFT_KEEP_SETTING": "Soft keep setting",
		"$EPCDOC_03D3_EC": "Used to specify whether or not to use the wrinkling minimization function, and to acquire the current setting.\n\nWrinkling minimization function ON                  : 0x41 Wrinkling minimization function OFF                : 0x42\n\nName : Wrinkling minimization setting\nEPC : 0xEC\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_SOFT_KEEP_SETTING": "Soft keep setting",
		"$EPCNAME_WASHING_AND_DRYING_THE_REMAINING_TIME": "Washing and drying the remaining time",
		"$EPCDOC_03D3_ED": "Used to acquire the time remaining to complete the current washer and dryer .cycle .in .the . gHH: .MM h .format.\n\n0 to 0xFE: 0 to 0x3B (= 0 to 254 hours): (= 0 to 59 minutes) Remaining time unknown = 0xFF: 0xFF\n\nName : Time remaining to complete washer and dryer cycle\nEPC : 0xED\nData Type : unsigned char  ~2\nData Size(Byte) : 2 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_WASHING_AND_DRYING_THE_REMAINING_TIME": "Washing and drying the remaining time",
		"$EPCNAME_DOOR_LID_LOCK_IS_SET_IN_OPERATION": "Door-lid lock is set in operation",
		"$EPCDOC_03D3_EE": "Used to specify the state of the door/cover lock during operation and to acquire the current setting.\n\nLocked: 0x41 Unlocked: 0x42\n\nName : Door/cover lock    setting\nEPC : 0xEE\nData Type : unsigned char\nData Size(Byte) : 1 byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_DOOR_LID_LOCK_IS_SET_IN_OPERATION": "Door-lid lock is set in operation",
		"$EPCNAME_WASHING_AND_DRYING_PROCESS_INFORMATION": "Washing and drying process information",
		"$EPCDOC_03D3_EF": "Used to acquire the current washer and dryer cycle setting.\n\nBytes 1 and 2: This property indicates the available items in a bitmap format. Byte 3: Presoaking With presoaking: 0x41 Without presoaking: 0x42 Bytes 4 and 5: Washing time The value of the  gwashing time setting h property shall be referenced. Byte 6: Number of times of rinsing The value of the  g fnumber of times of rinsing f setting h property shall be referenced. Bytes 7 through 10: Rinsing process The value of the  grinsing process setting h property shall be referenced. Byte 11: Spin drying time The value of the  gspin drying time setting h property shall be referenced. Bytes 12 and 13: Drying time The value of the  hdrying time setting h property shall be referenced. Byte 14: Warm water setting The value of the  gwarm water setting h property shall be referenced. Byte 15: Water volume setting 1 The value of the  gwater volume setting 1 h property shall be referenced. Byte 16: Water volume setting 2 The value of the  gwater volume setting 2 h property shall be referenced. Byte 17: Bathtub water recycle setting The value of the  gbathtub water recycle setting h property shall be referenced. Byte 18: Water flow rate setting The value of the  gwater flow rate setting h property shall be referenced. Bytes 19 and 20:  gRotation speed for spin drying h setting The value of the  g frotation speed for spin drying f setting h property shall be referenced. Byte 21:  gDegree of drying h setting The value of the  g fdegree of drying f setting h property shall be referenced. Bytes 22 and 23: Presoaking time setting The value of the  gpresoaking time setting h property shall be referenced. Byte 24: Wrinkling minimization setting The value of the  gwrinkling minimization setting h property shall be referenced.\n\nName : Washer and dryer cycle\nEPC : 0xEF\nData Type : unsigned Char  ~24\nData Size(Byte) : 24 byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : optional\n",
		"$ELEMNAME_WASHING_AND_DRYING_PROCESS_INFORMATION": "Washing and drying process information",
		"$OBJNAME_03D4": "Commercial showcase for the outdoor unit",
		"$OBJNAME_0401": "Weight scale",
		"$EPCNAME_BODY_WEIGHT_MEASUREMENTS": "Body weight measurements",
		"$ELEMNAME_BODY_WEIGHT_MEASUREMENTS": "Body weight measurements",
		"$EPCNAME_BODY_FAT_MEASUREMENTS": "Body fat measurements",
		"$ELEMNAME_BODY_FAT_MEASUREMENTS": "Body fat measurements",
		"$OBJNAME_05FB": "DR event controller",
		"$EPCNAME_COMPANY_ID": "Company ID",
		"$ELEMNAME_COMPANY_ID": "Company ID",
		"$EPCNAME_DR_PROGRAM_TYPE": "DR program type",
		"$ELEMNAME_DR_PROGRAM_TYPE": "DR program type",
		"$EPCNAME_PROGRAM_ID": "Program ID",
		"$ELEMNAME_PROGRAM_ID": "Program ID",
		"$EPCNAME_CURRENTLY_VALID_EVENT_INFORMATION": "Currently valid event information",
		"$ELEMNAME_CURRENTLY_VALID_EVENT_INFORMATION": "Currently valid event information",
		"$EPCNAME_NEXT_VALID_EVENT_INFORMATION": "Next valid event information",
		"$ELEMNAME_NEXT_VALID_EVENT_INFORMATION": "Next valid event information",
		"$EPCNAME_FUTURE_EVENT_INFORMATION_NOTIFICATION_ID_LIST": "Future event information notification ID list",
		"$ELEMNAME_FUTURE_EVENT_INFORMATION_NOTIFICATION_ID_LIST": "Future event information notification ID list",
		"$EPCNAME_PAST_EVENTS_INFORMATION_NOTIFICATION_ID_LIST": "Past Events information notification ID list",
		"$ELEMNAME_PAST_EVENTS_INFORMATION_NOTIFICATION_ID_LIST": "Past Events information notification ID list",
		"$EPCNAME_LATEST_RECEIVE_EVENT_NOTIFICATION_ID": "Latest receive event notification ID",
		"$ELEMNAME_LATEST_RECEIVE_EVENT_NOTIFICATION_ID": "Latest receive event notification ID",
		"$EPCNAME_MOST_PAST_RECEIVE_EVENT_NOTIFICATION_ID": "Most past receive event notification ID",
		"$ELEMNAME_MOST_PAST_RECEIVE_EVENT_NOTIFICATION_ID": "Most past receive event notification ID",
		"$EPCNAME_NOTIFICATION_ID_SPECIFIED": "Notification ID specified",
		"$ELEMNAME_NOTIFICATION_ID_SPECIFIED": "Notification ID specified",
		"$EPCNAME_EVENT_INFORMATION_ID_SPECIFIED": "Event information ID specified",
		"$ELEMNAME_EVENT_INFORMATION_ID_SPECIFIED": "Event information ID specified",
		"$EPCNAME_TARGET_DEVICE_INFORMATION_LIST": "Target device information list",
		"$ELEMNAME_TARGET_DEVICE_INFORMATION_LIST": "Target device information list",
		"$EPCNAME_EVENT_INFORMATION": "event information",
		"$ELEMNAME_EVENT_INFORMATION": "event information",
		"$EPCNAME_CONFIRMATION_·_OPT_INFORMATION": "Confirmation · OPT information",
		"$ELEMNAME_CONFIRMATION_·_OPT_INFORMATION": "Confirmation · OPT information",
		"$EPCNAME_CONFIRMATION_·_OPT_INFORMATION_STATUS": "Confirmation · OPT information status",
		"$ELEMNAME_CONFIRMATION_·_OPT_INFORMATION_STATUS": "Confirmation · OPT information status",
		"$OBJNAME_05FD": "Switch (JEMA / HA terminal correspondence)",
		"$EPCDOC_05FD_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_CONNECTED_EQUIPMENT": "Connected equipment",
		"$EPCDOC_05FD_E0": "Name of the device to connect to\n\nStores the name of the type of the device.\n\nName : Connected device\nEPC : 0xE0\nData Type : unsigne d char\nData Size(Byte) : 12 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_CONNECTED_EQUIPMENT": "Connected equipment",
		"$OBJNAME_05FF": "controller",
		"$EPCNAME_CONTROLLER_ID": "Controller ID",
		"$ELEMNAME_CONTROLLER_ID": "Controller ID",
		"$EPCNAME_MANAGEMENT_NUMBER": "Management number",
		"$ELEMNAME_MANAGEMENT_NUMBER": "Management number",
		"$EPCNAME_INDEX": "index",
		"$ELEMNAME_INDEX": "index",
		"$EPCNAME_EQUIPMENT_ID": "Equipment ID",
		"$ELEMNAME_EQUIPMENT_ID": "Equipment ID",
		"$EPCNAME_MODEL": "Model",
		"$ELEMNAME_MODEL": "Model",
		"$EPCNAME_NAME": "name",
		"$ELEMNAME_NAME": "name",
		"$EPCNAME_CONNECTION_STATUS": "Connection Status",
		"$ELEMNAME_CONNECTION_STATUS": "Connection Status",
		"$EPCNAME_MANAGEMENT_EQUIPMENT_BUSINESS_CODE": "Management equipment business code",
		"$ELEMNAME_MANAGEMENT_EQUIPMENT_BUSINESS_CODE": "Management equipment business code",
		"$EPCNAME_MANAGEMENT_EQUIPMENT_PRODUCT_CODE": "Management equipment product code",
		"$ELEMNAME_MANAGEMENT_EQUIPMENT_PRODUCT_CODE": "Management equipment product code",
		"$EPCNAME_MANAGEMENT_EQUIPMENT_MANUFACTURING_DATE": "Management equipment manufacturing date",
		"$ELEMNAME_MANAGEMENT_EQUIPMENT_MANUFACTURING_DATE": "Management equipment manufacturing date",
		"$EPCNAME_MANAGEMENT_DEVICE_REGISTRATION_INFORMATION_UPDATE_DATE": "Management device registration information update date",
		"$ELEMNAME_MANAGEMENT_DEVICE_REGISTRATION_INFORMATION_UPDATE_DATE": "Management device registration information update date",
		"$EPCNAME_MANAGEMENT_DEVICE_REGISTRATION_INFORMATION_UPDATED_VERSION_INFORMATION": "Management device registration information updated version information",
		"$ELEMNAME_MANAGEMENT_DEVICE_REGISTRATION_INFORMATION_UPDATED_VERSION_INFORMATION": "Management device registration information updated version information",
		"$OBJNAME_0601": "display",
		"$EPCDOC_0601_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCNAME_DISPLAY_CONTROL_SETTINGS": "Display control settings",
		"$EPCDOC_0601_B0": "Sets the status as to whether the displaying of characters is enabled or disabled and acquires the current setting.\n\nDisplaying enabled: 0x30 Displaying disabled: 0x31\n\nName : Display control setting\nEPC : 0xB0\nData Type : unsigne d char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$ELEMNAME_DISPLAY_CONTROL_SETTINGS": "Display control settings",
		"$EPCNAME_STRING_SETTING_CAN_BE_ACCEPTED_STATE": "String setting can be accepted state",
		"$EPCDOC_0601_B1": "This property indicates whether or not the device is ready to accept the character string to present to the user.\n\nReady: 0x30        Busy: 0x31\n\nName : Character string setting acceptance status\nEPC : 0xB1\nData Type : unsigne d char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$ELEMNAME_STRING_SETTING_CAN_BE_ACCEPTED_STATE": "String setting can be accepted state",
		"$EPCNAME_DISPLAYABLE_CHARACTER_CODE": "Displayable character code",
		"$EPCDOC_0601_B2": "This property indicates, in a bit map format, the implemented character codes that can be used to present character strings.\n\nBit 0   ANSI X3.4 Implemented: 1 Not implemented: 0 Bit 1   Shift-JIS Implemented: 1 Not implemented: 0 Bit 2   JIS Implemented: 1 Not implemented: 0 Bit 3   Japanese EUC Implemented: 1 Not implemented: 0 Bit 4   UCS-4 Implemented: 1 Not implemented: 0 Bit 5   UCS-2 Implemented: 1 Not implemented: 0 Bit 6   Latin-1 Implemented: 1 Not implemented: 0 Bit 7   UTF-8 Implemented: 1 Not implemented: 0 Bit 8 and succeeding bits: for future reserved    0\n\nName : Supported character codes\nEPC : 0xB2\nData Type : unsigne d char ~ 2\nData Size(Byte) : 2 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_DISPLAYABLE_CHARACTER_CODE": "Displayable character code",
		"$EPCNAME_TRANSMISSION_STRING_SETTING": "Transmission string setting",
		"$EPCDOC_0601_B3": "Sets the character string to present to the user, the length of the character string and the character code to use to present the character string and acquires the stored setting. The highest-order byte shall indicate the byte sequence data length of the character string to present to the user and the second-highest-order byte shall indicate the character code to use. The second-highest-order byte shall be followed by a byte containing  g0x00 h (for future reserved), which shall be followed by a number of bytes, each assigned with one of the first and succeeding bytes, starting with the first byte, of the character string to present to the user. The lowest-order byte shall be assigned with the last byte of the character string to present to the user.\n\nFirst byte: Byte code sequence data length of the character string to present to the user converted to the hexadecimal format Second byte: Character code to use Third byte: for future reserved Fourth and succeeding bytes: Byte code sequence of the character string to present to the user (max. 244 bytes) Each of the character codes listed below shall be assigned with the indicated code value. ANSI X3.4=0x01 Shift .JIS=0x02 JIS =0x03 Japanese EUC=0x04 UCS-4 =0x05 UCS-2 =0x06 Latin -1=0x07 UTF-8=0x08 0x09 and succeeding values = for future reserved\n\nName : Character string to present to the user\nEPC : 0xB3\nData Type : unsigne d    char  ~ Max 247\nData Size(Byte) : Max247 Byte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : optional\n",
		"$ELEMNAME_THE_LENGTH_OF_THE_STRING": "The length of the string",
		"$ELEMNAME_CHARACTER_CODE": "Character code",
		"$ELEMNAME_FIXED_DATA": "Fixed Data",
		"$ELEMNAME_CHARACTER_DATA": "Character data",
		"$EPCNAME_TRANSMISSION_STRING_LENGTH_ACCEPTED": "Transmission string length accepted",
		"$EPCDOC_0601_B4": "This property indicates the total number of bytes of the newest character string to present to the user which has been set and is being held.\n\nFirst byte: 0x00 to 0xF4 Second byte: 0x00 (for future reserved)\n\nName : Length of character string accepted\nEPC : 0xB4\nData Type : unsigne d char\nData Size(Byte) : 2 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$ELEMNAME_TRANSMISSION_STRING_LENGTH_ACCEPTED": "Transmission string length accepted",
		"$OBJNAME_0602": "tv set",
		"$EPCDOC_0602_80": "This property indicates the ON/OFF status.\n\nON＝0x30，OFF＝0x31\n\nData Type : unsigned char\nData Size(Byte) : 1\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0602_B0": "Refer to the section on the requirements for the display class (class group code = 0x06, class code = 0x01).\n\n\n\nName : Display control setting\nEPC : 0xB0\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : optional\nGet : optional\n",
		"$EPCDOC_0602_B1": "Refer to the section on the requirements for the display class (class group code = 0x06, class code = 0x01).\n\n\n\nName : Character string setting acceptance status\nEPC : 0xB1\nData Type : unsigned char\nData Size(Byte) : 1 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n\nAnnouncement at status change\n",
		"$EPCDOC_0602_B2": "Refer to the section on the requirements for the display class (class group code = 0x06, class code = 0x01).\n\n\n\nName : Supported character codes\nEPC : 0xB2\nData Type : unsigned char ~ 2\nData Size(Byte) : 2 Byte\n\nAccessRule\nAnnounce : undefined\nSet : undefined\nGet : mandatory\n",
		"$EPCDOC_0602_B3": "Refer to the section on the requirements for the display class (class group code = 0x06, class code = 0x01).\n\n\n\nName : Character string to present to the user\nEPC : 0xB3\nData Type : unsigned char ~ Max 247\nData Size(Byte) : Max247 B yte\n\nAccessRule\nAnnounce : undefined\nSet : mandatory\nGet : optional\n",
		"$OBJNAME_0603": "audio",
		"$EPCNAME_INPUT_SOURCE_SETTINGS": "Input source settings",
		"$ELEMNAME_TYPE": "Type",
		"$ELEMNAME_NUMBER": "number",
		"$OBJNAME_0604": "Network camera",
		"$EPCNAME_STILL_IMAGE_SHOOTING_SETTINGS_CAN_BE_ACCEPTED_STATE": "Still image shooting settings can be accepted state",
		"$ELEMNAME_STILL_IMAGE_SHOOTING_SETTINGS_CAN_BE_ACCEPTED_STATE": "Still image shooting settings can be accepted state",
		"$EPCNAME_STILL_IMAGE_SHOOTING_SETTINGS": "Still image shooting settings",
		"$ELEMNAME_STILL_IMAGE_SHOOTING_SETTINGS": "Still image shooting settings",
		"$EPCNAME_TRANSFER_SETTINGS": "Transfer Settings",
		"$ELEMNAME_TRANSFER_SETTINGS": "Transfer Settings"
	},
	"nodeprofile_date": "2016/9/1",
	"nodeprofile_version": "1.12",
	"date": "2016/9/7",
	"version": "G"
}